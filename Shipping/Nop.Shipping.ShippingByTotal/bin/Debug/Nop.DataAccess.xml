<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nop.DataAccess</name>
    </assembly>
    <members>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountry">
            <summary>
            Represents a ShippingByWeightAndCountry
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.BaseDBEntity">
            <summary>
            Provides a base class for database entities
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountry.#ctor">
            <summary>
            Creates a new instance of the DBShippingByWeightAndCountry class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountry.ShippingByWeightAndCountryID">
            <summary>
            Gets or sets the ShippingByWeightAndCountry identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountry.ShippingMethodID">
            <summary>
            Gets or sets the shipping method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountry.CountryID">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountry.From">
            <summary>
            Gets or sets the "from" value
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountry.To">
            <summary>
            Gets or sets the "to" value
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountry.UsePercentage">
            <summary>
            Gets or sets a value indicating whether to use percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountry.ShippingChargePercentage">
            <summary>
            Gets or sets the shipping charge percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountry.ShippingChargeAmount">
            <summary>
            Gets or sets the shipping charge amount
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeight">
            <summary>
            Represents a DBShippingByWeight
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeight.#ctor">
            <summary>
            Creates a new instance of the DBShippingByWeight class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeight.ShippingByWeightID">
            <summary>
            Gets or sets the ShippingByWeight identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeight.ShippingMethodID">
            <summary>
            Gets or sets the shipping method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeight.From">
            <summary>
            Gets or sets the "from" value
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeight.To">
            <summary>
            Gets or sets the "to" value
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeight.UsePercentage">
            <summary>
            Gets or sets a value indicating whether to use percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeight.ShippingChargePercentage">
            <summary>
            Gets or sets the shipping charge percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeight.ShippingChargeAmount">
            <summary>
            Gets or sets the shipping charge amount
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderStatusCollection">
            <summary>
            Represents an order status collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.BaseDBEntityCollection`1">
            <summary>
            Provides a base class for database entity collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplate">
            <summary>
            Represents a message template
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplate.#ctor">
            <summary>
            Creates a new instance of the DBMessageTemplate class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplate.MessageTemplateID">
            <summary>
            Gets or sets the message template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplate.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingStatusProvider">
            <summary>
            Acts as a base class for deriving custom shipping status provider
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.BaseDBProvider">
            <summary>
            Provides a base class for abstract provider classes
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingStatusProvider.GetShippingStatusByID(System.Int32)">
            <summary>
            Gets a shipping status by ID
            </summary>
            <param name="ShippingStatusID">Shipping status identifier</param>
            <returns>Shipping status</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingStatusProvider.GetAllShippingStatuses">
            <summary>
            Gets all shipping statuses
            </summary>
            <returns>Shipping status collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethodProvider">
            <summary>
            Acts as a base class for deriving custom shipping method provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethodProvider.DeleteShippingMethod(System.Int32)">
            <summary>
            Deletes a shipping method
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethodProvider.GetShippingMethodByID(System.Int32)">
            <summary>
            Gets a shipping method
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <returns>Shipping method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethodProvider.GetAllShippingMethods">
            <summary>
            Gets all shipping methods
            </summary>
            <returns>Shipping method collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethodProvider.InsertShippingMethod(System.String,System.String,System.Int32)">
            <summary>
            Inserts a shipping method
            </summary>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Shipping method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethodProvider.UpdateShippingMethod(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Updates the shipping method
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Shipping method</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountryProvider">
            <summary>
            Acts as a base class for deriving custom ShippingByWeightAndCountry provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountryProvider.GetByID(System.Int32)">
            <summary>
            Gets a ShippingByWeightAndCountry
            </summary>
            <param name="ShippingByWeightAndCountryID">ShippingByWeightAndCountry identifier</param>
            <returns>ShippingByWeightAndCountry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountryProvider.DeleteShippingByWeightAndCountry(System.Int32)">
            <summary>
            Deletes a ShippingByWeightAndCountry
            </summary>
            <param name="ShippingByWeightAndCountryID">ShippingByWeightAndCountry identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountryProvider.GetAll">
            <summary>
            Gets all ShippingByWeightAndCountrys
            </summary>
            <returns>ShippingByWeightAndCountry collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountryProvider.InsertShippingByWeightAndCountry(System.Int32,System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Inserts a ShippingByWeightAndCountry
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="CountryID">The country identifier</param>
            <param name="From">The "from" value</param>
            <param name="To">The "to" value</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="ShippingChargePercentage">The shipping charge percentage</param>
            <param name="ShippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByWeightAndCountry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountryProvider.UpdateShippingByWeightAndCountry(System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Updates the ShippingByWeightAndCountry
            </summary>
            <param name="ShippingByWeightAndCountryID">The ShippingByWeightAndCountry identifier</param>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="CountryID">The country identifier</param>
            <param name="From">The "from" value</param>
            <param name="To">The "to" value</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="ShippingChargePercentage">The shipping charge percentage</param>
            <param name="ShippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByWeightAndCountry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountryProvider.GetAllByShippingMethodIDAndCountryID(System.Int32,System.Int32)">
            <summary>
            Gets all ShippingByWeightAndCountrys by shipping method identifier
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="CountryID">The country identifier</param>
            <returns>ShippingByWeightAndCountry collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionFilterCollection">
            <summary>
            Represents a collection of specification attribute filter option
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionFilter" -->
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionFilter.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionFilter.SpecificationAttributeID">
            <summary>
            Gets or sets the SpecificationAttributeID
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionFilter.SpecificationAttributeName">
            <summary>
            Gets or sets the SpecificationAttributeName
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionFilter.DisplayOrder">
            <summary>
            Gets or sets the DisplayOrder
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionFilter.SpecificationAttributeOptionID">
            <summary>
            Gets or sets the SpecificationAttributeOptionID
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionFilter.SpecificationAttributeOptionName">
            <summary>
            Gets or sets the SpecificationAttributeOptionName
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist">
            <summary>
            Represents a pricelist
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.#ctor">
            <summary>
            Creates a new instance of the DBPricelist class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.PricelistID">
            <summary>
            Gets or sets the Pricelist identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.ExportModeID">
            <summary>
            Gets or sets the Mode of list creation (Export all, assigned only, assigned only with special price)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.ExportTypeID">
            <summary>
            Gets or sets the CSV or XML
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.AffiliateID">
            <summary>
            Gets or sets the Affiliate connected to this pricelist (optional), links will be created with AffiliateID
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.DisplayName">
            <summary>
            Gets or sets the Displayedname
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.ShortName">
            <summary>
            Gets or sets the shortname to identify the pricelist
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.PricelistGuid">
            <summary>
            Gets or sets the unique identifier to get pricelist "anonymous"
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.CacheTime">
            <summary>
            Gets or sets the how long will the pricelist be in cached before new creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.FormatLocalization">
            <summary>
            Gets or sets the what localization will be used (numeric formats, etc.) en-US, de-DE etc.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.Description">
            <summary>
            Gets or sets the Displayed description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.AdminNotes">
            <summary>
            Gets or sets the Admin can put some notes here, not displayed in public
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.Header">
            <summary>
            Gets or sets the Headerline of the exported file (plain text)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.Body">
            <summary>
            Gets or sets the template for an exportet productvariant, uses delimiters and replacement strings
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.Footer">
            <summary>
            Gets or sets the Footer line of the exportet file (plain text)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.PriceAdjustmentTypeID">
            <summary>
            Gets or sets the type of price adjustment (if used) (relative or absolute)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.PriceAdjustment">
            <summary>
            Gets or sets the price will be adjusted by this amount (in accordance with PriceAdjustmentType)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.OverrideIndivAdjustment">
            <summary>
            Gets or sets the use individual adjustment, if available, or override
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.CreatedOn">
            <summary>
            Gets or sets the when was this record originally created
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.UpdatedOn">
            <summary>
            Gets or sets the last time this recordset was updated
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumPost">
            <summary>
            Represents a forum post
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumPost.#ctor">
            <summary>
            Creates a new instance of the DBForumPost class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumPost.ForumPostID">
            <summary>
            Gets or sets the forum post identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumPost.TopicID">
            <summary>
            Gets or sets the forum topic identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumPost.UserID">
            <summary>
            Gets or sets the user identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumPost.Text">
            <summary>
            Gets or sets the text
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumPost.IPAddress">
            <summary>
            Gets or sets the IP address
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumPost.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumPost.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLogCollection">
            <summary>
            Represents a search log item collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Templates.DBProductTemplateCollection">
            <summary>
            Represents a product template collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotal">
            <summary>
            Represents a ShippingByTotal
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotal.#ctor">
            <summary>
            Creates a new instance of the DBShippingByTotal class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotal.ShippingByTotalID">
            <summary>
            Gets or sets the ShippingByTotal identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotal.ShippingMethodID">
            <summary>
            Gets or sets the shipping method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotal.From">
            <summary>
            Gets or sets the "from" value
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotal.To">
            <summary>
            Gets or sets the "to" value
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotal.UsePercentage">
            <summary>
            Gets or sets a value indicating whether to use percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotal.ShippingChargePercentage">
            <summary>
            Gets or sets the shipping charge percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotal.ShippingChargeAmount">
            <summary>
            Gets or sets the shipping charge amount
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount">
            <summary>
            Represents a discount
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.#ctor">
            <summary>
            Creates a new instance of the DBDiscount class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.DiscountID">
            <summary>
            Gets or sets the discount identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.DiscountTypeID">
            <summary>
            Gets or sets the discount type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.DiscountRequirementID">
            <summary>
            Gets or sets the discount requirement identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.UsePercentage">
            <summary>
            Gets or sets a value indicating whether to use percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.DiscountPercentage">
            <summary>
            Gets or sets the discount percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.DiscountAmount">
            <summary>
            Gets or sets the discount amount
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.StartDate">
            <summary>
            Gets or sets the discount start date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.EndDate">
            <summary>
            Gets or sets the discount end date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.RequiresCouponCode">
            <summary>
            Gets or sets a value indicating whether discount requires coupon code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.CouponCode">
            <summary>
            Gets or sets the coupon code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBRelatedProductCollection">
            <summary>
            Represents a related product collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant">
            <summary>
            Represents a product variant
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.#ctor">
            <summary>
            Creates a new instance of the DBProductVariant class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.ProductVariantID">
            <summary>
            Gets or sets the product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.ProductID">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.SKU">
            <summary>
            Gets or sets the SKU
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.AdminComment">
            <summary>
            Gets or sets the admin comment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.ManufacturerPartNumber">
            <summary>
            Gets or sets the manufacturer part number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.IsDownload">
            <summary>
            Gets or sets a value indicating whether the product variant is download
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.DownloadID">
            <summary>
            Gets or sets the download identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.UnlimitedDownloads">
            <summary>
            Gets or sets a value indicating whether this downloadable product can be downloaded unlimited number of times
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.MaxNumberOfDownloads">
            <summary>
            Gets or sets the maximum number of downloads
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.HasSampleDownload">
            <summary>
            Gets or sets a value indicating whether the product variant has a sample download file
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.SampleDownloadID">
            <summary>
            Gets or sets the sample download identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.IsShipEnabled">
            <summary>
            Gets or sets a value indicating whether the entity is ship enabled
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.IsFreeShipping">
            <summary>
            Gets or sets a value indicating whether the entity is free shipping
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.AdditionalShippingCharge">
            <summary>
            Gets or sets the additional shipping charge
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.IsTaxExempt">
            <summary>
            Gets or sets a value indicating whether the product variant is marked as tax exempt
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.TaxCategoryID">
            <summary>
            Gets or sets the tax category identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.ManageInventory">
            <summary>
            Gets or sets a value indicating whether to manage inventory
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.StockQuantity">
            <summary>
            Gets or sets the stock quantity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.MinStockQuantity">
            <summary>
            Gets or sets the minimum stock quantity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.LowStockActivityID">
            <summary>
            Gets or sets the low stock activity identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.NotifyAdminForQuantityBelow">
            <summary>
            Gets or sets the quantity when admin should be notified
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.OrderMinimumQuantity">
            <summary>
            Gets or sets the order minimum quantity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.OrderMaximumQuantity">
            <summary>
            Gets or sets the order maximum quantity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.WarehouseId">
            <summary>
            Gets or sets the warehouse identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.DisableBuyButton">
            <summary>
            Gets or sets a value indicating whether to disable buy button
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.Price">
            <summary>
            Gets or sets the price
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.OldPrice">
            <summary>
            Gets or sets the old price
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.Weight">
            <summary>
            Gets or sets the weight
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.Length">
            <summary>
            Gets or sets the length
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.Width">
            <summary>
            Gets or sets the width
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.Height">
            <summary>
            Gets or sets the height
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.PictureID">
            <summary>
            Gets or sets the picture identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.AvailableStartDateTime">
            <summary>
            Gets or sets the available start date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.AvailableEndDateTime">
            <summary>
            Gets or sets the shipped end date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeCollection">
            <summary>
            Represents a product attribute collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider">
            <summary>
            Acts as a base class for deriving custom specification attribute provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.GetSpecificationAttributeByID(System.Int32)">
            <summary>
            Gets a specification attribute
            </summary>
            <param name="SpecificationAttributeID">The specification attribute identifier</param>
            <returns>Specification attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.GetSpecificationAttributes">
            <summary>
            Gets specification attribute collection
            </summary>
            <returns>Specification attribute collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.DeleteSpecificationAttribute(System.Int32)">
            <summary>
            Deletes a specification attribute
            </summary>
            <param name="SpecificationAttributeID">The specification attribute identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.InsertSpecificationAttribute(System.String,System.Int32)">
            <summary>
            Inserts a specification attribute
            </summary>
            <param name="name">The name</param>
            <param name="displayOrder">Display order</param>
            <returns>Specification attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.UpdateSpecificationAttribute(System.Int32,System.String,System.Int32)">
            <summary>
            Updates the specification attribute
            </summary>
            <param name="specificationAttributeID">The specification attribute identifier</param>
            <param name="name">The name</param>
            <param name="displayOrder">Display order</param>
            <returns>Specification attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.GetSpecificationAttributeOptions">
            <summary>
            Gets a specification attribute option collection
            </summary>
            <returns>Specification attribute option collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.GetSpecificationAttributeOptionByID(System.Int32)">
            <summary>
            Gets a specification attribute option
            </summary>
            <param name="specificationAttributeOptionID">The specification attribute option identifier</param>
            <returns>Specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.GetSpecificationAttributeOptionsBySpecificationAttributeID(System.Int32)">
            <summary>
            Gets specification attribute option collection
            </summary>
            <param name="specificationAttributeID">Specification attribute unique identifier</param>
            <returns>Specification attribute option collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.InsertSpecificationAttributeOption(System.Int32,System.String,System.Int32)">
            <summary>
            Inserts a specification attribute option
            </summary>
            <param name="name">The name</param>
            <param name="displayOrder">Display order</param>
            <returns>Specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.UpdateSpecificationAttributeOption(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Updates the specification attribute option
            </summary>
            <param name="specificationAttributeOptionID">The specification attribute option identifier</param>
            <param name="specificationAttributeID">The specification attribute identifier</param>
            <param name="name">The name</param>
            <param name="displayOrder">Display order</param>
            <returns>Specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.DeleteSpecificationAttributeOption(System.Int32)">
            <summary>
            Deletes a specification attribute option
            </summary>
            <param name="specificationAttributeOptionID">The specification attribute option identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.GetProductSpecificationAttributesByProductID(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Gets a product specification attribute mapping collection
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="AllowFiltering">0 to load attributes with AllowFiltering set to false, 0 to load attributes with AllowFiltering set to true, null to load all attributes</param>
            <param name="ShowOnProductPage">0 to load attributes with ShowOnProductPage set to false, 0 to load attributes with ShowOnProductPage set to true, null to load all attributes</param>
            <returns>Product specification attribute mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.GetProductSpecificationAttributeByID(System.Int32)">
            <summary>
            Gets a product specification attribute mapping 
            </summary>
            <param name="ProductSpecificationAttributeID">Product specification attribute mapping identifier</param>
            <returns>Product specification attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.GetSpecificationAttributeOptionFilterByCategoryID(System.Int32)">
            <summary>
            Gets all specification attribute option filter mapping collection by category id
            </summary>
            <param name="CategoryID">Product category identifier</param>
            <returns>Specification attribute option filter mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.InsertProductSpecificationAttribute(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Inserts a product specification attribute mapping
            </summary>
            <param name="productID">Product identifier</param>
            <param name="specificationAttributeOptionID">Specification attribute option identifier</param>
            <param name="allowFiltering">Allow product filtering by this attribute</param>
            <param name="showOnProductPage">Show the attribute on the product page</param>
            <param name="displayOrder">The display order</param>
            <returns>Product specification attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.UpdateProductSpecificationAttribute(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Updates the product specification attribute mapping
            </summary>
            <param name="productSpecificationAttributeID">product specification attribute mapping identifier</param>
            <param name="productID">Product identifier</param>
            <param name="specificationAttributeOptionID">Specification attribute option identifier</param>
            <param name="allowFiltering">Allow product filtering by this attribute</param>
            <param name="showOnProductPage">Show the attribute onn the product page</param>
            <param name="displayOrder">The display order</param>
            <returns>Product specification attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.DeleteProductSpecificationAttribute(System.Int32)">
            <summary>
            Deletes a product specification attribute mapping
            </summary>
            <param name="ProductSpecificationAttributeID">Product specification attribute identifier</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureProvider">
            <summary>
            Acts as a base class for deriving custom measure provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureProvider.GetMeasureDimensionByID(System.Int32)">
            <summary>
            Gets a measure dimension by identifier
            </summary>
            <param name="MeasureDimensionID">Measure dimension identifier</param>
            <returns>Measure dimension</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureProvider.GetAllMeasureDimensions">
            <summary>
            Gets all measure dimensions
            </summary>
            <returns>Measure dimension collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureProvider.GetMeasureWeightByID(System.Int32)">
            <summary>
            Gets a measure weight by identifier
            </summary>
            <param name="MeasureWeightID">Measure weight identifier</param>
            <returns>Measure weight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureProvider.GetAllMeasureWeights">
            <summary>
            Gets all measure weights
            </summary>
            <returns>Measure weight collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Audit.DBLogProvider">
            <summary>
            Acts as a base class for deriving custom log provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBLogProvider.DeleteLog(System.Int32)">
            <summary>
            Deletes a log item
            </summary>
            <param name="LogID">Log item identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBLogProvider.ClearLog">
            <summary>
            Clears a log
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBLogProvider.GetAllLogs">
            <summary>
            Gets all log items
            </summary>
            <returns>Log item collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBLogProvider.GetLogByID(System.Int32)">
            <summary>
            Gets a log item
            </summary>
            <param name="LogID">Log item identifier</param>
            <returns>Log item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBLogProvider.InsertLog(System.Int32,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.DateTime)">
            <summary>
            Inserts a log item
            </summary>
            <param name="LogTypeID">Log item type identifier</param>
            <param name="Severity">The severity</param>
            <param name="Message">The short message</param>
            <param name="Exception">The full exception</param>
            <param name="IPAddress">The IP address</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="PageURL">The page URL</param>
            <param name="CreatedOn">The date and time of instance creationL</param>
            <returns>Log item</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerSessionCollection">
            <summary>
            Represents a customer session collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopic">
            <summary>
            Represents a localized topic
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopic.#ctor">
            <summary>
            Creates a new instance of the DBLocalizedTopic class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopic.TopicLocalizedID">
            <summary>
            Gets or sets the localized topic identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopic.TopicID">
            <summary>
            Gets or sets the topic identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopic.LanguageID">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopic.Title">
            <summary>
            Gets or sets the title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopic.Body">
            <summary>
            Gets or sets the body
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopic.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopic.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogComment">
            <summary>
            Represents a blog comment
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogComment.#ctor">
            <summary>
            Creates a new instance of the DBBlogComment class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogComment.BlogCommentID">
            <summary>
            Gets or sets the blog comment identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogComment.BlogPostID">
            <summary>
            Gets or sets the blog post identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogComment.CustomerID">
            <summary>
            Gets or sets the customer identifier who commented the blog post
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogComment.CommentText">
            <summary>
            Gets or sets the comment text
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogComment.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Audit.DBLogCollection">
            <summary>
            Represents a log collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountType">
            <summary>
            Represents a discount type
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountType.#ctor">
            <summary>
            Creates a new instance of the DBDiscountType class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountType.DiscountTypeID">
            <summary>
            Gets or sets the discount type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountType.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate">
            <summary>
            Represents an affiliate
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.#ctor">
            <summary>
            Creates a new instance of the DBAffiliate class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.AffiliateID">
            <summary>
            Gets or sets the affiliate identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.FirstName">
            <summary>
            Gets or sets the first name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.LastName">
            <summary>
            Gets or sets the last name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.MiddleName">
            <summary>
            Gets or sets the middle name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.PhoneNumber">
            <summary>
            Gets or sets the phone number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.Email">
            <summary>
            Gets or sets the email
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.FaxNumber">
            <summary>
            Gets or sets the fax number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.Company">
            <summary>
            Gets or sets the company
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.Address1">
            <summary>
            Gets or sets the address 1
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.Address2">
            <summary>
            Gets or sets the address 2
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.City">
            <summary>
            Gets or sets the city
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.StateProvince">
            <summary>
            Gets or sets the state/province
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.ZipPostalCode">
            <summary>
            Gets or sets the zip/postal code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.CountryID">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.Active">
            <summary>
            Gets or sets a value indicating whether the entity is active
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplateCollection">
            <summary>
            Represents a message template collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguageCollection">
            <summary>
            Represents a language collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSettingProvider">
            <summary>
            Acts as a base class for deriving custom setting provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSettingProvider.GetSettingByID(System.Int32)">
            <summary>
            Gets a setting
            </summary>
            <param name="SettingID">Setting identifer</param>
            <returns>Setting</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSettingProvider.DeleteSetting(System.Int32)">
            <summary>
            Deletes a setting
            </summary>
            <param name="SettingID">Setting identifer</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSettingProvider.GetAllSettings">
            <summary>
            Gets all settings
            </summary>
            <returns>Setting collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSettingProvider.AddSetting(System.String,System.String,System.String)">
            <summary>
            Adds a setting
            </summary>
            <param name="Name">The name</param>
            <param name="Value">The value</param>
            <param name="Description">The description</param>
            <returns>Setting</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSettingProvider.UpdateSetting(System.Int32,System.String,System.String,System.String)">
            <summary>
            Updates a setting
            </summary>
            <param name="SettingID">Setting identifier</param>
            <param name="Name">The name</param>
            <param name="Value">The value</param>
            <param name="Description">The description</param>
            <returns>Setting</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider">
            <summary>
            Acts as a base class for deriving custom product provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetAllProducts(System.Boolean)">
            <summary>
            Gets all products
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetAllProducts(System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Boolean,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32},System.Boolean,System.Int32@)">
            <summary>
            Gets all products
            </summary>
            <param name="CategoryID">Category identifier</param>
            <param name="ManufacturerID">Manufacturer identifier</param>
            <param name="FeaturedProducts">A value indicating whether loaded products are marked as featured (relates only to categories and manufacturers). 0 to load featured products only, 1 to load not featured products only, null to load all products</param>
            <param name="PriceMin">Minimum price</param>
            <param name="PriceMax">Maximum price</param>
            <param name="Keywords">Keywords</param>
            <param name="SearchDescriptions">A value indicating whether to search in descriptions</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="FilteredSpecs">Filtered product specification identifiers</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="TotalRecords">Total records</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetAllProductsDisplayedOnHomePage(System.Boolean)">
            <summary>
            Gets all products displayed on the home page
            </summary>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductByID(System.Int32)">
            <summary>
            Gets product
            </summary>
            <param name="ProductID">Product identifier</param>
            <returns>Product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.InsertProduct(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Inserts a product
            </summary>
            <param name="Name">The name</param>
            <param name="ShortDescription">The short description</param>
            <param name="FullDescription">The full description</param>
            <param name="AdminComment">The admin comment</param>
            <param name="ProductTypeID">The product type identifier</param>
            <param name="TemplateID">The template identifier</param>
            <param name="ShowOnHomePage">A value indicating whether to show the product on the home page</param>
            <param name="MetaKeywords">The meta keywords</param>
            <param name="MetaDescription">The meta description</param>
            <param name="MetaTitle">The meta title</param>
            <param name="SEName">The search-engine name</param>
            <param name="AllowCustomerReviews">A value indicating whether the product allows customer reviews</param>
            <param name="AllowCustomerRatings">A value indicating whether the product allows customer ratings</param>
            <param name="RatingSum">The rating sum</param>
            <param name="TotalRatingVotes">The total rating votes</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="CreatedOn">The date and time of product creation</param>
            <param name="UpdatedOn">The date and time of product update</param>
            <returns>Product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.UpdateProduct(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Updates the product
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="Name">The name</param>
            <param name="ShortDescription">The short description</param>
            <param name="FullDescription">The full description</param>
            <param name="AdminComment">The admin comment</param>
            <param name="ProductTypeID">The product type identifier</param>
            <param name="ShowOnHomePage">A value indicating whether to show the product on the home page</param>
            <param name="TemplateID">The template identifier</param>
            <param name="MetaKeywords">The meta keywords</param>
            <param name="MetaDescription">The meta description</param>
            <param name="MetaTitle">The meta title</param>
            <param name="SEName">The search-engine name</param>
            <param name="AllowCustomerReviews">A value indicating whether the product allows customer reviews</param>
            <param name="AllowCustomerRatings">A value indicating whether the product allows customer ratings</param>
            <param name="RatingSum">The rating sum</param>
            <param name="TotalRatingVotes">The total rating votes</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="CreatedOn">The date and time of product creation</param>
            <param name="UpdatedOn">The date and time of product update</param>
            <returns>Product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductsAlsoPurchasedByID(System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a list of products purchased by other customers who purchased the above
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="TotalRecords">Total records</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.SetProductRating(System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Sets a product rating
            </summary>
            <param name="ProductID">Product identifer</param>
            <param name="CustomerID">Customer identifer</param>
            <param name="Rating">Rating</param>
            <param name="RatedOn">Rating was created on</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetRecentlyAddedProducts(System.Int32,System.Boolean)">
            <summary>
            Gets a recently added products list
            </summary>
            <param name="Number">Number of products to load</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Recently added products list</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.DeleteProductPicture(System.Int32)">
            <summary>
            Deletes a product picture mapping
            </summary>
            <param name="ProductPictureID">Product picture mapping identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductPictureByID(System.Int32)">
            <summary>
            Gets a product picture mapping
            </summary>
            <param name="ProductPictureID">Product picture mapping identifier</param>
            <returns>Product picture mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.InsertProductPicture(System.Int32,System.Int32,System.Int32)">
            <summary>
            Inserts a product picture mapping
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="PictureID">Picture identifier</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product picture mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.UpdateProductPicture(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the product picture mapping
            </summary>
            <param name="ProductPictureID">Product picture mapping identifier</param>
            <param name="ProductID">Product identifier</param>
            <param name="PictureID">Picture identifier</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product picture mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductPicturesByProductID(System.Int32)">
            <summary>
            Gets all product picture mappings by product identifier
            </summary>
            <param name="ProductID">Product identifier</param>
            <returns>Product picture mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductReviewByID(System.Int32)">
            <summary>
            Gets a product review
            </summary>
            <param name="ProductReviewID">Product review identifier</param>
            <returns>Product review</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductReviewByProductID(System.Int32,System.Boolean)">
            <summary>
            Gets a product review collection by product identifier
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product review collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.DeleteProductReview(System.Int32)">
            <summary>
            Deletes a product review
            </summary>
            <param name="ProductReviewID">Product review identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetAllProductReviews(System.Boolean)">
            <summary>
            Gets all product reviews
            </summary>
            <returns>Product review collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.InsertProductReview(System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.DateTime)">
            <summary>
            Inserts a product review
            </summary>
            <param name="ProductID">The product identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="Title">The review title</param>
            <param name="ReviewText">The review text</param>
            <param name="Rating">The review rating</param>
            <param name="HelpfulYesTotal">Review helpful votes total</param>
            <param name="HelpfulNoTotal">Review not helpful votes total</param>
            <param name="IsApproved">A value indicating whether the product review is approved</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Product review</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.UpdateProductReview(System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.DateTime)">
            <summary>
            Updates the product review
            </summary>
            <param name="ProductReviewID">The product review identifier</param>
            <param name="ProductID">The product identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="Title">The review title</param>
            <param name="ReviewText">The review text</param>
            <param name="Rating">The review rating</param>
            <param name="HelpfulYesTotal">Review helpful votes total</param>
            <param name="HelpfulNoTotal">Review not helpful votes total</param>
            <param name="IsApproved">A value indicating whether the product review is approved</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Product review</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.SetProductRatingHelpfulness(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets a product rating helpfulness
            </summary>
            <param name="ProductReviewID">Product review identifer</param>
            <param name="CustomerID">Customer identifer</param>
            <param name="WasHelpful">A value indicating whether the product review was helpful or not </param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductVariantByID(System.Int32)">
            <summary>
            Gets a product variant
            </summary>
            <param name="ProductVariantID">Product variant identifier</param>
            <returns>Product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetLowStockProductVariants">
            <summary>
            Get low stock product variants
            </summary>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.InsertProductVariant(System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Decimal,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a product variant
            </summary>
            <param name="ProductID">The product identifier</param>
            <param name="Name">The name</param>
            <param name="SKU">The SKU</param>
            <param name="Description">The description</param>
            <param name="AdminComment">The admin comment</param>
            <param name="ManufacturerPartNumber">The manufacturer part number</param>
            <param name="IsDownload">A value indicating whether the product variant is download</param>
            <param name="DownloadID">The download identifier</param>
            <param name="UnlimitedDownloads">The value indicating whether this downloadable product can be downloaded unlimited number of times</param>
            <param name="MaxNumberOfDownloads">The maximum number of downloads</param>
            <param name="HasSampleDownload">The value indicating whether the product variant has a sample download file</param>
            <param name="SampleDownloadID">The sample download identifier</param>
            <param name="IsShipEnabled">A value indicating whether the entity is ship enabled</param>
            <param name="IsFreeShipping">A value indicating whether the entity is free shipping</param>
            <param name="AdditionalShippingCharge">The additional shipping charge</param>
            <param name="IsTaxExempt">A value indicating whether the product variant is marked as tax exempt</param>
            <param name="TaxCategoryID">The tax category identifier</param>
            <param name="StockQuantity">The stock quantity</param>
            <param name="ManageInventory">The value indicating whether to manage inventory</param>
            <param name="MinStockQuantity">The minimum stock quantity</param>
            <param name="LowStockActivityID">The low stock activity identifier</param>
            <param name="NotifyAdminForQuantityBelow">The quantity when admin should be notified</param>
            <param name="OrderMinimumQuantity">The order minimum quantity</param>
            <param name="OrderMaximumQuantity">The order maximum quantity</param>
            <param name="WarehouseId">The warehouse identifier</param>
            <param name="DisableBuyButton">A value indicating whether to disable buy button</param>
            <param name="Price">The price</param>
            <param name="OldPrice">The old price</param>
            <param name="Weight">The weight</param>
            <param name="Length">The length</param>
            <param name="Width">The width</param>
            <param name="Height">The height</param>
            <param name="PictureID">The picture identifier</param>
            <param name="AvailableStartDateTime">The available start date and time</param>
            <param name="AvailableEndDateTime">The available end date and time</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.UpdateProductVariant(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Decimal,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the product variant
            </summary>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="ProductID">The product identifier</param>
            <param name="Name">The name</param>
            <param name="SKU">The SKU</param>
            <param name="Description">The description</param>
            <param name="AdminComment">The admin comment</param>
            <param name="ManufacturerPartNumber">The manufacturer part number</param>
            <param name="IsDownload">A value indicating whether the product variant is download</param>
            <param name="DownloadID">The download identifier</param>
            <param name="UnlimitedDownloads">The value indicating whether this downloadable product can be downloaded unlimited number of times</param>
            <param name="MaxNumberOfDownloads">The maximum number of downloads</param>
            <param name="HasSampleDownload">The value indicating whether the product variant has a sample download file</param>
            <param name="SampleDownloadID">The sample download identifier</param>
            <param name="IsShipEnabled">A value indicating whether the entity is ship enabled</param>
            <param name="IsFreeShipping">A value indicating whether the entity is free shipping</param>
            <param name="AdditionalShippingCharge">The additional shipping charge</param>
            <param name="IsTaxExempt">A value indicating whether the product variant is marked as tax exempt</param>
            <param name="TaxCategoryID">The tax category identifier</param>
            <param name="StockQuantity">The stock quantity</param>
            <param name="ManageInventory">The value indicating whether to manage inventory</param>
            <param name="MinStockQuantity">The minimum stock quantity</param>
            <param name="LowStockActivityID">The low stock activity identifier</param>
            <param name="NotifyAdminForQuantityBelow">The quantity when admin should be notified</param>
            <param name="OrderMinimumQuantity">The order minimum quantity</param>
            <param name="OrderMaximumQuantity">The order maximum quantity</param>
            <param name="WarehouseId">The warehouse identifier</param>
            <param name="DisableBuyButton">A value indicating whether to disable buy button</param>
            <param name="Price">The price</param>
            <param name="OldPrice">The old price</param>
            <param name="Weight">The weight</param>
            <param name="Length">The length</param>
            <param name="Width">The width</param>
            <param name="Height">The height</param>
            <param name="PictureID">The picture identifier</param>
            <param name="AvailableStartDateTime">The available start date and time</param>
            <param name="AvailableEndDateTime">The available end date and time</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductVariantsByProductID(System.Int32,System.Boolean)">
            <summary>
            Gets product variants by product identifier
            </summary>
            <param name="ProductID">The product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product variant collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.DeleteRelatedProduct(System.Int32)">
            <summary>
            Deletes a related product
            </summary>
            <param name="RelatedProductID">Related product identifer</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetRelatedProductsByProductID1(System.Int32,System.Boolean)">
            <summary>
            Gets a related product collection by product identifier
            </summary>
            <param name="ProductID1">The first product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Related product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetRelatedProductByID(System.Int32)">
            <summary>
            Gets a related product
            </summary>
            <param name="RelatedProductID">Related product identifer</param>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.InsertRelatedProduct(System.Int32,System.Int32,System.Int32)">
            <summary>
            Inserts a related product
            </summary>
            <param name="ProductID1">The first product identifier</param>
            <param name="ProductID2">The second product identifier</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Related product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.UpdateRelatedProduct(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates a related product
            </summary>
            <param name="RelatedProductID">The related product identifier</param>
            <param name="ProductID1">The first product identifier</param>
            <param name="ProductID2">The second product identifier</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Related product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetAllProductTypes">
            <summary>
            Gets all product types
            </summary>
            <returns>Product type collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductTypeByID(System.Int32)">
            <summary>
            Gets a product type
            </summary>
            <param name="ProductTypeID">Product type identifier</param>
            <returns>Product type</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductVariantsByPricelistID(System.Int32)">
            <summary>
            Gets all product variants directly assigned to a pricelist
            </summary>
            <param name="PricelistID"></param>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetAllPricelists">
            <summary>
            Gets a collection of all available pricelists
            </summary>
            <returns>Collection of pricelists</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetPricelistByID(System.Int32)">
            <summary>
            Gets a Pricelist
            </summary>
            <param name="PricelistID">Pricelist identifier</param>
            <returns>Pricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetPricelistByGUID(System.String)">
            <summary>
            Gets a pricelist
            </summary>
            <param name="PricelistGUID">Pricelist GUID</param>
            <returns>Pricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.InsertPricelist(System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Decimal,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Inserts a pricelist
            </summary>
            <param name="ExportModeID">Mode of list creation identifier</param>
            <param name="ExportTypeID">Export type identifier</param>
            <param name="AffiliateID">Affiliate connected to this pricelist (optional), links will be created with AffiliateID</param>
            <param name="DisplayName">Displayedname</param>
            <param name="ShortName">shortname to identify the pricelist</param>
            <param name="PricelistGuid">unique identifier to get pricelist "anonymous"</param>
            <param name="CacheTime">how long will the pricelist be in cached before new creation</param>
            <param name="FormatLocalization">what localization will be used (numeric formats, etc.) en-US, de-DE etc.</param>
            <param name="Description">Displayed description</param>
            <param name="AdminNotes">Admin can put some notes here, not displayed in public</param>
            <param name="Header">Headerline of the exported file (plain text)</param>
            <param name="Body">template for an exportet productvariant, uses delimiters and replacement strings</param>
            <param name="Footer">Footer line of the exportet file (plain text)</param>
            <param name="PriceAdjustmentTypeID">Type of price adjustment identifier</param>
            <param name="PriceAdjustment">price will be adjusted by this amount</param>
            <param name="OverrideIndivAdjustment">Use individual adjustment, if available, or override</param>
            <param name="CreatedOn">When was this record originally created</param>
            <param name="UpdatedOn">Last time this record was updated</param>
            <returns>Pricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.UpdatePricelist(System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Decimal,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Updates the Pricelist
            </summary>
            <param name="PricelistID">Unique Identifier</param>
            <param name="ExportModeID">Mode of list creation identifier</param>
            <param name="ExportTypeID">Export type identifier</param>
            <param name="AffiliateID">Affiliate connected to this pricelist (optional), links will be created with AffiliateID</param>
            <param name="DisplayName">Displayedname</param>
            <param name="ShortName">shortname to identify the pricelist</param>
            <param name="PricelistGuid">unique identifier to get pricelist "anonymous"</param>
            <param name="CacheTime">how long will the pricelist be in cached before new creation</param>
            <param name="FormatLocalization">what localization will be used (numeric formats, etc.) en-US, de-DE etc.</param>
            <param name="Description">Displayed description</param>
            <param name="AdminNotes">Admin can put some notes here, not displayed in public</param>
            <param name="Header">Headerline of the exported file (plain text)</param>
            <param name="Body">template for an exportet productvariant, uses delimiters and replacement strings</param>
            <param name="Footer">Footer line of the exportet file (plain text)</param>
            <param name="PriceAdjustmentTypeID">Type of price adjustment identifier</param>
            <param name="PriceAdjustment">price will be adjusted by this amount</param>
            <param name="OverrideIndivAdjustment">use individual adjustment, if available, or override</param>
            <param name="CreatedOn">When was this record originally created</param>
            <param name="UpdatedOn">Last time this recordset was updated</param>
            <returns>Pricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.DeletePricelist(System.Int32)">
            <summary>
            Deletes a Pricelist
            </summary>
            <param name="PricelistID">The PricelistID of the item to be deleted</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.DeleteProductVariantPricelist(System.Int32)">
            <summary>
            Deletes a ProductVariantPricelist
            </summary>
            <param name="ProductVariantPricelistID">ProductVariantPricelist identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductVariantPricelistByID(System.Int32)">
            <summary>
            Gets a ProductVariantPricelist
            </summary>
            <param name="ProductVariantPricelistID">ProductVariantPricelist identifier</param>
            <returns>ProductVariantPricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductVariantPricelist(System.Int32,System.Int32)">
            <summary>
            Gets ProductVariantPricelist
            </summary>
            <param name="ProductVariantID">ProductVariant identifier</param>
            <param name="PricelistID">Pricelist identifier</param>
            <returns>ProductVariantPricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.InsertProductVariantPricelist(System.Int32,System.Int32,System.Int32,System.Decimal,System.DateTime)">
            <summary>
            Inserts a ProductVariantPricelist
            </summary>
            <param name="ProductVariantID">The product variant identifer</param>
            <param name="PricelistID">The pricelist identifier</param>
            <param name="PriceAdjustmentTypeID">Price adjustment type identifier</param>
            <param name="PriceAdjustment">The price will be adjusted by this amount</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>ProductVariantPricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.UpdateProductVariantPricelist(System.Int32,System.Int32,System.Int32,System.Int32,System.Decimal,System.DateTime)">
            <summary>
            Updates the ProductVariantPricelist
            </summary>
            <param name="ProductVariantPricelistID">The product variant pricelist identifier</param>
            <param name="ProductVariantID">The product variant identifer</param>
            <param name="PricelistID">The pricelist identifier</param>
            <param name="PriceAdjustmentTypeID">Price adjustment type identifier</param>
            <param name="PriceAdjustment">The price will be adjusted by this amount</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>ProductVariantPricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetTierPriceByID(System.Int32)">
            <summary>
            Gets a tier price
            </summary>
            <param name="TierPriceID">Tier price identifier</param>
            <returns>Tier price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetTierPricesByProductVariantID(System.Int32)">
            <summary>
            Gets tier prices by product variant identifier
            </summary>
            <param name="ProductVariantID">Product variant identifier</param>
            <returns>Tier price collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.DeleteTierPrice(System.Int32)">
            <summary>
            Deletes a tier price
            </summary>
            <param name="TierPriceID">Tier price identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.InsertTierPrice(System.Int32,System.Int32,System.Decimal)">
            <summary>
            Inserts a tier price
            </summary>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="Quantity">The quantity</param>
            <param name="Price">The price</param>
            <returns>Tier price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.UpdateTierPrice(System.Int32,System.Int32,System.Int32,System.Decimal)">
            <summary>
            Updates the tier price
            </summary>
            <param name="TierPriceID">The tier price identifier</param>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="Quantity">The quantity</param>
            <param name="Price">The price</param>
            <returns>Tier price</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplateProvider">
            <summary>
            Acts as a base class for deriving custom message template provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplateProvider.GetMessageTemplateByID(System.Int32)">
            <summary>
            Gets a message template by template identifier
            </summary>
            <param name="MessageTemplateID">Message template identifier</param>
            <returns>Message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplateProvider.GetAllMessageTemplates">
            <summary>
            Gets all message templates
            </summary>
            <returns>Message template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplateProvider.GetLocalizedMessageTemplateByID(System.Int32)">
            <summary>
            Gets a localized message template by identifier
            </summary>
            <param name="LocalizedMessageTemplateID">Localized message template identifier</param>
            <returns>Localized message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplateProvider.GetLocalizedMessageTemplate(System.String,System.Int32)">
            <summary>
            Gets a localized message template by name and language identifier
            </summary>
            <param name="Name">Message template name</param>
            <param name="LanguageID">Language identifier</param>
            <returns>Localized message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplateProvider.DeleteLocalizedMessageTemplate(System.Int32)">
            <summary>
            Deletes a localized message template
            </summary>
            <param name="LocalizedMessageTemplateID">Message template identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplateProvider.GetAllLocalizedMessageTemplates(System.String)">
            <summary>
            Gets all localized message templates
            </summary>
            <param name="MessageTemplatesName">Message template name</param>
            <returns>Localized message template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplateProvider.InsertLocalizedMessageTemplate(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Inserts a localized message template
            </summary>
            <param name="MessageTemplateID">The message template identifier</param>
            <param name="LanguageID">The language identifier</param>
            <param name="Subject">The subject</param>
            <param name="Body">The body</param>
            <returns>Localized message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplateProvider.UpdateLocalizedMessageTemplate(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Updates the localized message template
            </summary>
            <param name="MessageTemplateLocalizedID">The localized message template identifier</param>
            <param name="MessageTemplateID">The message template identifier</param>
            <param name="LanguageID">The language identifier</param>
            <param name="Subject">The subject</param>
            <param name="Body">The body</param>
            <returns>Localized message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplateProvider.GetQueuedEmailByID(System.Int32)">
            <summary>
            Gets a queued email by identifier
            </summary>
            <param name="QueuedEmailID">Email item identifier</param>
            <returns>Email item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplateProvider.DeleteQueuedEmail(System.Int32)">
            <summary>
            Deletes a queued email
            </summary>
            <param name="QueuedEmailID">Email item identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplateProvider.GetAllQueuedEmails(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Boolean,System.Int32)">
            <summary>
            Gets all queued emails
            </summary>
            <param name="FromEmail">From Email</param>
            <param name="ToEmail">To Email</param>
            <param name="StartTime">The start time</param>
            <param name="EndTime">The end time</param>
            <param name="QueuedEmailCount">Email item count. 0 if you want to get all items</param>
            <param name="LoadNotSentItemsOnly">A value indicating whether to load only not sent emails</param>
            <param name="MaxSendTries">Maximum send tries</param>
            <returns>Email item collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplateProvider.InsertQueuedEmail(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.Int32,System.Nullable{System.DateTime})">
            <summary>
            Inserts a queued email
            </summary>
            <param name="Priority">The priority</param>
            <param name="From">From</param>
            <param name="FromName">From name</param>
            <param name="To">To</param>
            <param name="ToName">To name</param>
            <param name="Cc">Cc</param>
            <param name="Bcc">Bcc</param>
            <param name="Subject">Subject</param>
            <param name="Body">Body</param>
            <param name="CreatedOn">The date and time of item creation</param>
            <param name="SendTries">The send tries</param>
            <param name="SentOn">The sent date and time. Null if email is not sent yet</param>
            <returns>Queued email</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplateProvider.UpdateQueuedEmail(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.Int32,System.Nullable{System.DateTime})">
            <summary>
            Updates a queued email
            </summary>
            <param name="QueuedEmailID">Email item identifier</param>
            <param name="Priority">The priority</param>
            <param name="From">From</param>
            <param name="FromName">From name</param>
            <param name="To">To</param>
            <param name="ToName">To name</param>
            <param name="Cc">Cc</param>
            <param name="Bcc">Bcc</param>
            <param name="Subject">Subject</param>
            <param name="Body">Body</param>
            <param name="CreatedOn">The date and time of item creation</param>
            <param name="SendTries">The send tries</param>
            <param name="SentOn">The sent date and time. Null if email is not sent yet</param>
            <returns>Queued email</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider">
            <summary>
            Acts as a base class for deriving custom manufacturer provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.GetAllManufacturers(System.Boolean)">
            <summary>
            Gets all manufacturers
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Manufacturer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.GetManufacturerByID(System.Int32)">
            <summary>
            Gets a manufacturer
            </summary>
            <param name="ManufacturerID">Manufacturer identifier</param>
            <returns>Manufacturer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.InsertManufacturer(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a manufacturer
            </summary>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="TemplateID">The template identifier</param>
            <param name="MetaKeywords">The meta keywords</param>
            <param name="MetaDescription">The meta description</param>
            <param name="MetaTitle">The meta title</param>
            <param name="SEName">The search-engine name</param>
            <param name="PictureID">The parent picture identifier</param>
            <param name="PageSize">The page size</param>
            <param name="PriceRanges">The price ranges</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Manufacturer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.UpdateManufacturer(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the manufacturer
            </summary>
            <param name="ManufacturerID">Manufacturer identifier</param>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="TemplateID">The template identifier</param>
            <param name="MetaKeywords">The meta keywords</param>
            <param name="MetaDescription">The meta description</param>
            <param name="MetaTitle">The meta title</param>
            <param name="SEName">The search-engine name</param>
            <param name="PictureID">The parent picture identifier</param>
            <param name="PageSize">The page size</param>
            <param name="PriceRanges">The price ranges</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Manufacturer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.DeleteProductManufacturer(System.Int32)">
            <summary>
            Deletes a product manufacturer mapping
            </summary>
            <param name="ProductManufacturerID">Product manufacturer mapping identifer</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.GetProductManufacturersByManufacturerID(System.Int32,System.Boolean)">
            <summary>
            Gets product category manufacturer collection
            </summary>
            <param name="ManufacturerID">Manufacturer identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product category manufacturer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.GetProductManufacturersByProductID(System.Int32,System.Boolean)">
            <summary>
            Gets a product manufacturer mapping collection
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product manufacturer mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.GetProductManufacturerByID(System.Int32)">
            <summary>
            Gets a product manufacturer mapping 
            </summary>
            <param name="ProductManufacturerID">Product manufacturer mapping identifier</param>
            <returns>Product manufacturer mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.InsertProductManufacturer(System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Inserts a product manufacturer mapping
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="ManufacturerID">Manufacturer identifier</param>
            <param name="IsFeaturedProduct">A value indicating whether the product is featured</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product manufacturer mapping </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.UpdateProductManufacturer(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Updates the product manufacturer mapping
            </summary>
            <param name="ProductManufacturerID">Product manufacturer mapping identifier</param>
            <param name="ProductID">Product identifier</param>
            <param name="ManufacturerID">Manufacturer identifier</param>
            <param name="IsFeaturedProduct">A value indicating whether the product is featured</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product manufacturer mapping </returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionCollection">
            <summary>
            Represents a specification attribute option collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBTierPriceCollection">
            <summary>
            Represents a tier price collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicCollection">
            <summary>
            Represents a topic collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopic">
            <summary>
            Represents a topic
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopic.#ctor">
            <summary>
            Creates a new instance of the DBTopic class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopic.TopicID">
            <summary>
            Gets or sets the topic identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopic.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic">
            <summary>
            Represents a forum topic
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.#ctor">
            <summary>
            Creates a new instance of the DBForumTopic class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.ForumTopicID">
            <summary>
            Gets or sets the forum topic identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.ForumID">
            <summary>
            Gets or sets the forum identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.UserID">
            <summary>
            Gets or sets the user identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.TopicTypeID">
            <summary>
            Gets or sets the topic type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.Subject">
            <summary>
            Gets or sets the subject
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.NumPosts">
            <summary>
            Gets or sets the number of posts
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.Views">
            <summary>
            Gets or sets the number of views
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.LastPostID">
            <summary>
            Gets or sets the last post identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.LastPostUserID">
            <summary>
            Gets or sets the last post user identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.LastPostTime">
            <summary>
            Gets or sets the last post date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogPost">
            <summary>
            Represents a blog post
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogPost.#ctor">
            <summary>
            Creates a new instance of the DBBlogPost class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogPost.BlogPostID">
            <summary>
            Gets or sets the blog post identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogPost.LanguageID">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogPost.BlogPostTitle">
            <summary>
            Gets or sets the blog post title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogPost.BlogPostBody">
            <summary>
            Gets or sets the blog post title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogPost.BlogPostAllowComments">
            <summary>
            Gets or sets a value indicating whether the blog post comments are allowed 
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogPost.CreatedByID">
            <summary>
            Gets or sets the user identifier who created the blog post
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogPost.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSetting">
            <summary>
            Represents a setting
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSetting.#ctor">
            <summary>
            Creates a new instance of the DBSetting class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSetting.SettingID">
            <summary>
            Gets or sets the setting identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSetting.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSetting.Value">
            <summary>
            Gets or sets the value
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSetting.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductPictureCollection">
            <summary>
            Represents a product picture collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductCollection">
            <summary>
            Represents a product collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Media.DBPicture">
            <summary>
            Represents a picture
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.DBPicture.#ctor">
            <summary>
            Creates a new instance of the DBPicture class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBPicture.PictureID">
            <summary>
            Gets or sets the picture identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBPicture.PictureBinary">
            <summary>
            Gets or sets the picture binary
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBPicture.Extension">
            <summary>
            Gets or sets the picture extension
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBPicture.IsNew">
            <summary>
            Gets or sets a value indicating whether the picture is new
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpAddress">
            <summary>
            Represents IP address entity
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpAddress.#ctor">
            <summary>
            Creates a new instance of IpAddress class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpAddress.BannedIpAddressID">
            <summary>
            Gets or sets the IP address unique identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpAddress.Address">
            <summary>
            Gets or sets the IP address
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpAddress.Comment">
            <summary>
            Gets or sets a reason why the IP was banned
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpAddress.CreatedOn">
            <summary>
            Gets or sets when the IP address record was banned
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpAddress.UpdatedOn">
            <summary>
            Gets or sets when the banned IP address record was last updated
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBPricelistCollection">
            <summary>
            Represents a pricelist collection
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.DBProviderManager`1.#cctor">
            <summary>
            Initializes a new instance of the DBProviderManager class.
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.DBProviderManager`1.GetSection``1">
            <summary>
            Returns the configuration section.
            </summary>
            <returns>The ConfigurationSection object.</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.DBProviderManager`1.Provider">
            <summary>
            Gets a reference to the default provider for the application.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.DBProviderManager`1.Providers">
            <summary>
            Gets a collection of the providers for the application.
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNews">
            <summary>
            Represents a news
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNews.#ctor">
            <summary>
            Creates a new instance of the DBNews class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNews.NewsID">
            <summary>
            Gets or sets the news identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNews.LanguageID">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNews.Title">
            <summary>
            Gets or sets the news title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNews.Short">
            <summary>
            Gets or sets the short text
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNews.Full">
            <summary>
            Gets or sets the full text
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNews.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNews.AllowComments">
            <summary>
            Gets or sets a value indicating whether the entity allows comments
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNews.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessageCollection">
            <summary>
            Represents a private massage collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Categories.DBProductCategoryCollection">
            <summary>
            Represents a DBProductCategory collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLog">
            <summary>
            Represents a search log
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLog.#ctor">
            <summary>
            Creates a new instance of the DBSearchLog class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLog.SearchLogID">
            <summary>
            Gets or sets the search log identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLog.SearchTerm">
            <summary>
            Gets or sets the search term
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLog.CustomerID">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLog.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Templates.DBCategoryTemplate">
            <summary>
            Represents a category template
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBCategoryTemplate.#ctor">
            <summary>
            Creates a new instance of the DBCategoryTemplate class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBCategoryTemplate.CategoryTemplateID">
            <summary>
            Gets or sets the category template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBCategoryTemplate.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBCategoryTemplate.TemplatePath">
            <summary>
            Gets or sets the template path
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBCategoryTemplate.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBCategoryTemplate.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBCategoryTemplate.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategory">
            <summary>
            Represents a tax category
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategory.#ctor">
            <summary>
            Creates a new instance of the DBTaxCategory class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategory.TaxCategoryID">
            <summary>
            Gets or sets the tax category identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategory.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategory.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategory.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategory.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethod">
            <summary>
            Represents a shipping rate computation method
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethod.#ctor">
            <summary>
            Creates a new instance of the DBShippingRateComputationMethod class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethod.ShippingRateComputationMethodID">
            <summary>
            Gets or sets the shipping rate computation method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethod.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethod.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethod.ConfigureTemplatePath">
            <summary>
            Gets or sets the configure template path
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethod.ClassName">
            <summary>
            Gets or sets the class name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethod.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview">
            <summary>
            Represents a product review
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.#ctor">
            <summary>
            Creates a new instance of the DBProductReview class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.ProductReviewID">
            <summary>
            Gets or sets the product review identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.ProductID">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.CustomerID">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.Title">
            <summary>
            Gets or sets the title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.ReviewText">
            <summary>
            Gets or sets the review text
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.Rating">
            <summary>
            Review rating
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.HelpfulYesTotal">
            <summary>
            Review helpful votes total
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.HelpfulNoTotal">
            <summary>
            Review not helpful votes total
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.IsApproved">
            <summary>
            Gets or sets a value indicating whether the product review is approved
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureDimensionCollection">
            <summary>
            Represents a measure dimension collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBProductManufacturer">
            <summary>
            Represents a product manufacturer mapping
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBProductManufacturer.#ctor">
            <summary>
            Creates a new instance of the DBProductManufacturer class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBProductManufacturer.ProductManufacturerID">
            <summary>
            Gets or sets the ProductManufacturer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBProductManufacturer.ProductID">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBProductManufacturer.ManufacturerID">
            <summary>
            Gets or sets the manufacturer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBProductManufacturer.IsFeaturedProduct">
            <summary>
            Gets or sets a value indicating whether the product is featured
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBProductManufacturer.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouseProvider">
            <summary>
            Acts as a base class for deriving custom warehouse provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouseProvider.GetAllWarehouses">
            <summary>
            Gets all warehouses
            </summary>
            <returns>Warehouse collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouseProvider.GetWarehouseByID(System.Int32)">
            <summary>
            Gets a warehouse
            </summary>
            <param name="WarehouseID">The warehouse identifier</param>
            <returns>Warehouse</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouseProvider.InsertWarehouse(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Inserts a warehouse
            </summary>
            <param name="Name">The name</param>
            <param name="PhoneNumber">The phone number</param>
            <param name="Email">The email</param>
            <param name="FaxNumber">The fax number</param>
            <param name="Address1">The address 1</param>
            <param name="Address2">The address 2</param>
            <param name="City">The city</param>
            <param name="StateProvince">The state/province</param>
            <param name="ZipPostalCode">The zip/postal code</param>
            <param name="CountryID">The country identifier</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Warehouse</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouseProvider.UpdateWarehouse(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Updates the warehouse
            </summary>
            <param name="WarehouseID">The warehouse identifier</param>
            <param name="Name">The name</param>
            <param name="PhoneNumber">The phone number</param>
            <param name="Email">The email</param>
            <param name="FaxNumber">The fax number</param>
            <param name="Address1">The address 1</param>
            <param name="Address2">The address 2</param>
            <param name="City">The city</param>
            <param name="StateProvince">The state/province</param>
            <param name="ZipPostalCode">The zip/postal code</param>
            <param name="CountryID">The country identifier</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Warehouse</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategoryProvider">
            <summary>
            Acts as a base class for deriving custom tax category provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategoryProvider.DeleteTaxCategory(System.Int32)">
            <summary>
            Deletes a tax category
            </summary>
            <param name="TaxCategoryID">The tax category identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategoryProvider.GetAllTaxCategories">
            <summary>
            Gets all tax categories
            </summary>
            <returns>Tax category collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategoryProvider.GetTaxCategoryByID(System.Int32)">
            <summary>
            Gets a tax category
            </summary>
            <param name="TaxCategoryID">Tax category identifier</param>
            <returns>Tax category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategoryProvider.InsertTaxCategory(System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a tax category
            </summary>
            <param name="Name">The name</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Tax category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategoryProvider.UpdateTaxCategory(System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the tax category
            </summary>
            <param name="TaxCategoryID">The tax category identifier</param>
            <param name="Name">The name</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Tax category</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightProvider">
            <summary>
            Acts as a base class for deriving custom ShippingByWeight provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightProvider.GetByID(System.Int32)">
            <summary>
            Gets a ShippingByWeight
            </summary>
            <param name="ShippingByWeightID">ShippingByWeight identifier</param>
            <returns>ShippingByWeight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightProvider.DeleteShippingByWeight(System.Int32)">
            <summary>
            Deletes a ShippingByWeight
            </summary>
            <param name="ShippingByWeightID">ShippingByWeight identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightProvider.GetAll">
            <summary>
            Gets all ShippingByWeights
            </summary>
            <returns>ShippingByWeight collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightProvider.InsertShippingByWeight(System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Inserts a ShippingByWeight
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="From">The "from" value</param>
            <param name="To">The "to" value</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="ShippingChargePercentage">The shipping charge percentage</param>
            <param name="ShippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByWeight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightProvider.UpdateShippingByWeight(System.Int32,System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Updates the ShippingByWeight
            </summary>
            <param name="ShippingByWeightID">The ShippingByWeight identifier</param>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="From">The "from" value</param>
            <param name="To">The "to" value</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="ShippingChargePercentage">The shipping charge percentage</param>
            <param name="ShippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByWeight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightProvider.GetAllByShippingMethodID(System.Int32)">
            <summary>
            Gets all ShippingByWeights by shipping method identifier
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <returns>ShippingByWeight collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider">
            <summary>
            Acts as a base class for deriving custom poll provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.GetPollByID(System.Int32)">
            <summary>
            Gets a poll
            </summary>
            <param name="PollID">The poll identifier</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.GetPollBySystemKeyword(System.String)">
            <summary>
            Gets a poll
            </summary>
            <param name="SystemKeyword">Poll system keyword</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.GetPolls(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets poll collection
            </summary>
            <param name="LanguageID">Language identifier. 0 if you want to get all news</param>
            <param name="PollCount">Poll count to load. 0 if you want to get all polls</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Poll collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.DeletePoll(System.Int32)">
            <summary>
            Deletes a poll
            </summary>
            <param name="PollID">The poll identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.InsertPoll(System.Int32,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Inserts a poll
            </summary>
            <param name="LanguageID">The language identifier</param>
            <param name="Name">The name</param>
            <param name="SystemKeyword">The system keyword</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.UpdatePoll(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Updates the poll
            </summary>
            <param name="PollID">The poll identifier</param>
            <param name="LanguageID">The language identifier</param>
            <param name="Name">The name</param>
            <param name="SystemKeyword">The system keyword</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.PollVotingRecordExists(System.Int32,System.Int32)">
            <summary>
            Is voting record already exists
            </summary>
            <param name="PollID">Poll identifier</param>
            <param name="CustomerID">Customer identifier</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.GetPollAnswerByID(System.Int32)">
            <summary>
            Gets a poll answer
            </summary>
            <param name="PollAnswerID">Poll answer identifier</param>
            <returns>Poll answer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.GetPollAnswersByPollID(System.Int32)">
            <summary>
            Gets a poll answers by poll identifier
            </summary>
            <param name="PollID">Poll identifier</param>
            <returns>Poll answer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.DeletePollAnswer(System.Int32)">
            <summary>
            Deletes a poll answer
            </summary>
            <param name="PollAnswerID">Poll answer identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.InsertPollAnswer(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Inserts a poll answer
            </summary>
            <param name="PollID">The poll identifier</param>
            <param name="Name">The poll answer name</param>
            <param name="Count">The current count</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Poll answer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.UpdatePollAnswer(System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Updates the poll answer
            </summary>
            <param name="PollAnswerID">The poll answer identifier</param>
            <param name="PollID">The poll identifier</param>
            <param name="Name">The poll answer name</param>
            <param name="Count">The current count</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Poll answer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.CreatePollVotingRecord(System.Int32,System.Int32)">
            <summary>
            Creates a poll voting record
            </summary>
            <param name="PollAnswerID">The poll answer identifier</param>
            <param name="CustomerID">Customer identifer</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResourceProvider">
            <summary>
            Acts as a base class for deriving custom locale string resource provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResourceProvider.DeleteLocaleStringResource(System.Int32)">
            <summary>
            Deletes a locale string resource
            </summary>
            <param name="LocaleStringResourceID">Locale string resource identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResourceProvider.GetLocaleStringResourceByID(System.Int32)">
            <summary>
            Gets a locale string resource
            </summary>
            <param name="LocaleStringResourceID">Locale string resource identifier</param>
            <returns>Locale string resource</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResourceProvider.GetAllResourcesByLanguageID(System.Int32)">
            <summary>
            Gets all locale string resources by language identifier
            </summary>
            <param name="LanguageID">Language identifier</param>
            <returns>Locale string resource collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResourceProvider.InsertLocaleStringResource(System.Int32,System.String,System.String)">
            <summary>
            Inserts a locale string resource
            </summary>
            <param name="LanguageID">The language identifier</param>
            <param name="ResourceName">The resource name</param>
            <param name="ResourceValue">The resource value</param>
            <returns>Locale string resource</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResourceProvider.UpdateLocaleStringResource(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Updates the locale string resource
            </summary>
            <param name="LocaleStringResourceID">The locale string resource identifier</param>
            <param name="LanguageID">The language identifier</param>
            <param name="ResourceName">The resource name</param>
            <param name="ResourceValue">The resource value</param>
            <returns>Locale string resource</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddressCollection">
            <summary>
            Represents an address collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollAnswerCollection">
            <summary>
            Represents a poll answer collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSettingCollection">
            <summary>
            Represents a setting collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryCollection">
            <summary>
            Represents a category collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Templates.DBManufacturerTemplate">
            <summary>
            Represents a manufacturer template
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBManufacturerTemplate.#ctor">
            <summary>
            Creates a new instance of the DBManufacturerTemplate class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBManufacturerTemplate.ManufacturerTemplateID">
            <summary>
            Gets or sets the manufacturer template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBManufacturerTemplate.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBManufacturerTemplate.TemplatePath">
            <summary>
            Gets or sets the template path
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBManufacturerTemplate.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBManufacturerTemplate.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBManufacturerTemplate.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeCollection">
            <summary>
            Represents a specification attribute collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttribute">
            <summary>
            Represents a product variant attribute mapping
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttribute.#ctor">
            <summary>
            Creates a new instance of the DBProductVariantAttribute class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttribute.ProductVariantAttributeID">
            <summary>
            Gets or sets the product variant attribute mapping identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttribute.ProductVariantID">
            <summary>
            Gets or sets the product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttribute.ProductAttributeID">
            <summary>
            Gets or sets the product attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttribute.TextPrompt">
            <summary>
            Gets or sets a value a text prompt
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttribute.IsRequired">
            <summary>
            Gets or sets a value indicating whether the entity is required
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttribute.AttributeControlTypeID">
            <summary>
            Gets or sets the attribute control type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttribute.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderNoteCollection">
            <summary>
            Represents an order note collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderNote">
            <summary>
            Represents an order note
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderNote.#ctor">
            <summary>
            Creates a new instance of the DBOrderNote class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderNote.OrderNoteID">
            <summary>
            Gets or sets the order note identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderNote.OrderID">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderNote.Note">
            <summary>
            Gets or sets the note
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderNote.CreatedOn">
            <summary>
            Gets or sets the date and time of order note creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBProductManufacturerCollection">
            <summary>
            Represents a ProductManufacturer collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvinceCollection">
            <summary>
            Represents a state/province collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Security.DBBlacklistProvider">
            <summary>
            Represents a banned IP address
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBlacklistProvider.GetIpAddressByID(System.Int32)">
            <summary>
            Gets an IP address by its ID
            </summary>
            <param name="bannedIpAddressID">IP Address unique identifier</param>
            <returns>IP address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBlacklistProvider.GetIpAddressAll">
            <summary>
            Gets all IP addresses
            </summary>
            <returns>IP address collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBlacklistProvider.InsertBannedIpAddress(System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Inserts an IP address
            </summary>
            <param name="address">IP address</param>
            <param name="comment">Reason why the IP was banned</param>
            <param name="createdOn">When the record was inserted</param>
            <param name="updatedOn">When the record was last updated</param>
            <returns>IP address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBlacklistProvider.UpdateBannedIpAddress(System.Int32,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Updates an IP address
            </summary>
            <param name="bannedIpAddressID">IP address unique identifier</param>
            <param name="address">IP address</param>
            <param name="comment">Reason why the IP was banned</param>
            <param name="createdOn">When the record was last updated</param>
            <param name="updatedOn">When the record was last updated</param>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBlacklistProvider.DeleteBannedIpAddress(System.Int32)">
            <summary>
            Deletes an IP address
            </summary>
            <param name="bannedIpAddressID">IP address unique identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBlacklistProvider.GetIpNetworkByID(System.Int32)">
            <summary>
            Gets an IP network by its ID
            </summary>
            <param name="bannedIpNetworkID">IP network unique identifier</param>
            <returns>IP network</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBlacklistProvider.GetIpNetworkAll">
            <summary>
            Gets all IP addresses
            </summary>
            <returns>IP address collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBlacklistProvider.InsertBannedIpNetwork(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Inserts an IP network
            </summary>
            <param name="startAddress">First IP address in the range</param>
            <param name="endAddress">Last IP address in the range</param>
            <param name="comment">Reason why the IP network was banned</param>
            <param name="ipException">Exceptions in the range</param>
            <param name="createdOn">When the record was inserted</param>
            <param name="updatedOn">When the record was last updated</param>
            <returns>IP network</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBlacklistProvider.UpdateBannedIpNetwork(System.Int32,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Updates an IP network
            </summary>
            <param name="bannedIpNetworkID">IP network unique identifier</param>
            <param name="startAddress">First IP address in the range</param>
            <param name="endAddress">Last IP address in the range</param>
            <param name="comment">Reason why the IP network was banned</param>
            <param name="ipException">Exceptions in the range</param>
            <param name="createdOn">When the record was inserted</param>
            <param name="updatedOn">When the record was last updated</param>
            <returns>IP network</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBlacklistProvider.DeleteBannedIpNetwork(System.Int32)">
            <summary>
            Deletes an IP network
            </summary>
            <param name="bannedIpNetworkID">IP network unique identifier</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderAverageReportLine">
            <summary>
            Represents an order average report line
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderAverageReportLine.#ctor">
            <summary>
            Creates a new instance of the DBOrderAverageReportLine class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderAverageReportLine.SumTodayOrders">
            <summary>
            Gets or sets the sum today total
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderAverageReportLine.CountTodayOrders">
            <summary>
            Gets or sets the today count
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderAverageReportLine.SumThisWeekOrders">
            <summary>
            Gets or sets the sum this week total
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderAverageReportLine.CountThisWeekOrders">
            <summary>
            Gets or sets the this week count
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderAverageReportLine.SumThisMonthOrders">
            <summary>
            Gets or sets the sum this month total
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderAverageReportLine.CountThisMonthOrders">
            <summary>
            Gets or sets the this month count
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderAverageReportLine.SumThisYearOrders">
            <summary>
            Gets or sets the sum this year total
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderAverageReportLine.CountThisYearOrders">
            <summary>
            Gets or sets the this year count
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderAverageReportLine.SumAllTimeOrders">
            <summary>
            Gets or sets the sum all time total
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderAverageReportLine.CountAllTimeOrders">
            <summary>
            Gets or sets the all time count
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.DBProviderCollection`1.Add(System.Configuration.Provider.ProviderBase)">
            <summary>
            Adds a provider to the collection.
            </summary>
            <param name="provider">The provider to be added.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.DBProviderCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the contents of the collection to the given array starting at the specified index.
            </summary>
            <param name="array">The array to copy the elements of the collection to.</param>
            <param name="index">The index of the collection item at which to start the copying process.</param>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.DBProviderCollection`1.Item(System.String)">
            <summary>
            Gets the provider with the specified name.
            </summary>
            <param name="name">The key by which the provider is identified.</param>
            <returns>The provider with the specified name.</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerAttribute">
            <summary>
            Represents a customer attribute
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerAttribute.#ctor">
            <summary>
            Creates a new instance of the DBCustomerAttribute class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerAttribute.CustomerAttributeID">
            <summary>
            Gets or sets the customer attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerAttribute.CustomerID">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerAttribute.Key">
            <summary>
            Gets or sets the key
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerAttribute.Value">
            <summary>
            Gets or sets the value
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider">
            <summary>
            Acts as a base class for deriving custom topic provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.DeleteTopic(System.Int32)">
            <summary>
            Deletes a topic
            </summary>
            <param name="TopicID">Topic identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.InsertTopic(System.String)">
            <summary>
            Inserts a topic
            </summary>
            <param name="Name">The name</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.UpdateTopic(System.Int32,System.String)">
            <summary>
            Updates the topic
            </summary>
            <param name="TopicID">The topic identifier</param>
            <param name="Name">The name</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.GetTopicByID(System.Int32)">
            <summary>
            Gets a topic by template identifier
            </summary>
            <param name="TopicID">Topic identifier</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.GetAllTopics">
            <summary>
            Gets all topics
            </summary>
            <returns>Topic collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.GetLocalizedTopicByID(System.Int32)">
            <summary>
            Gets a localized topic by identifier
            </summary>
            <param name="LocalizedTopicID">Localized topic identifier</param>
            <returns>Localized topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.GetLocalizedTopic(System.Int32,System.Int32)">
            <summary>
            Gets a localized topic by parent TopicID and language identifier
            </summary>
            <param name="TopicID">The topic identifier</param>
            <param name="LanguageID">Language identifier</param>
            <returns>Localized topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.GetLocalizedTopic(System.String,System.Int32)">
            <summary>
            Gets a localized topic by name and language identifier
            </summary>
            <param name="Name">Topic name</param>
            <param name="LanguageID">Language identifier</param>
            <returns>Localized topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.DeleteLocalizedTopic(System.Int32)">
            <summary>
            Deletes a localized topic
            </summary>
            <param name="LocalizedTopicID">Topic identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.GetAllLocalizedTopics(System.String)">
            <summary>
            Gets all localized topics
            </summary>
            <param name="TopicName">Topic name</param>
            <returns>Localized topic collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.InsertLocalizedTopic(System.Int32,System.Int32,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Inserts a localized topic
            </summary>
            <param name="TopicID">The topic identifier</param>
            <param name="LanguageID">The language identifier</param>
            <param name="Title">The title</param>
            <param name="Body">The body</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Localized topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.UpdateLocalizedTopic(System.Int32,System.Int32,System.Int32,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Updates the localized topic
            </summary>
            <param name="TopicLocalizedID">The localized topic identifier</param>
            <param name="TopicID">The topic identifier</param>
            <param name="LanguageID">The language identifier</param>
            <param name="Title">The title</param>
            <param name="Body">The body</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Localized topic</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopicCollection">
            <summary>
            Represents a localized topic collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollCollection">
            <summary>
            Represents a poll collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse">
            <summary>
            Represents an warehouse
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.#ctor">
            <summary>
            Creates a new instance of the DBWarehouse class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.WarehouseID">
            <summary>
            Gets or sets the warehouse identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.PhoneNumber">
            <summary>
            Gets or sets the phone number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.Email">
            <summary>
            Gets or sets the email
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.FaxNumber">
            <summary>
            Gets or sets the fax number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.Address1">
            <summary>
            Gets or sets the address 1
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.Address2">
            <summary>
            Gets or sets the address 2
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.City">
            <summary>
            Gets or sets the city
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.StateProvince">
            <summary>
            Gets or sets the state/province
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.ZipPostalCode">
            <summary>
            Gets or sets the zip/postal code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.CountryID">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethodCollection">
            <summary>
            Represents a shipping method collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLogProvider">
            <summary>
            Acts as a base class for deriving custom search log provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLogProvider.SearchTermReport(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32)">
            <summary>
            Get order product variant sales report
            </summary>
            <param name="StartTime">Order start time; null to load all</param>
            <param name="EndTime">Order end time; null to load all</param>
            <param name="Count">Item count. 0 if you want to get all items</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLogProvider.GetAllSearchLogs">
            <summary>
            Gets all search log items
            </summary>
            <returns>Search log collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLogProvider.GetSearchLogByID(System.Int32)">
            <summary>
            Gets a search log item
            </summary>
            <param name="SearchLogID">The search log item identifier</param>
            <returns>Search log item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLogProvider.InsertSearchLog(System.String,System.Int32,System.DateTime)">
            <summary>
            Inserts a search log item
            </summary>
            <param name="SearchTerm">The search term</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Search log item</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider">
            <summary>
            Acts as a base class for deriving custom customer provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.DeleteAddress(System.Int32)">
            <summary>
            Deletes an address by address identifier 
            </summary>
            <param name="AddressID">Address identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetAddressByID(System.Int32)">
            <summary>
            Gets an address by address identifier
            </summary>
            <param name="AddressID">Address identifier</param>
            <returns>Address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetAddressesByCustomerID(System.Int32,System.Boolean)">
            <summary>
            Gets a collection of addresses by customer identifier
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="GetBillingAddresses">Gets or sets a value indicating whether the addresses are billing or shipping</param>
            <returns>A collection of addresses</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.InsertAddress(System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts an address
            </summary>
            <param name="CustomerID">The customer identifier</param>
            <param name="IsBillingAddress">A value indicating whether the address is billing or shipping</param>
            <param name="FirstName">The first name</param>
            <param name="LastName">The last name</param>
            <param name="PhoneNumber">The phone number</param>
            <param name="Email">The email</param>
            <param name="FaxNumber">The fax number</param>
            <param name="Company">The company</param>
            <param name="Address1">The address 1</param>
            <param name="Address2">The address 2</param>
            <param name="City">The city</param>
            <param name="StateProvinceID">The state/province identifier</param>
            <param name="ZipPostalCode">The zip/postal code</param>
            <param name="CountryID">The country identifier</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>An address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.UpdateAddress(System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the address
            </summary>
            <param name="AddressID">The address identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="IsBillingAddress">A value indicating whether the address is billing or shipping</param>
            <param name="FirstName">The first name</param>
            <param name="LastName">The last name</param>
            <param name="PhoneNumber">The phone number</param>
            <param name="Email">The email</param>
            <param name="FaxNumber">The fax number</param>
            <param name="Company">The company</param>
            <param name="Address1">The address 1</param>
            <param name="Address2">The address 2</param>
            <param name="City">The city</param>
            <param name="StateProvinceID">The state/province identifier</param>
            <param name="ZipPostalCode">The zip/postal code</param>
            <param name="CountryID">The country identifier</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>An address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetAllCustomers(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all customers
            </summary>
            <param name="RegistrationFrom">Customer registration from; null to load all customers</param>
            <param name="RegistrationTo">Customer registration to; null to load all customers</param>
            <param name="Email">Customer Email</param>
            <param name="Username">Customer username</param>
            <param name="DontLoadGuestCustomers">A value indicating whether to don't load guest customers</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="TotalRecords">Total records</param>
            <returns>Customer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetAllCustomersForNewsLetters">
            <summary>
            Gets all customers for newsletters
            </summary>
            <returns>Customer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetAffiliatedCustomers(System.Int32)">
            <summary>
            Gets all customers by affiliate identifier
            </summary>
            <param name="AffiliateID">Affiliate identifier</param>
            <returns>Customer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomersByCustomerRoleID(System.Int32,System.Boolean)">
            <summary>
            Gets all customers by customer role id
            </summary>
            <param name="CustomerRoleID">Customer role identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Customer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerByEmail(System.String)">
            <summary>
            Gets a customer by email
            </summary>
            <param name="Email">Customer Email</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerByUsername(System.String)">
            <summary>
            Gets a customer by username
            </summary>
            <param name="Username">Customer username</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerByID(System.Int32)">
            <summary>
            Gets a customer
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerByGUID(System.Guid)">
            <summary>
            Gets a customer by GUID
            </summary>
            <param name="CustomerGUID">Customer GUID</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.AddCustomer(System.Guid,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.DateTime,System.String,System.Int32)">
            <summary>
            Adds a customer
            </summary>
            <param name="CustomerGUID">The customer identifier</param>
            <param name="Email">The email</param>
            <param name="Username">The username</param>
            <param name="passwordHash">The password hash</param>
            <param name="saltKey">The salt key</param>
            <param name="AffiliateID">The affiliate identifier</param>
            <param name="BillingAddressID">The billing address identifier</param>
            <param name="ShippingAddressID">The shipping address identifier</param>
            <param name="LastPaymentMethodID">The last payment method identifier</param>
            <param name="LastAppliedCouponCode">The last applied coupon code</param>
            <param name="LanguageID">The language identifier</param>
            <param name="CurrencyID">The currency identifier</param>
            <param name="TaxDisplayTypeID">The tax display type identifier</param>
            <param name="IsTaxExempt">A value indicating whether the customer is tax exempt</param>
            <param name="IsAdmin">A value indicating whether the customer is administrator</param>
            <param name="IsGuest">A value indicating whether the customer is guest</param>
            <param name="IsForumModerator">A value indicating whether the customer is forum moderator</param>
            <param name="TotalForumPosts">A forum post count</param>
            <param name="Signature">Signature</param>
            <param name="AdminComment">Admin comment</param>
            <param name="Active">A value indicating whether the customer is active</param>
            <param name="Deleted">A value indicating whether the customer has been deleted</param>
            <param name="RegistrationDate">The date and time of customer registration</param>
            <param name="TimeZoneID">The time zone identifier</param>
            <param name="AvatarID">The avatar identifier</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.UpdateCustomer(System.Int32,System.Guid,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.DateTime,System.String,System.Int32)">
            <summary>
            Updates the customer
            </summary>
            <param name="CustomerID">The customer identifier</param>
            <param name="CustomerGUID">The customer identifier</param>
            <param name="Email">The email</param>
            <param name="Username">The username</param>
            <param name="PasswordHash">The password hash</param>
            <param name="SaltKey">The salt key</param>
            <param name="AffiliateID">The affiliate identifier</param>
            <param name="BillingAddressID">The billing address identifier</param>
            <param name="ShippingAddressID">The shipping address identifier</param>
            <param name="LastPaymentMethodID">The last payment method identifier</param>
            <param name="LastAppliedCouponCode">The last applied coupon code</param>
            <param name="LanguageID">The language identifier</param>
            <param name="CurrencyID">The currency identifier</param>
            <param name="TaxDisplayTypeID">The tax display type identifier</param>
            <param name="IsTaxExempt">A value indicating whether the customer is tax exempt</param>
            <param name="IsAdmin">A value indicating whether the customer is administrator</param>
            <param name="IsGuest">A value indicating whether the customer is guest</param>
            <param name="IsForumModerator">A value indicating whether the customer is forum moderator</param>
            <param name="TotalForumPosts">A forum post count</param>
            <param name="Signature">Signature</param>
            <param name="AdminComment">Admin comment</param>
            <param name="Active">A value indicating whether the customer is active</param>
            <param name="Deleted">A value indicating whether the customer has been deleted</param>
            <param name="RegistrationDate">The date and time of customer registration</param>
            <param name="TimeZoneID">The time zone identifier</param>
            <param name="AvatarID">The avatar identifier</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.DeleteCustomerAttribute(System.Int32)">
            <summary>
            Deletes a customer attribute
            </summary>
            <param name="CustomerAttributeID">Customer attribute identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerAttributeByID(System.Int32)">
            <summary>
            Gets a customer attribute
            </summary>
            <param name="CustomerAttributeID">Customer attribute identifier</param>
            <returns>A customer attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerAttributesByCustomerID(System.Int32)">
            <summary>
            Gets a collection of customer attributes by customer identifier
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <returns>Customer attributes</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.InsertCustomerAttribute(System.Int32,System.String,System.String)">
            <summary>
            Inserts a customer attribute
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="Key">An attribute key</param>
            <param name="Value">An attribute value</param>
            <returns>A customer attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.UpdateCustomerAttribute(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Updates the customer attribute
            </summary>
            <param name="CustomerAttributeID">Customer attribute identifier</param>
            <param name="CustomerID">Customer identifier</param>
            <param name="Key">An attribute key</param>
            <param name="Value">An attribute value</param>
            <returns>A customer attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerRolesByCustomerID(System.Int32,System.Boolean)">
            <summary>
            Gets customer roles by customer identifier
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Customer role collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetAllCustomerRoles(System.Boolean)">
            <summary>
            Gets all customer roles
            </summary>
            <returns>Customer role collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerRoleByID(System.Int32)">
            <summary>
            Gets a customer role
            </summary>
            <param name="CustomerRoleID">Customer role identifier</param>
            <returns>Customer role</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.InsertCustomerRole(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Inserts a customer role
            </summary>
            <param name="Name">The customer role name</param>
            <param name="FreeShipping">A value indicating whether the customer role is marked as free shiping</param>
            <param name="TaxExempt">A value indicating whether the customer role is marked as tax exempt</param>
            <param name="Active">A value indicating whether the customer role is active</param>
            <param name="Deleted">A value indicating whether the customer role has been deleted</param>
            <returns>Customer role</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.UpdateCustomerRole(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Updates the customer role
            </summary>
            <param name="CustomerRoleID">The customer role identifier</param>
            <param name="Name">The customer role name</param>
            <param name="FreeShipping">A value indicating whether the customer role is marked as free shiping</param>
            <param name="TaxExempt">A value indicating whether the customer role is marked as tax exempt</param>
            <param name="Active">A value indicating whether the customer role is active</param>
            <param name="Deleted">A value indicating whether the customer role has been deleted</param>
            <returns>Customer role</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.AddCustomerToRole(System.Int32,System.Int32)">
            <summary>
            Adds a customer to role
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="CustomerRoleID">Customer role identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.RemoveCustomerFromRole(System.Int32,System.Int32)">
            <summary>
            Removes a customer from role
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="CustomerRoleID">Customer role identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.AddDiscountToCustomerRole(System.Int32,System.Int32)">
            <summary>
            Adds a discount to a customer role
            </summary>
            <param name="CustomerRoleID">Customer role identifier</param>
            <param name="DiscountID">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.RemoveDiscountFromCustomerRole(System.Int32,System.Int32)">
            <summary>
            Removes a discount from a customer role
            </summary>
            <param name="CustomerRoleID">Customer role identifier</param>
            <param name="DiscountID">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerRolesByDiscountID(System.Int32,System.Boolean)">
            <summary>
            Gets a customer roles assigned to discount
            </summary>
            <param name="DiscountID">Discount identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Customer roles</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerSessionByGUID(System.Guid)">
            <summary>
            Gets a customer session
            </summary>
            <param name="CustomerSessionGUID">Customer session GUID</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerSessionByCustomerID(System.Int32)">
            <summary>
            Gets a customer session by customer identifier
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.DeleteCustomerSession(System.Guid)">
            <summary>
            Deletes a customer session
            </summary>
            <param name="CustomerSessionGUID">Customer session GUID</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetAllCustomerSessions">
            <summary>
            Gets all customer sessions
            </summary>
            <returns>Customer session collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.InsertCustomerSession(System.Guid,System.Int32,System.DateTime,System.Boolean)">
            <summary>
            Inserts a customer session
            </summary>
            <param name="CustomerSessionGUID">Customer session GUID</param>
            <param name="CustomerID">Customer identifier</param>
            <param name="LastAccessed">The last accessed date and time</param>
            <param name="IsExpired">A value indicating whether the customer session is expired</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.UpdateCustomerSession(System.Guid,System.Int32,System.DateTime,System.Boolean)">
            <summary>
            Updates the customer session
            </summary>
            <param name="CustomerSessionGUID">Customer session GUID</param>
            <param name="CustomerID">Customer identifier</param>
            <param name="LastAccessed">The last accessed date and time</param>
            <param name="IsExpired">A value indicating whether the customer session is expired</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetRegisteredCustomersReport(System.DateTime)">
            <summary>
            Gets a report of customers registered from "dateTime" until today
            </summary>
            <param name="dateFrom">Customer registration date from</param>
            <returns>Int</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Maintenance.DBMaintenanceProvider">
            <summary>
            Acts as a base class for deriving custom maintenance provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Maintenance.DBMaintenanceProvider.Reindex">
            <summary>
            Reindex
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.DBProviderSectionNameAttribute.#ctor(System.String)">
            <summary>
            Creates a new instance of DBProviderSectionNameAttribute 
            </summary>
            <param name="sectionName">The name of the provider configuration section</param>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.DBProviderSectionNameAttribute.SectionName">
            <summary>
            Gets or sets the section name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress">
            <summary>
            Represents an address
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.#ctor">
            <summary>
            Creates a new instance of the DBAddress class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.AddressID">
            <summary>
            Gets or sets the address identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.CustomerID">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.IsBillingAddress">
            <summary>
            Gets or sets a value indicating whether the address is billing or shipping
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.FirstName">
            <summary>
            Gets or sets the first name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.LastName">
            <summary>
            Gets or sets the last name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.PhoneNumber">
            <summary>
            Gets or sets the phone number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.Email">
            <summary>
            Gets or sets the email
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.FaxNumber">
            <summary>
            Gets or sets the fax number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.Company">
            <summary>
            Gets or sets the company
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.Address1">
            <summary>
            Gets or sets the address 1
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.Address2">
            <summary>
            Gets or sets the address 2
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.City">
            <summary>
            Gets or sets the city
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.StateProvinceID">
            <summary>
            Gets or sets the state/province identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.ZipPostalCode">
            <summary>
            Gets or sets the zip/postal code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.CountryID">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethod">
            <summary>
            Represents a shipping method
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethod.#ctor">
            <summary>
            Creates a new instance of the DBShippingMethod class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethod.ShippingMethodID">
            <summary>
            Gets or sets the shipping method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethod.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethod.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethod.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaignCollection">
            <summary>
            Represents a campaign collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttribute">
            <summary>
            Represents a specification attribute
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttribute.#ctor">
            <summary>
            Creates a new instance of the DBSpecificationAttribute class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttribute.SpecificationAttributeID">
            <summary>
            Gets or sets the specification attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttribute.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttribute.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBProductSpecificationAttributeCollection">
            <summary>
            Represents a product specification attribute collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProduct">
            <summary>
            Represents a product
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.#ctor">
            <summary>
            Creates a new instance of the DBProduct class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.ProductID">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.ShortDescription">
            <summary>
            Gets or sets the short description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.FullDescription">
            <summary>
            Gets or sets the full description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.AdminComment">
            <summary>
            Gets or sets the admin comment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.ProductTypeID">
            <summary>
            Gets or sets the product type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.TemplateID">
            <summary>
            Gets or sets the template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.ShowOnHomePage">
            <summary>
            Gets or sets a value indicating whether to show the product on home page
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.MetaKeywords">
            <summary>
            Gets or sets the meta keywords
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.MetaDescription">
            <summary>
            Gets or sets the meta description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.MetaTitle">
            <summary>
            Gets or sets the meta title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.SEName">
            <summary>
            Gets or sets the search-engine name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.AllowCustomerReviews">
            <summary>
            Gets or sets a value indicating whether the product allows customer reviews
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.AllowCustomerRatings">
            <summary>
            Gets or sets a value indicating whether the product allows customer ratings
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.RatingSum">
            <summary>
            Gets or sets the rating sum
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.TotalRatingVotes">
            <summary>
            Gets or sets the total rating votes
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.CreatedOn">
            <summary>
            Gets or sets the date and time of product creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.UpdatedOn">
            <summary>
            Gets or sets the date and time of product update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Media.DBPictureCollection">
            <summary>
            Represents a picture collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureWeight">
            <summary>
            Represents a measure weight
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureWeight.#ctor">
            <summary>
            Creates a new instance of the DBMeasureWeight class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureWeight.MeasureWeightID">
            <summary>
            Gets or sets the measure weight identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureWeight.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureWeight.SystemKeyword">
            <summary>
            Gets or sets the system keyword
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureWeight.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryCollection">
            <summary>
            Represents a country collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethodProvider">
            <summary>
            Acts as a base class for deriving custom shipping rate computation method provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethodProvider.DeleteShippingRateComputationMethod(System.Int32)">
            <summary>
            Deletes a shipping rate computation method
            </summary>
            <param name="ShippingRateComputationMethodID">Shipping rate computation method identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethodProvider.GetShippingRateComputationMethodByID(System.Int32)">
            <summary>
            Gets a shipping rate computation method
            </summary>
            <param name="ShippingRateComputationMethodID">Shipping rate computation method identifier</param>
            <returns>Shipping rate computation method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethodProvider.GetAllShippingRateComputationMethods">
            <summary>
            Gets all shipping rate computation methods
            </summary>
            <returns>Shipping rate computation method collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethodProvider.InsertShippingRateComputationMethod(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Inserts a shipping rate computation method
            </summary>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="ConfigureTemplatePath">The configure template path</param>
            <param name="ClassName">The class name</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Shipping rate computation method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethodProvider.UpdateShippingRateComputationMethod(System.Int32,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Updates the shipping rate computation method
            </summary>
            <param name="ShippingRateComputationMethodID">The shipping rate computation method identifier</param>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="ConfigureTemplatePath">The configure template path</param>
            <param name="ClassName">The class name</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Shipping rate computation method</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider">
            <summary>
            Acts as a base class for deriving custom product attribute provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.DeleteProductAttribute(System.Int32)">
            <summary>
            Deletes a product attribute
            </summary>
            <param name="ProductAttributeID">Product attribute identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.GetAllProductAttributes">
            <summary>
            Gets all product attributes
            </summary>
            <returns>Product attribute collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.GetProductAttributeByID(System.Int32)">
            <summary>
            Gets a product attribute 
            </summary>
            <param name="ProductAttributeID">Product attribute identifier</param>
            <returns>Product attribute </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.InsertProductAttribute(System.String,System.String)">
            <summary>
            Inserts a product attribute
            </summary>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <returns>Product attribute </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.UpdateProductAttribute(System.Int32,System.String,System.String)">
            <summary>
            Updates the product attribute
            </summary>
            <param name="ProductAttributeID">Product attribute identifier</param>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <returns>Product attribute </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.DeleteProductVariantAttribute(System.Int32)">
            <summary>
            Deletes a product variant attribute mapping
            </summary>
            <param name="ProductVariantAttributeID">Product variant attribute mapping identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.GetProductVariantAttributesByProductVariantID(System.Int32)">
            <summary>
            Gets product variant attribute mappings by product identifier
            </summary>
            <param name="ProductVariantID">The product variant identifier</param>
            <returns>Product variant attribute mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.GetProductVariantAttributeByID(System.Int32)">
            <summary>
            Gets a product variant attribute mapping
            </summary>
            <param name="ProductVariantAttributeID">Product variant attribute mapping identifier</param>
            <returns>Product variant attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.InsertProductVariantAttribute(System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Inserts a product variant attribute mapping
            </summary>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="ProductAttributeID">The product attribute identifier</param>
            <param name="TextPrompt">The text prompt</param>
            <param name="IsRequired">The value indicating whether the entity is required</param>
            <param name="AttributeControlTypeID">The attribute control type identifier</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product variant attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.UpdateProductVariantAttribute(System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Updates the product variant attribute mapping
            </summary>
            <param name="ProductVariantAttributeID">The product variant attribute mapping identifier</param>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="ProductAttributeID">The product attribute identifier</param>
            <param name="TextPrompt">The text prompt</param>
            <param name="IsRequired">The value indicating whether the entity is required</param>
            <param name="AttributeControlTypeID">The attribute control type identifier</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product variant attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.DeleteProductVariantAttributeValue(System.Int32)">
            <summary>
            Deletes a product variant attribute value
            </summary>
            <param name="ProductVariantAttributeValueID">Product variant attribute value identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.GetProductVariantAttributeValues(System.Int32)">
            <summary>
            Gets product variant attribute values by product identifier
            </summary>
            <param name="ProductVariantAttributeID">The product variant attribute mapping identifier</param>
            <returns>Product variant attribute mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.GetProductVariantAttributeValueByID(System.Int32)">
            <summary>
            Gets a product variant attribute value
            </summary>
            <param name="ProductVariantAttributeValueID">Product variant attribute value identifier</param>
            <returns>Product variant attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.InsertProductVariantAttributeValue(System.Int32,System.String,System.Decimal,System.Decimal,System.Boolean,System.Int32)">
            <summary>
            Inserts a product variant attribute value
            </summary>
            <param name="ProductVariantAttributeID">The product variant attribute mapping identifier</param>
            <param name="Name">The product variant attribute name</param>
            <param name="PriceAdjustment">The price adjustment</param>
            <param name="WeightAdjustment">The weight adjustment</param>
            <param name="IsPreSelected">The value indicating whether the value is pre-selected</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product variant attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.UpdateProductVariantAttributeValue(System.Int32,System.Int32,System.String,System.Decimal,System.Decimal,System.Boolean,System.Int32)">
            <summary>
            Updates the product variant attribute value
            </summary>
            <param name="ProductVariantAttributeValueID">The product variant attribute value identifier</param>
            <param name="ProductVariantAttributeID">The product variant attribute mapping identifier</param>
            <param name="Name">The product variant attribute name</param>
            <param name="PriceAdjustment">The price adjustment</param>
            <param name="WeightAdjustment">The weight adjustment</param>
            <param name="IsPreSelected">The value indicating whether the value is pre-selected</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product variant attribute value</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Media.DBDownloadProvider">
            <summary>
            Acts as a base class for deriving custom download provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.DBDownloadProvider.GetDownloadByID(System.Int32)">
            <summary>
            Gets a download
            </summary>
            <param name="DownloadID">Download identifier</param>
            <returns>Download</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.DBDownloadProvider.DeleteDownload(System.Int32)">
            <summary>
            Deletes a download
            </summary>
            <param name="DownloadID">Download identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.DBDownloadProvider.InsertDownload(System.Boolean,System.String,System.Byte[],System.String,System.String,System.Boolean)">
            <summary>
            Inserts a download
            </summary>
            <param name="UseDownloadURL">The value indicating whether DownloadURL property should be used</param>
            <param name="DownloadURL">The download URL</param>
            <param name="DownloadBinary">The download binary</param>
            <param name="ContentType">The content type</param>
            <param name="Extension">The extension</param>
            <param name="IsNew">A value indicating whether the download is new</param>
            <returns>Download</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.DBDownloadProvider.UpdateDownload(System.Int32,System.Boolean,System.String,System.Byte[],System.String,System.String,System.Boolean)">
            <summary>
            Updates the download
            </summary>
            <param name="DownloadID">The download identifier</param>
            <param name="UseDownloadURL">The value indicating whether DownloadURL property should be used</param>
            <param name="DownloadURL">The download URL</param>
            <param name="DownloadBinary">The download binary</param>
            <param name="ContentType">The content type</param>
            <param name="Extension">The extension</param>
            <param name="IsNew">A value indicating whether the download is new</param>
            <returns>Download</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmailCollection">
            <summary>
            Represents a queued email collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail">
            <summary>
            Represents a queued email
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.#ctor">
            <summary>
            Creates a new instance of the DBQueuedEmail class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.QueuedEmailID">
            <summary>
            Gets or sets the ueued email identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.Priority">
            <summary>
            Gets or sets the priority
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.From">
            <summary>
            Gets or sets the From property
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.FromName">
            <summary>
            Gets or sets the FromName property
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.To">
            <summary>
            Gets or sets the To property
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.ToName">
            <summary>
            Gets or sets the ToName property
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.Cc">
            <summary>
            Gets or sets the Cc
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.Bcc">
            <summary>
            Gets or sets the Bcc
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.Subject">
            <summary>
            Gets or sets the subject
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.Body">
            <summary>
            Gets or sets the body
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.CreatedOn">
            <summary>
            Gets or sets the date and time of item creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.SendTries">
            <summary>
            Gets or sets the send tries
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.SentOn">
            <summary>
            Gets or sets the sent date and time
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBBestSellersReportLine">
            <summary>
            Represents a best sellers report line
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBBestSellersReportLine.#ctor">
            <summary>
            Creates a new instance of the DBBestSellersReportLine class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBBestSellersReportLine.ProductVariantID">
            <summary>
            Gets or sets the product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBBestSellersReportLine.SalesTotalCount">
            <summary>
            Gets or sets the total count
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBBestSellersReportLine.SalesTotalAmount">
            <summary>
            Gets or sets the total amount
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerAttributeCollection">
            <summary>
            Represents a customer attribute collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollAnswer">
            <summary>
            Represents a poll answer
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollAnswer.#ctor">
            <summary>
            Creates a new instance of the DBPollAnswer class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollAnswer.PollAnswerID">
            <summary>
            Gets or sets the poll answer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollAnswer.PollID">
            <summary>
            Gets or sets the poll identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollAnswer.Name">
            <summary>
            Gets or sets the poll answer name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollAnswer.Count">
            <summary>
            Gets or sets the current count
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollAnswer.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingStatusCollection">
            <summary>
            Represents a shipping status collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductTypeCollection">
            <summary>
            Represents a product type collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguage">
            <summary>
            Represents a language
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguage.#ctor">
            <summary>
            Creates a new instance of the DBLanguage class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguage.LanguageID">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguage.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguage.LanguageCulture">
            <summary>
            Gets or sets the language culture
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguage.Published">
            <summary>
            Gets or sets a value indicating whether the language is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguage.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpAddressCollection">
            <summary>
            Represents an IP address collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliateProvider">
            <summary>
            Acts as a base class for deriving custom affiliate provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliateProvider.GetAffiliateByID(System.Int32)">
            <summary>
            Gets an affiliate by affiliate identifier
            </summary>
            <param name="AffiliateID">Affiliate identifier</param>
            <returns>Affiliate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliateProvider.GetAllAffiliates">
            <summary>
            Gets all affiliates
            </summary>
            <returns>Affiliate collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliateProvider.InsertAffiliate(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Inserts an affiliate
            </summary>
            <param name="FirstName">The first name</param>
            <param name="LastName">The last name</param>
            <param name="MiddleName">The middle name</param>
            <param name="PhoneNumber">The phone number</param>
            <param name="Email">The email</param>
            <param name="FaxNumber">The fax number</param>
            <param name="Company">The company</param>
            <param name="Address1">The address 1</param>
            <param name="Address2">The address 2</param>
            <param name="City">The city</param>
            <param name="StateProvince">The state/province</param>
            <param name="ZipPostalCode">The zip/postal code</param>
            <param name="CountryID">The country identifier</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="Active">A value indicating whether the entity is active</param>
            <returns>An affiliate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliateProvider.UpdateAffiliate(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Updates the affiliate
            </summary>
            <param name="AffiliateID">The affiliate identifier</param>
            <param name="FirstName">The first name</param>
            <param name="LastName">The last name</param>
            <param name="MiddleName">The middle name</param>
            <param name="PhoneNumber">The phone number</param>
            <param name="Email">The email</param>
            <param name="FaxNumber">The fax number</param>
            <param name="Company">The company</param>
            <param name="Address1">The address 1</param>
            <param name="Address2">The address 2</param>
            <param name="City">The city</param>
            <param name="StateProvince">The state/province</param>
            <param name="ZipPostalCode">The zip/postal code</param>
            <param name="CountryID">The country identifier</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="Active">A value indicating whether the entity is active</param>
            <returns>An affiliate</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOption">
            <summary>
            Represents a specification attribute option
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOption.#ctor">
            <summary>
            Creates a new instance of the DBSpecificationAttributeOption class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOption.SpecificationAttributeOptionID">
            <summary>
            Gets or sets the specification attribute option identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOption.SpecificationAttributeID">
            <summary>
            Gets or sets the specification attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOption.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOption.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider">
            <summary>
            Acts as a base class for deriving custom order provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetOrderByID(System.Int32)">
            <summary>
            Gets an order
            </summary>
            <param name="OrderID">The order identifier</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.SearchOrders(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Search orders
            </summary>
            <param name="StartTime">Order start time; null to load all orders</param>
            <param name="EndTime">Order end time; null to load all orders</param>
            <param name="CustomerEmail">Customer email</param>
            <param name="OrderStatusID">Order status identifier; null to load all orders</param>
            <param name="PaymentStatusID">Order payment status identifier; null to load all orders</param>
            <param name="ShippingStatusID">Order shipping status identifier; null to load all orders</param>
            <returns>Order collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.OrderProductVariantReport(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get order product variant sales report
            </summary>
            <param name="StartTime">Order start time; null to load all</param>
            <param name="EndTime">Order end time; null to load all</param>
            <param name="OrderStatusID">Order status identifier; null to load all orders</param>
            <param name="PaymentStatusID">Order payment status identifier; null to load all orders</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.BestSellersReport(System.Int32,System.Int32,System.Int32)">
            <summary>
            Get the bests sellers report
            </summary>
            <param name="LastDays">Last number of days</param>
            <param name="RecordsToReturn">Number of products to return</param>
            <param name="OrderBy">1 - order by total count, 2 - Order by total amount</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.OrderAverageReport(System.Int32)">
            <summary>
            Get order average report
            </summary>
            <param name="OrderStatusID">Order status identifier</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetOrdersByCustomerID(System.Int32)">
            <summary>
            Gets all orders by customer identifier
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <returns>Order collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetOrderByAuthorizationTransactionIDAndPaymentMethodID(System.String,System.Int32)">
            <summary>
            Gets an order by authorization transaction identifier
            </summary>
            <param name="AuthorizationTransactionID">Authorization transaction identifier</param>
            <param name="PaymentMethodID">Payment method identifier</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetOrdersByAffiliateID(System.Int32)">
            <summary>
            Gets all orders by affiliate identifier
            </summary>
            <param name="AffiliateID">Affiliate identifier</param>
            <returns>Order collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.InsertOrder(System.Guid,System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.Decimal,System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.Int32,System.Nullable{System.DateTime},System.Boolean,System.DateTime)">
            <summary>
            Inserts an order
            </summary>
            <param name="OrderGUID">The order identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="CustomerLanguageID">The customer language identifier</param>
            <param name="CustomerTaxDisplayTypeID">The customer tax display type identifier</param>
            <param name="OrderSubtotalInclTax">The order subtotal (incl tax)</param>
            <param name="OrderSubtotalExclTax">The order subtotal (excl tax)</param>
            <param name="OrderShippingInclTax">The order shipping (incl tax)</param>
            <param name="OrderShippingExclTax">The order shipping (excl tax)</param>
            <param name="PaymentMethodAdditionalFeeInclTax">The payment method additional fee (incl tax)</param>
            <param name="PaymentMethodAdditionalFeeExclTax">The payment method additional fee (excl tax)</param>
            <param name="OrderTax">The order tax</param>
            <param name="OrderTotal">The order total</param>
            <param name="OrderDiscount">The order discount</param>
            <param name="OrderSubtotalInclTaxInCustomerCurrency">The order subtotal incl tax (customer currency)</param>
            <param name="OrderSubtotalExclTaxInCustomerCurrency">The order subtotal excl tax (customer currency)</param>
            <param name="OrderShippingInclTaxInCustomerCurrency">The order shipping incl tax (customer currency)</param>
            <param name="OrderShippingExclTaxInCustomerCurrency">The order shipping excl tax (customer currency)</param>
            <param name="PaymentMethodAdditionalFeeInclTaxInCustomerCurrency">The payment method additional fee incl tax (customer currency)</param>
            <param name="PaymentMethodAdditionalFeeExclTaxInCustomerCurrency">The payment method additional fee excl tax (customer currency)</param>
            <param name="OrderTaxInCustomerCurrency">The order tax (customer currency)</param>
            <param name="OrderTotalInCustomerCurrency">The order total (customer currency)</param>
            <param name="CustomerCurrencyCode">The customer currency code</param>
            <param name="OrderWeight">The order weight</param>
            <param name="AffiliateID">The affiliate identifier</param>
            <param name="OrderStatusID">The order status identifier</param>
            <param name="AllowStoringCreditCardNumber">The value indicating whether storing of credit card number is allowed</param>
            <param name="CardType">The card type</param>
            <param name="CardName">The card name</param>
            <param name="CardNumber">The card number</param>
            <param name="MaskedCreditCardNumber">The masked credit card number</param>
            <param name="CardCVV2">The card CVV2</param>
            <param name="CardExpirationMonth">The card expiration month</param>
            <param name="CardExpirationYear">The card expiration year</param>
            <param name="PaymentMethodID">The payment method identifier</param>
            <param name="PaymentMethodName">The payment method name</param>
            <param name="AuthorizationTransactionID">The authorization transaction ID</param>
            <param name="AuthorizationTransactionCode">The authorization transaction code</param>
            <param name="AuthorizationTransactionResult">The authorization transaction result</param>
            <param name="CaptureTransactionID">The capture transaction ID</param>
            <param name="CaptureTransactionResult">The capture transaction result</param>
            <param name="PurchaseOrderNumber">The purchase order number</param>
            <param name="PaymentStatusID">The payment status identifier</param>
            <param name="BillingFirstName">The billing first name</param>
            <param name="BillingLastName">The billing last name</param>
            <param name="BillingPhoneNumber">he billing phone number</param>
            <param name="BillingEmail">The billing email</param>
            <param name="BillingFaxNumber">The billing fax number</param>
            <param name="BillingCompany">The billing company</param>
            <param name="BillingAddress1">The billing address 1</param>
            <param name="BillingAddress2">The billing address 2</param>
            <param name="BillingCity">The billing city</param>
            <param name="BillingStateProvince">The billing state/province</param>
            <param name="BillingStateProvinceID">The billing state/province identifier</param>
            <param name="BillingZipPostalCode">The billing zip/postal code</param>
            <param name="BillingCountry">The billing country</param>
            <param name="BillingCountryID">The billing country identifier</param>
            <param name="ShippingStatusID">The shipping status identifier</param>
            <param name="ShippingFirstName">The shipping first name</param>
            <param name="ShippingLastName">The shipping last name</param>
            <param name="ShippingPhoneNumber">The shipping phone number</param>
            <param name="ShippingEmail">The shipping email</param>
            <param name="ShippingFaxNumber">The shipping fax number</param>
            <param name="ShippingCompany">The shipping  company</param>
            <param name="ShippingAddress1">The shipping address 1</param>
            <param name="ShippingAddress2">The shipping address 2</param>
            <param name="ShippingCity">The shipping city</param>
            <param name="ShippingStateProvince">The shipping state/province</param>
            <param name="ShippingStateProvinceID">The shipping state/province identifier</param>
            <param name="ShippingZipPostalCode">The shipping zip/postal code</param>
            <param name="ShippingCountry">The shipping country</param>
            <param name="ShippingCountryID">The shipping country identifier</param>
            <param name="ShippingMethod">The shipping method</param>
            <param name="ShippingRateComputationMethodID">The shipping rate computation method identifier</param>
            <param name="ShippedDate">The shipped date and time</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="CreatedOn">The date and time of order creation</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.UpdateOrder(System.Int32,System.Guid,System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.Decimal,System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.Int32,System.Nullable{System.DateTime},System.Boolean,System.DateTime)">
            <summary>
            Updates the order
            </summary>
            <param name="OrderID">The order identifier</param>
            <param name="OrderGUID">The order identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="CustomerLanguageID">The customer language identifier</param>
            <param name="CustomerTaxDisplayTypeID">The customer tax display type identifier</param>
            <param name="OrderSubtotalInclTax">The order subtotal (incl tax)</param>
            <param name="OrderSubtotalExclTax">The order subtotal (excl tax)</param>
            <param name="OrderShippingInclTax">The order shipping (incl tax)</param>
            <param name="OrderShippingExclTax">The order shipping (excl tax)</param>
            <param name="PaymentMethodAdditionalFeeInclTax">The payment method additional fee (incl tax)</param>
            <param name="PaymentMethodAdditionalFeeExclTax">The payment method additional fee (excl tax)</param>
            <param name="OrderTax">The order tax</param>
            <param name="OrderTotal">The order total</param>
            <param name="OrderDiscount">The order discount</param>
            <param name="OrderSubtotalInclTaxInCustomerCurrency">The order subtotal incl tax (customer currency)</param>
            <param name="OrderSubtotalExclTaxInCustomerCurrency">The order subtotal excl tax (customer currency)</param>
            <param name="OrderShippingInclTaxInCustomerCurrency">The order shipping incl tax (customer currency)</param>
            <param name="OrderShippingExclTaxInCustomerCurrency">The order shipping excl tax (customer currency)</param>
            <param name="PaymentMethodAdditionalFeeInclTaxInCustomerCurrency">The payment method additional fee incl tax (customer currency)</param>
            <param name="PaymentMethodAdditionalFeeExclTaxInCustomerCurrency">The payment method additional fee excl tax (customer currency)</param>
            <param name="OrderTaxInCustomerCurrency">The order tax (customer currency)</param>
            <param name="OrderTotalInCustomerCurrency">The order total (customer currency)</param>
            <param name="CustomerCurrencyCode">The customer currency code</param>
            <param name="OrderWeight">The order weight</param>
            <param name="AffiliateID">The affiliate identifier</param>
            <param name="OrderStatusID">The order status identifier</param>
            <param name="AllowStoringCreditCardNumber">The value indicating whether storing of credit card number is allowed</param>
            <param name="CardType">The card type</param>
            <param name="CardName">The card name</param>
            <param name="CardNumber">The card number</param>
            <param name="MaskedCreditCardNumber">The masked credit card number</param>
            <param name="CardCVV2">The card CVV2</param>
            <param name="CardExpirationMonth">The card expiration month</param>
            <param name="CardExpirationYear">The card expiration year</param>
            <param name="PaymentMethodID">The payment method identifier</param>
            <param name="PaymentMethodName">The payment method name</param>
            <param name="AuthorizationTransactionID">The authorization transaction ID</param>
            <param name="AuthorizationTransactionCode">The authorization transaction code</param>
            <param name="AuthorizationTransactionResult">The authorization transaction result</param>
            <param name="CaptureTransactionID">The capture transaction ID</param>
            <param name="CaptureTransactionResult">The capture transaction result</param>
            <param name="PurchaseOrderNumber">The purchase order number</param>
            <param name="PaymentStatusID">The payment status identifier</param>
            <param name="BillingFirstName">The billing first name</param>
            <param name="BillingLastName">The billing last name</param>
            <param name="BillingPhoneNumber">he billing phone number</param>
            <param name="BillingEmail">The billing email</param>
            <param name="BillingFaxNumber">The billing fax number</param>
            <param name="BillingCompany">The billing company</param>
            <param name="BillingAddress1">The billing address 1</param>
            <param name="BillingAddress2">The billing address 2</param>
            <param name="BillingCity">The billing city</param>
            <param name="BillingStateProvince">The billing state/province</param>
            <param name="BillingStateProvinceID">The billing state/province identifier</param>
            <param name="BillingZipPostalCode">The billing zip/postal code</param>
            <param name="BillingCountry">The billing country</param>
            <param name="BillingCountryID">The billing country identifier</param>
            <param name="ShippingStatusID">The shipping status identifier</param>
            <param name="ShippingFirstName">The shipping first name</param>
            <param name="ShippingLastName">The shipping last name</param>
            <param name="ShippingPhoneNumber">The shipping phone number</param>
            <param name="ShippingEmail">The shipping email</param>
            <param name="ShippingFaxNumber">The shipping fax number</param>
            <param name="ShippingCompany">The shipping  company</param>
            <param name="ShippingAddress1">The shipping address 1</param>
            <param name="ShippingAddress2">The shipping address 2</param>
            <param name="ShippingCity">The shipping city</param>
            <param name="ShippingStateProvince">The shipping state/province</param>
            <param name="ShippingStateProvinceID">The shipping state/province identifier</param>
            <param name="ShippingZipPostalCode">The shipping zip/postal code</param>
            <param name="ShippingCountry">The shipping country</param>
            <param name="ShippingCountryID">The shipping country identifier</param>
            <param name="ShippingMethod">The shipping method</param>
            <param name="ShippingRateComputationMethodID">The shipping rate computation method identifier</param>
            <param name="ShippedDate">The shipped date and time</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="CreatedOn">The date and time of order creation</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetOrderNoteByID(System.Int32)">
            <summary>
            Gets an order note
            </summary>
            <param name="OrderNoteID">Order note identifier</param>
            <returns>Order note</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetOrderNoteByOrderID(System.Int32)">
            <summary>
            Gets an order notes by order identifier
            </summary>
            <param name="OrderID">Order identifier</param>
            <returns>Order note collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.DeleteOrderNote(System.Int32)">
            <summary>
            Deletes an order note
            </summary>
            <param name="OrderNoteID">Order note identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.InsertOrderNote(System.Int32,System.String,System.DateTime)">
            <summary>
            Inserts an order note
            </summary>
            <param name="OrderID">The order identifier</param>
            <param name="Note">The note</param>
            <param name="CreatedOn">The date and time of order note creation</param>
            <returns>Order note</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.UpdateOrderNote(System.Int32,System.Int32,System.String,System.DateTime)">
            <summary>
            Updates the order note
            </summary>
            <param name="OrderNoteID">The order note identifier</param>
            <param name="OrderID">The order identifier</param>
            <param name="Note">The note</param>
            <param name="CreatedOn">The date and time of order note creation</param>
            <returns>Order note</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetOrderProductVariantByID(System.Int32)">
            <summary>
            Gets an order product variant
            </summary>
            <param name="OrderProductVariantID">Order product variant identifier</param>
            <returns>Order product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetOrderProductVariantsByOrderID(System.Int32)">
            <summary>
            Gets an order product variants by the order identifier
            </summary>
            <param name="OrderID">The order identifier</param>
            <returns>Order product variant collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.InsertOrderProductVariant(System.Int32,System.Int32,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.Int32,System.Decimal,System.Decimal,System.Int32)">
            <summary>
            Inserts a order product variant
            </summary>
            <param name="OrderID">The order identifier</param>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="UnitPriceInclTax">The unit price in primary store currency (incl tax)</param>
            <param name="UnitPriceExclTax">The unit price in primary store currency (excl tax)</param>
            <param name="PriceInclTax">The price in primary store currency (incl tax)</param>
            <param name="PriceExclTax">The price in primary store currency (excl tax)</param>
            <param name="UnitPriceInclTaxInCustomerCurrency">The unit price in primary store currency (incl tax)</param>
            <param name="UnitPriceExclTaxInCustomerCurrency">The unit price in customer currency (excl tax)</param>
            <param name="PriceInclTaxInCustomerCurrency">The price in primary store currency (incl tax)</param>
            <param name="PriceExclTaxInCustomerCurrency">The price in customer currency (excl tax)</param>
            <param name="AttributeDescription">The attribute description</param>
            <param name="Quantity">The quantity</param>
            <param name="DiscountAmountInclTax">The discount amount (incl tax)</param>
            <param name="DiscountAmountExclTax">The discount amount (excl tax)</param>
            <param name="DownloadCount">The download count</param>
            <returns>Order product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.UpdateOrderProductVariant(System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.Int32,System.Decimal,System.Decimal,System.Int32)">
            <summary>
            Updates the order product variant
            </summary>
            <param name="OrderProductVariantID">The order product variant identifier</param>
            <param name="OrderID">The order identifier</param>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="UnitPriceInclTax">The unit price in primary store currency (incl tax)</param>
            <param name="UnitPriceExclTax">The unit price in primary store currency (excl tax)</param>
            <param name="PriceInclTax">The price in primary store currency (incl tax)</param>
            <param name="PriceExclTax">The price in primary store currency (excl tax)</param>
            <param name="UnitPriceInclTaxInCustomerCurrency">The unit price in primary store currency (incl tax)</param>
            <param name="UnitPriceExclTaxInCustomerCurrency">The unit price in customer currency (excl tax)</param>
            <param name="PriceInclTaxInCustomerCurrency">The price in primary store currency (incl tax)</param>
            <param name="PriceExclTaxInCustomerCurrency">The price in customer currency (excl tax)</param>
            <param name="AttributeDescription">The attribute description</param>
            <param name="Quantity">The quantity</param>
            <param name="DiscountAmountInclTax">The discount amount (incl tax)</param>
            <param name="DiscountAmountExclTax">The discount amount (excl tax)</param>
            <param name="DownloadCount">The download count</param>
            <returns>Order product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetOrderStatusByID(System.Int32)">
            <summary>
            Gets an order status by ID
            </summary>
            <param name="OrderStatusID">Order status identifier</param>
            <returns>Order status</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetAllOrderStatuses">
            <summary>
            Gets all order statuses
            </summary>
            <returns>Order status collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetOrderReport(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets an order report
            </summary>
            <param name="OrderStatusID">Order status identifier; null to load all orders</param>
            <param name="PaymentStatusID">Order payment status identifier; null to load all orders</param>
            <param name="ShippingStatusID">Order shipping status identifier; null to load all orders</param>
            <returns>IDataReader</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerRoleCollection">
            <summary>
            Represents a customer role collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumPostCollection">
            <summary>
            Represents a forum post collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumSubscription">
            <summary>
            Represents a forum subscription item
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumSubscription.#ctor">
            <summary>
            Creates a new instance of the DBForumSubscription class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumSubscription.ForumSubscriptionID">
            <summary>
            Gets or sets the forum subscription identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumSubscription.SubscriptionGUID">
            <summary>
            Gets or sets the forum subscription identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumSubscription.UserID">
            <summary>
            Gets or sets the user identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumSubscription.ForumID">
            <summary>
            Gets or sets the forum identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumSubscription.TopicID">
            <summary>
            Gets or sets the topic identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumSubscription.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Categories.DBProductCategory">
            <summary>
            Represents a product category mapping
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBProductCategory.#ctor">
            <summary>
            Creates a new instance of the DBProductCategory class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBProductCategory.ProductCategoryID">
            <summary>
            Gets or sets the ProductCategory identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBProductCategory.ProductID">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBProductCategory.CategoryID">
            <summary>
            Gets or sets the category identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBProductCategory.IsFeaturedProduct">
            <summary>
            Gets or sets a value indicating whether the product is featured
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBProductCategory.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Templates.DBCategoryTemplateCollection">
            <summary>
            Represents a category temaplte collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProvider">
            <summary>
            Represents a tax provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProvider.#ctor">
            <summary>
            Creates a new instance of the tax provider class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProvider.TaxProviderID">
            <summary>
            Gets or sets the tax provider identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProvider.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProvider.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProvider.ConfigureTemplatePath">
            <summary>
            Gets or sets the configure template path
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProvider.ClassName">
            <summary>
            Gets or sets the class name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProvider.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingStatus">
            <summary>
            Represents a shipping status
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingStatus.#ctor">
            <summary>
            Creates a new instance of the DBShippingStatus class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingStatus.ShippingStatusID">
            <summary>
            Gets or sets the shipping status identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingStatus.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountryCollection">
            <summary>
            Represents a ShippingByWeightAndCountry collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountRequirement">
            <summary>
            Represents a discount requirement
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountRequirement.#ctor">
            <summary>
            Creates a new instance of the DBDiscountRequirement class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountRequirement.DiscountRequirementID">
            <summary>
            Gets or sets the discount requirement identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountRequirement.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountCollection">
            <summary>
            Represents a discount collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValueCollection">
            <summary>
            Represents a product variant attribute value collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartItem">
            <summary>
            Represents a shopping cart item
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartItem.#ctor">
            <summary>
            Creates a new instance of DBShoppingCartItem class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartItem.ShoppingCartItemID">
            <summary>
            Gets or sets the shopping cart item identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartItem.ShoppingCartTypeID">
            <summary>
            Gets or sets the shopping cart type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartItem.CustomerSessionGUID">
            <summary>
            Gets or sets the customer session identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartItem.ProductVariantID">
            <summary>
            Gets or sets the product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartItem.AttributesXML">
            <summary>
            Gets or sets the product variant attributes
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartItem.Quantity">
            <summary>
            Gets or sets the quantity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartItem.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartItem.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Media.DBDownload">
            <summary>
            Represents a download
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.DBDownload.#ctor">
            <summary>
            Creates a new instance of the DBDownload class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBDownload.DownloadID">
            <summary>
            Gets or sets the download identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBDownload.UseDownloadURL">
            <summary>
            Gets a sets a value indicating whether DownloadURL property should be used
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBDownload.DownloadURL">
            <summary>
            Gets a sets a download URL
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBDownload.DownloadBinary">
            <summary>
            Gets or sets the download binary
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBDownload.ContentType">
            <summary>
            The mime-type of the download
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBDownload.Extension">
            <summary>
            Gets or sets the extension
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBDownload.IsNew">
            <summary>
            Gets or sets a value indicating whether the download is new
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerCollection">
            <summary>
            Represents a manufacturer collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer">
            <summary>
            Represents a manufacturer
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.#ctor">
            <summary>
            Creates a new instance of the DBManufacturer class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.ManufacturerID">
            <summary>
            Gets or sets the manufacturer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.TemplateID">
            <summary>
            Gets or sets the template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.MetaKeywords">
            <summary>
            Gets or sets the meta keywords
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.MetaDescription">
            <summary>
            Gets or sets the meta description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.MetaTitle">
            <summary>
            Gets or sets the meta title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.SEName">
            <summary>
            Gets or sets the search-engine name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.PictureID">
            <summary>
            Gets or sets the parent picture identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.PageSize">
            <summary>
            Gets or sets the page size
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.PriceRanges">
            <summary>
            Gets or sets the available price ranges
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency">
            <summary>
            Represents a currency
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency.#ctor">
            <summary>
            Creates a new instance of the DBCurrency class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency.CurrencyID">
            <summary>
            Gets or sets the currency identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency.CurrencyCode">
            <summary>
            Gets or sets the currency code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency.Rate">
            <summary>
            Gets or sets the rate
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency.DisplayLocale">
            <summary>
            Gets or sets the display locale
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency.CustomFormatting">
            <summary>
            Gets or sets the custom formatting
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProviderProvider">
            <summary>
            Acts as a base class for deriving custom tax provider provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProviderProvider.DeleteTaxProvider(System.Int32)">
            <summary>
            Deletes a tax provider
            </summary>
            <param name="TaxProviderID">Tax provider identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProviderProvider.GetTaxProviderByID(System.Int32)">
            <summary>
            Gets a tax provider
            </summary>
            <param name="TaxProviderID">Tax provider identifier</param>
            <returns>Tax provider</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProviderProvider.GetAllTaxProviders">
            <summary>
            Gets all tax providers
            </summary>
            <returns>Shipping rate computation method collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProviderProvider.InsertTaxProvider(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Inserts a tax provider
            </summary>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="ConfigureTemplatePath">The configure template path</param>
            <param name="ClassName">The class name</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Tax provider</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProviderProvider.UpdateTaxProvider(System.Int32,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Updates the tax provider
            </summary>
            <param name="TaxProviderID">The tax provider identifier</param>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="ConfigureTemplatePath">The configure template path</param>
            <param name="ClassName">The class name</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Tax provider</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvinceProvider">
            <summary>
            Acts as a base class for deriving custom state/province provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvinceProvider.DeleteStateProvince(System.Int32)">
            <summary>
            Deletes a state/province
            </summary>
            <param name="StateProvinceID">The state/province identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvinceProvider.GetStateProvinceByID(System.Int32)">
            <summary>
            Gets a state/province
            </summary>
            <param name="StateProvinceID">The state/province identifier</param>
            <returns>State/province</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvinceProvider.GetStateProvinceByAbbreviation(System.String)">
            <summary>
            Gets a state/province 
            </summary>
            <param name="Abbreviation">The state/province abbreviation</param>
            <returns>State/province</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvinceProvider.GetStateProvincesByCountryID(System.Int32)">
            <summary>
            Gets a state/province collection by country identifier
            </summary>
            <param name="CountryID">Country identifier</param>
            <returns>State/province collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvinceProvider.InsertStateProvince(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Inserts a state/province
            </summary>
            <param name="CountryID">The country identifier</param>
            <param name="Name">The name</param>
            <param name="Abbreviation">The abbreviation</param>
            <param name="DisplayOrder">The display order</param>
            <returns>State/province</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvinceProvider.UpdateStateProvince(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Updates a state/province
            </summary>
            <param name="StateProvinceID">The state/province identifier</param>
            <param name="CountryID">The country identifier</param>
            <param name="Name">The name</param>
            <param name="Abbreviation">The abbreviation</param>
            <param name="DisplayOrder">The display order</param>
            <returns>State/province</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Media.DBPictureProvider">
            <summary>
            Acts as a base class for deriving custom picture provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.DBPictureProvider.GetPictureByID(System.Int32)">
            <summary>
            Gets a picture
            </summary>
            <param name="PictureID">Picture identifier</param>
            <returns>Picture</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.DBPictureProvider.DeletePicture(System.Int32)">
            <summary>
            Deletes a picture
            </summary>
            <param name="PictureID">Picture identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.DBPictureProvider.InsertPicture(System.Byte[],System.String,System.Boolean)">
            <summary>
            Inserts a picture
            </summary>
            <param name="PictureBinary">The picture binary</param>
            <param name="Extension">The picture extension</param>
            <param name="IsNew">A value indicating whether the picture is new</param>
            <returns>Picture</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.DBPictureProvider.UpdatePicture(System.Int32,System.Byte[],System.String,System.Boolean)">
            <summary>
            Updates the picture
            </summary>
            <param name="PictureID">The picture identifier</param>
            <param name="PictureBinary">The picture binary</param>
            <param name="Extension">The picture extension</param>
            <param name="IsNew">A value indicating whether the picture is new</param>
            <returns>Picture</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider">
            <summary>
            Acts as a base class for deriving custom news provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider.GetNewsByID(System.Int32)">
            <summary>
            Gets a news
            </summary>
            <param name="NewsID">The news identifier</param>
            <returns>News</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider.DeleteNews(System.Int32)">
            <summary>
            Deletes a news
            </summary>
            <param name="NewsID">The news identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider.GetNews(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets news item collection
            </summary>
            <param name="LanguageID">Language identifier. 0 if you want to get all news</param>
            <param name="NewsCount">News item count. 0 if you want to get all news</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>News item collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider.InsertNews(System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Inserts a news item
            </summary>
            <param name="LanguageID">The language identifier</param>
            <param name="Title">The news title</param>
            <param name="Short">The short text</param>
            <param name="Full">The full text</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="AllowComments">A value indicating whether the entity allows comments</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>News item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider.UpdateNews(System.Int32,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Updates the news item
            </summary>
            <param name="NewsID">The news identifier</param>
            <param name="LanguageID">The language identifier</param>
            <param name="Title">The news title</param>
            <param name="Short">The short text</param>
            <param name="Full">The full text</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="AllowComments">A value indicating whether the entity allows comments</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>News item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider.GetNewsCommentByID(System.Int32)">
            <summary>
            Gets a news comment
            </summary>
            <param name="NewsCommentID">News comment identifer</param>
            <returns>News comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider.GetNewsCommentsByNewsID(System.Int32)">
            <summary>
            Gets a news comment collection by news identifier
            </summary>
            <param name="NewsID">The news identifier</param>
            <returns>News comment collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider.DeleteNewsComment(System.Int32)">
            <summary>
            Deletes a news comment
            </summary>
            <param name="NewsCommentID">The news comment identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider.GetAllNewsComments">
            <summary>
            Gets all news comments
            </summary>
            <returns>News comment collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider.InsertNewsComment(System.Int32,System.Int32,System.String,System.String,System.DateTime)">
            <summary>
            Inserts a news comment
            </summary>
            <param name="NewsID">The news identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="Title">The title</param>
            <param name="Comment">The comment</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>News comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider.UpdateNewsComment(System.Int32,System.Int32,System.Int32,System.String,System.String,System.DateTime)">
            <summary>
            Updates the news comment
            </summary>
            <param name="NewsCommentID">The news comment identifier</param>
            <param name="NewsID">The news identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="Title">The title</param>
            <param name="Comment">The comment</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>News comment</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider">
            <summary>
            Acts as a base class for deriving custom discount provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.GetDiscountByID(System.Int32)">
            <summary>
            Gets a discount
            </summary>
            <param name="DiscountID">Discount identifier</param>
            <returns>Discount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.GetAllDiscounts(System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Gets all discounts
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="DiscountTypeID">Discount type identifier; null to load all discount</param>
            <returns>Discount collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.InsertDiscount(System.Int32,System.Int32,System.String,System.Boolean,System.Decimal,System.Decimal,System.DateTime,System.DateTime,System.Boolean,System.String,System.Boolean)">
            <summary>
            Inserts a discount
            </summary>
            <param name="DiscountTypeID">The discount type identifier</param>
            <param name="DiscountRequirementID">The discount requirement identifier</param>
            <param name="Name">The name</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="DiscountPercentage">The discount percentage</param>
            <param name="DiscountAmount">The discount amount</param>
            <param name="StartDate">The discount start date and time</param>
            <param name="EndDate">The discount end date and time</param>
            <param name="RequiresCouponCode">The value indicating whether discount requires coupon code</param>
            <param name="CouponCode">The coupon code</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <returns>Discount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.UpdateDiscount(System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Decimal,System.Decimal,System.DateTime,System.DateTime,System.Boolean,System.String,System.Boolean)">
            <summary>
            Updates the discount
            </summary>
            <param name="DiscountID">Discount identifier</param>
            <param name="DiscountTypeID">The discount type identifier</param>
            <param name="DiscountRequirementID">The discount requirement identifier</param>
            <param name="Name">The name</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="DiscountPercentage">The discount percentage</param>
            <param name="DiscountAmount">The discount amount</param>
            <param name="StartDate">The discount start date and time</param>
            <param name="EndDate">The discount end date and time</param>
            <param name="RequiresCouponCode">The value indicating whether discount requires coupon code</param>
            <param name="CouponCode">The coupon code</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <returns>Discount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.AddDiscountToProductVariant(System.Int32,System.Int32)">
            <summary>
            Adds a discount to a product variant
            </summary>
            <param name="ProductVariantID">Product variant identifier</param>
            <param name="DiscountID">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.RemoveDiscountFromProductVariant(System.Int32,System.Int32)">
            <summary>
            Removes a discount from a product variant
            </summary>
            <param name="ProductVariantID">Product variant identifier</param>
            <param name="DiscountID">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.GetDiscountsByProductVariantID(System.Int32,System.Boolean)">
            <summary>
            Gets a discount collection of a product variant
            </summary>
            <param name="ProductVariantID">Product variant identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Discount collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.AddDiscountToCategory(System.Int32,System.Int32)">
            <summary>
            Adds a discount to a category
            </summary>
            <param name="CategoryID">Category identifier</param>
            <param name="DiscountID">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.RemoveDiscountFromCategory(System.Int32,System.Int32)">
            <summary>
            Removes a discount from a category
            </summary>
            <param name="CategoryID">Category identifier</param>
            <param name="DiscountID">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.GetDiscountsByCategoryID(System.Int32,System.Boolean)">
            <summary>
            Gets a discount collection of a category
            </summary>
            <param name="CategoryID">Category identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Discount collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.GetAllDiscountRequirements">
            <summary>
            Gets all discount requirements
            </summary>
            <returns>Discount requirement collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.GetAllDiscountTypes">
            <summary>
            Gets all discount types
            </summary>
            <returns>Discount type collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpNetwork">
            <summary>
            Network IP address range implementation
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpNetwork.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpNetwork.BannedIpNetworkID">
            <summary>
            Gets or sets the IP address unique identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpNetwork.StartAddress">
            <summary>
            Gets or sets the starting IP address in the range
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpNetwork.EndAddress">
            <summary>
            Gets or sets the ending IP address in the range
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpNetwork.Comment">
            <summary>
            Gets or sets a reason why the IP network was banned
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpNetwork.IpException">
            <summary>
            Gets or sets a list of exceptions in the IP Network
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpNetwork.CreatedOn">
            <summary>
            Gets or sets when the IP address record was banned
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpNetwork.UpdatedOn">
            <summary>
            Gets or sets when the banned IP address record was last updated
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerSession">
            <summary>
            Represents a customer session
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerSession.#ctor">
            <summary>
            Creates a new instance of the DBCustomerSession class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerSession.CustomerSessionGUID">
            <summary>
            Gets or sets the customer session identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerSession.CustomerID">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerSession.LastAccessed">
            <summary>
            Gets or sets the last accessed date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerSession.IsExpired">
            <summary>
            Gets or sets a value indicating whether the customer session is expired
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerRole">
            <summary>
            Represents a customer role
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerRole.#ctor">
            <summary>
            Creates a new instance of the DBCustomerRole class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerRole.CustomerRoleID">
            <summary>
            Gets or sets the customer role identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerRole.Name">
            <summary>
            Gets or sets the customer role name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerRole.FreeShipping">
            <summary>
            Gets or sets a value indicating whether the customer role is marked as free shiping
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerRole.TaxExempt">
            <summary>
            Gets or sets a value indicating whether the customer role is marked as tax exempt
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerRole.Active">
            <summary>
            Gets or sets a value indicating whether the customer role is active
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerRole.Deleted">
            <summary>
            Gets or sets a value indicating whether the customer role has been deleted
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsCollection">
            <summary>
            Represents a news collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod">
            <summary>
            Represents a payment method
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod.#ctor">
            <summary>
            Creates a new instance of the DBPaymentMethod class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod.PaymentMethodID">
            <summary>
            Gets or sets the payment method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod.VisibleName">
            <summary>
            Gets or sets the visible name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod.ConfigureTemplatePath">
            <summary>
            Gets or sets the configure template path
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod.UserTemplatePath">
            <summary>
            Gets or sets the user template path
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod.ClassName">
            <summary>
            Gets or sets the class name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod.SystemKeyword">
            <summary>
            Gets or sets the system keyword
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod.IsActive">
            <summary>
            Gets or sets a value indicating whether the payment method is active
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCart">
            <summary>
            Represents a shopping cart
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant">
            <summary>
            Represents an order product variant
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.#ctor">
            <summary>
            Creates a new instance of the DBOrderProductVariant class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.OrderProductVariantID">
            <summary>
            Gets or sets the order product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.OrderID">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.ProductVariantID">
            <summary>
            Gets or sets the product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.UnitPriceInclTax">
            <summary>
            Gets or sets the unit price in primary store currency (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.UnitPriceExclTax">
            <summary>
            Gets or sets the unit price in primary store currency (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.PriceInclTax">
            <summary>
            Gets or sets the price in primary store currency (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.PriceExclTax">
            <summary>
            Gets or sets the price in primary store currency (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.UnitPriceInclTaxInCustomerCurrency">
            <summary>
            Gets or sets the unit price in customer currency (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.UnitPriceExclTaxInCustomerCurrency">
            <summary>
            Gets or sets the unit price in customer currency (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.PriceInclTaxInCustomerCurrency">
            <summary>
            Gets or sets the price in customer currency (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.PriceExclTaxInCustomerCurrency">
            <summary>
            Gets or sets the price in customer currency (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.AttributeDescription">
            <summary>
            Gets or sets the attribute description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.Quantity">
            <summary>
            Gets or sets the quantity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.DiscountAmountInclTax">
            <summary>
            Gets or sets the discount amount (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.DiscountAmountExclTax">
            <summary>
            Gets or sets the discount amount (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.DownloadCount">
            <summary>
            Gets or sets the download count
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrencyCollection">
            <summary>
            Represents a currency collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry">
            <summary>
            Represents a country
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry.#ctor">
            <summary>
            Creates a new instance of the DBCountry class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry.CountryID">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry.AllowsRegistration">
            <summary>
            Gets or sets a value indicating whether registration is allowed to this country
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry.AllowsBilling">
            <summary>
            Gets or sets a value indicating whether billing is allowed to this country
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry.AllowsShipping">
            <summary>
            Gets or sets a value indicating whether shipping is allowed to this country
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry.TwoLetterISOCode">
            <summary>
            Gets or sets the two letter ISO code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry.ThreeLetterISOCode">
            <summary>
            Gets or sets the three letter ISO code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry.NumericISOCode">
            <summary>
            Gets or sets the numeric ISO code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartProvider">
            <summary>
            Acts as a base class for deriving custom shopping cart provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartProvider.DeleteShoppingCartItem(System.Int32)">
            <summary>
            Deletes a shopping cart item
            </summary>
            <param name="ShoppingCartItemID">The shopping cart item identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartProvider.GetShoppingCartByCustomerSessionGUID(System.Int32,System.Guid)">
            <summary>
            Gets a shopping cart by customer session GUID
            </summary>
            <param name="ShoppingCartTypeID">Shopping cart type identifier</param>
            <param name="CustomerSessionGUID">The customer session identifier</param>
            <returns>Cart</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartProvider.GetShoppingCartItemByID(System.Int32)">
            <summary>
            Gets a shopping cart item
            </summary>
            <param name="ShoppingCartItemID">The shopping cart item identifier</param>
            <returns>Shopping cart item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartProvider.InsertShoppingCartItem(System.Int32,System.Guid,System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a shopping cart item
            </summary>
            <param name="ShoppingCartTypeID">The shopping cart type identifier</param>
            <param name="CustomerSessionGUID">The customer session identifier</param>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="AttributesXML">The product variant attributes</param>
            <param name="Quantity">The quantity</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Shopping cart item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartProvider.UpdateShoppingCartItem(System.Int32,System.Int32,System.Guid,System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the shopping cart item
            </summary>
            <param name="ShoppingCartItemID">The shopping cart item identifier</param>
            <param name="ShoppingCartTypeID">The shopping cart type identifier</param>
            <param name="CustomerSessionGUID">The customer session identifier</param>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="AttributesXML">The product variant attributes</param>
            <param name="Quantity">The quantity</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Shopping cart item</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider">
            <summary>
            Acts as a base class for deriving custom category provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.GetAllCategories(System.Int32,System.Boolean)">
            <summary>
            Gets all categories
            </summary>
            <param name="ParentCategoryID">Parent category identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Category collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.GetCategoryByID(System.Int32)">
            <summary>
            Gets a category
            </summary>
            <param name="CategoryID">Category identifier</param>
            <returns>Category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.InsertCategory(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts category identifier
            </summary>
            <param name="Name">The category name</param>
            <param name="Description">The description</param>
            <param name="TemplateID">The template identifier</param>
            <param name="MetaKeywords">The meta keywords</param>
            <param name="MetaDescription">The meta description</param>
            <param name="MetaTitle">The meta title</param>
            <param name="SEName">The search-engine name</param>
            <param name="ParentCategoryID">The parent category identifier</param>
            <param name="PictureID">The picture identifier</param>
            <param name="PageSize">The page size</param>
            <param name="PriceRanges">The price ranges</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.UpdateCategory(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the category
            </summary>
            <param name="CategoryID">Category identifier</param>
            <param name="Name">The category name</param>
            <param name="Description">The description</param>
            <param name="TemplateID">The template identifier</param>
            <param name="MetaKeywords">The meta keywords</param>
            <param name="MetaDescription">The meta description</param>
            <param name="MetaTitle">The meta title</param>
            <param name="SEName">The search-engine name</param>
            <param name="ParentCategoryID">The parent category identifier</param>
            <param name="PictureID">The picture identifier</param>
            <param name="PageSize">The page size</param>
            <param name="PriceRanges">The price ranges</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.DeleteProductCategory(System.Int32)">
            <summary>
            Deletes a product category mapping
            </summary>
            <param name="ProductCategoryID">Product category identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.GetProductCategoriesByCategoryID(System.Int32,System.Boolean)">
            <summary>
            Gets product category mapping collection
            </summary>
            <param name="CategoryID">Category identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product a category mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.GetProductCategoriesByProductID(System.Int32,System.Boolean)">
            <summary>
            Gets a product category mapping collection
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product category mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.GetProductCategoryByID(System.Int32)">
            <summary>
            Gets a product category mapping 
            </summary>
            <param name="ProductCategoryID">Product category mapping identifier</param>
            <returns>Product category mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.InsertProductCategory(System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Inserts a product category mapping
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="CategoryID">Category identifier</param>
            <param name="IsFeaturedProduct">A value indicating whether the product is featured</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product category mapping </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.UpdateProductCategory(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Updates the product category mapping 
            </summary>
            <param name="ProductCategoryID">Product category mapping  identifier</param>
            <param name="ProductID">Product identifier</param>
            <param name="CategoryID">Category identifier</param>
            <param name="IsFeaturedProduct">A value indicating whether the product is featured</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product category mapping </returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantPricelist">
            <summary>
            Represents a ProductVariantPricelist
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantPricelist.#ctor">
            <summary>
            Creates a new instance of the DBProductVariantPricelist class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantPricelist.ProductVariantPricelistID">
            <summary>
            Gets or sets the product variant pricelist identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantPricelist.ProductVariantID">
            <summary>
            Gets or sets the product variant identifer
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantPricelist.PricelistID">
            <summary>
            Gets or sets the pricelist identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantPricelist.PriceAdjustmentTypeID">
            <summary>
            Gets or sets the type of price adjustment (if used) (relative or absolute)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantPricelist.PriceAdjustment">
            <summary>
            Gets or sets the price will be adjusted by this amount (in accordance with PriceAdjustmentType)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantPricelist.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum">
            <summary>
            Represents a forum
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.#ctor">
            <summary>
            Creates a new instance of the DBForum class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.ForumID">
            <summary>
            Gets or sets the forum identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.ForumGroupID">
            <summary>
            Gets or sets the forum group identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.NumTopics">
            <summary>
            Gets or sets the number of topics
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.NumPosts">
            <summary>
            Gets or sets the number of posts
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.LastTopicID">
            <summary>
            Gets or sets the last topic identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.LastPostID">
            <summary>
            Gets or sets the last post identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.LastPostUserID">
            <summary>
            Gets or sets the last post user identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.LastPostTime">
            <summary>
            Gets or sets the last post date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumGroup">
            <summary>
            Represents a forum group
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumGroup.#ctor">
            <summary>
            Creates a new instance of the DBForumGroup class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumGroup.ForumGroupID">
            <summary>
            Gets or sets the forum group identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumGroup.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumGroup.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumGroup.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumGroup.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumGroup.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogPostCollection">
            <summary>
            Represents a blog post collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Templates.DBManufacturerTemplateCollection">
            <summary>
            Represents a manufacturer template collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRate">
            <summary>
            Represents a tax rate
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRate.#ctor">
            <summary>
            Creates a new instance of the DBTaxRate class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRate.TaxRateID">
            <summary>
            Gets or sets the tax rate identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRate.TaxCategoryID">
            <summary>
            Gets or sets the tax category identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRate.CountryID">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRate.StateProvinceID">
            <summary>
            Gets or sets the state/province identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRate.Zip">
            <summary>
            Gets or sets the zip
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRate.Percentage">
            <summary>
            Gets or sets the percentage
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotalCollection">
            <summary>
            Represents a ShippingByTotal collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBProductSpecificationAttribute">
            <summary>
            Represents a product specification attribute
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBProductSpecificationAttribute.#ctor">
            <summary>
            Creates a new instance of the DBProductSpecificationAttribute class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBProductSpecificationAttribute.ProductSpecificationAttributeID">
            <summary>
            Gets or sets the product specification attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBProductSpecificationAttribute.ProductID">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBProductSpecificationAttribute.SpecificationAttributeOptionID">
            <summary>
            Gets or sets the specification attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBProductSpecificationAttribute.AllowFiltering">
            <summary>
            Gets or sets whether the attribute can be filtered by
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBProductSpecificationAttribute.ShowOnProductPage">
            <summary>
            Gets or sets whether the attrbiute will be shown on the product page
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBProductSpecificationAttribute.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttribute">
            <summary>
            Represents a product attribute
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttribute.#ctor">
            <summary>
            Creates a new instance of the DBProductAttribute class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttribute.ProductAttributeID">
            <summary>
            Gets or sets the product attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttribute.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttribute.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardTypeCollection">
            <summary>
            Represents a credit card type collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Messages.DBLocalizedMessageTemplateCollection">
            <summary>
            Represents a localized message template collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResourceCollection">
            <summary>
            Represents a locale string resource collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotalProvider">
            <summary>
            Acts as a base class for deriving custom ShippingByTotal provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotalProvider.GetByID(System.Int32)">
            <summary>
            Get a ShippingByTotal
            </summary>
            <param name="ShippingByTotalID">ShippingByTotal identifier</param>
            <returns>ShippingByTotal</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotalProvider.DeleteShippingByTotal(System.Int32)">
            <summary>
            Deletes a ShippingByTotal
            </summary>
            <param name="ShippingByTotalID">ShippingByTotal identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotalProvider.GetAll">
            <summary>
            Gets all ShippingByTotals
            </summary>
            <returns>ShippingByTotal collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotalProvider.InsertShippingByTotal(System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Inserts a ShippingByTotal
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="From">The "from" value</param>
            <param name="To">The "to" value</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="ShippingChargePercentage">The shipping charge percentage</param>
            <param name="ShippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByTotal</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotalProvider.UpdateShippingByTotal(System.Int32,System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Updates the ShippingByTotal
            </summary>
            <param name="ShippingByTotalID">The ShippingByTotal identifier</param>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="From">The "from" value</param>
            <param name="To">The "to" value</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="ShippingChargePercentage">The shipping charge percentage</param>
            <param name="ShippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByTotal</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotalProvider.GetAllByShippingMethodID(System.Int32)">
            <summary>
            Gets all ShippingByTotals by shipping method identifier
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <returns>ShippingByTotal collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguageProvider">
            <summary>
            Acts as a base class for deriving custom language provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguageProvider.DeleteLanguage(System.Int32)">
            <summary>
            Deletes a language
            </summary>
            <param name="LanguageID">Language identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguageProvider.GetAllLanguages(System.Boolean)">
            <summary>
            Gets all languages
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Language collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguageProvider.GetLanguageByID(System.Int32)">
            <summary>
            Gets a language
            </summary>
            <param name="LanguageID">Language identifier</param>
            <returns>Language</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguageProvider.InsertLanguage(System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Inserts a language
            </summary>
            <param name="Name">The name</param>
            <param name="LanguageCulture">The language culture</param>
            <param name="Published">A value indicating whether the language is published</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Language</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguageProvider.UpdateLanguage(System.Int32,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Updates a language
            </summary>
            <param name="LanguageID">Language identifier</param>
            <param name="Name">The name</param>
            <param name="LanguageCulture">The language culture</param>
            <param name="Published">A value indicating whether the language is published</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Language</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.DBProviderSection">
            <summary>
            This class provides a way to programmatically access and modify the provider section of a configuration file. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.DBProviderSection.#cctor">
            <summary>
            Initializes a new instance of the DBProviderConfiguration class.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.DBProviderSection.DefaultProvider">
            <summary>
            Gets or sets the name of the default provider
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.DBProviderSection.Properties">
            <summary>
            Gets the collection of properties.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.DBProviderSection.Providers">
            <summary>
            Gets a ProviderSettingsCollection object of ProviderSettings elements.
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogCommentCollection">
            <summary>
            Represents a blog comment collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory">
            <summary>
            Represents a category
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.#ctor">
            <summary>
            Creates a new instance of the DBCategory class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.CategoryID">
            <summary>
            Gets or sets the category identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.TemplateID">
            <summary>
            Gets or sets the template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.MetaKeywords">
            <summary>
            Gets or sets the meta keywords
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.MetaDescription">
            <summary>
            Gets or sets the meta description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.MetaTitle">
            <summary>
            Gets or sets the meta title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.SEName">
            <summary>
            Gets or sets the search-engine name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.ParentCategoryID">
            <summary>
            Gets or sets the parent category identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.PictureID">
            <summary>
            Gets or sets the picture identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.PageSize">
            <summary>
            Gets or sets the page size
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.PriceRanges">
            <summary>
            Gets or sets the available price ranges
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategoryCollection">
            <summary>
            Represents a tax category collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductReviewCollection">
            <summary>
            Represents a product review collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductPicture">
            <summary>
            Represents a product picture mapping
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductPicture.#ctor">
            <summary>
            Creates a new instance of the DBProductPicture class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductPicture.ProductPictureID">
            <summary>
            Gets or sets the ProductPicture identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductPicture.ProductID">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductPicture.PictureID">
            <summary>
            Gets or sets the picture identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductPicture.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentStatus">
            <summary>
            Represents a payment status
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentStatus.#ctor">
            <summary>
            Creates a new instance of the DBPaymentStatus class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentStatus.PaymentStatusID">
            <summary>
            Gets or sets the payment status identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentStatus.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethodCollection">
            <summary>
            Represents a payment method collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRateProvider">
            <summary>
            Acts as a base class for deriving custom tax rate provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRateProvider.DeleteTaxRate(System.Int32)">
            <summary>
            Deletes a tax rate
            </summary>
            <param name="TaxRateID">Tax rate identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRateProvider.GetTaxRateByID(System.Int32)">
            <summary>
            Gets a tax rate
            </summary>
            <param name="TaxRateID">Tax rate identifier</param>
            <returns>Tax rate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRateProvider.GetAllTaxRates">
            <summary>
            Gets all tax rates
            </summary>
            <returns>Tax rate collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRateProvider.InsertTaxRate(System.Int32,System.Int32,System.Int32,System.String,System.Decimal)">
            <summary>
            Inserts a tax rate
            </summary>
            <param name="TaxCategoryID">The tax category identifier</param>
            <param name="CountryID">The country identifier</param>
            <param name="StateProvinceID">The state/province identifier</param>
            <param name="Zip">The zip</param>
            <param name="Percentage">The percentage</param>
            <returns>Tax rate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRateProvider.UpdateTaxRate(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Decimal)">
            <summary>
            Updates the tax rate
            </summary>
            <param name="TaxRateID">The tax rate identifier</param>
            <param name="TaxCategoryID">The tax category identifier</param>
            <param name="CountryID">The country identifier</param>
            <param name="StateProvinceID">The state/province identifier</param>
            <param name="Zip">The zip</param>
            <param name="Percentage">The percentage</param>
            <returns>Tax rate</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentStatusProvider">
            <summary>
            Acts as a base class for deriving custom payment status provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentStatusProvider.GetPaymentStatusByID(System.Int32)">
            <summary>
            Gets a payment status by ID
            </summary>
            <param name="PaymentStatusID">payment status identifier</param>
            <returns>Payment status</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentStatusProvider.GetAllPaymentStatuses">
            <summary>
            Gets all payment statuses
            </summary>
            <returns>Payment status collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpNetworkCollection">
            <summary>
            Represents an IP network collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaignProvider">
            <summary>
            Acts as a base class for deriving custom campaign provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaignProvider.GetCampaignByID(System.Int32)">
            <summary>
            Gets a campaign by campaign identifier
            </summary>
            <param name="CampaignID">Campaign identifier</param>
            <returns>Message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaignProvider.DeleteCampaign(System.Int32)">
            <summary>
            Deletes a campaign
            </summary>
            <param name="CampaignID">Campaign identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaignProvider.GetAllCampaigns">
            <summary>
            Gets all campaigns
            </summary>
            <returns>Campaign collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaignProvider.InsertCampaign(System.String,System.String,System.String,System.DateTime)">
            <summary>
            Inserts a campaign
            </summary>
            <param name="Name">The name</param>
            <param name="Subject">The subject</param>
            <param name="Body">The body</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Campaign</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaignProvider.UpdateCampaign(System.Int32,System.String,System.String,System.String,System.DateTime)">
            <summary>
            Updates the campaign
            </summary>
            <param name="CampaignID">The campaign identifier</param>
            <param name="Name">The name</param>
            <param name="Subject">The subject</param>
            <param name="Body">The body</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Campaign</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethodCollection">
            <summary>
            Represents a shipping rate computation method collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountRequirementCollection">
            <summary>
            Represents a discount requirement collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductType">
            <summary>
            Represents a product type
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductType.#ctor">
            <summary>
            Creates a new instance of the DBProductType class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductType.ProductTypeID">
            <summary>
            Gets or sets the product type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductType.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductType.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductType.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductType.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureDimension">
            <summary>
            Represents a measure dimension
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureDimension.#ctor">
            <summary>
            Creates a new instance of the DBMeasureDimension class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureDimension.MeasureDimensionID">
            <summary>
            Gets or sets the measure dimension identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureDimension.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureDimension.SystemKeyword">
            <summary>
            Gets or sets the system keyword
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureDimension.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvince">
            <summary>
            Represents a state/province
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvince.#ctor">
            <summary>
            Creates a new instance of the DBStateProvince class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvince.StateProvinceID">
            <summary>
            Gets or sets the state/province identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvince.CountryID">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvince.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvince.Abbreviation">
            <summary>
            Gets or sets the abbreviation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvince.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethodProvider">
            <summary>
            Acts as a base class for deriving custom payment method provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethodProvider.DeletePaymentMethod(System.Int32)">
            <summary>
            Deletes a payment method
            </summary>
            <param name="PaymentMethodID">Payment method identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethodProvider.GetPaymentMethodByID(System.Int32)">
            <summary>
            Gets a payment method
            </summary>
            <param name="PaymentMethodID">Payment method identifier</param>
            <returns>Payment method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethodProvider.GetPaymentMethodBySystemKeyword(System.String)">
            <summary>
            Gets a payment method
            </summary>
            <param name="SystemKeyword">Payment method system keyword</param>
            <returns>Payment method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethodProvider.GetAllPaymentMethods(System.Boolean)">
            <summary>
            Gets all payment methods
            </summary>
            <returns>Payment method collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethodProvider.InsertPaymentMethod(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Inserts a payment method
            </summary>
            <param name="Name">The name</param>
            <param name="VisibleName">The visible name</param>
            <param name="Description">The description</param>
            <param name="ConfigureTemplatePath">The configure template path</param>
            <param name="UserTemplatePath">The user template path</param>
            <param name="ClassName">The class name</param>
            <param name="SystemKeyword">The system keyword</param>
            <param name="IsActive">A value indicating whether the payment method is active</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Payment method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethodProvider.UpdatePaymentMethod(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Updates the payment method
            </summary>
            <param name="PaymentMethodID">The payment method identifer</param>
            <param name="Name">The name</param>
            <param name="VisibleName">The visible name</param>
            <param name="Description">The description</param>
            <param name="ConfigureTemplatePath">The configure template path</param>
            <param name="UserTemplatePath">The user template path</param>
            <param name="ClassName">The class name</param>
            <param name="SystemKeyword">The system keyword</param>
            <param name="IsActive">A value indicating whether the payment method is active</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Payment method</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Audit.DBLog">
            <summary>
            Represents a log record
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBLog.#ctor">
            <summary>
            Creates a new instance of the DBLog class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBLog.LogID">
            <summary>
            Gets or sets the log identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBLog.LogTypeID">
            <summary>
            Gets or sets the log type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBLog.Severity">
            <summary>
            Gets or sets the severity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBLog.Message">
            <summary>
            Gets or sets the short message
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBLog.Exception">
            <summary>
            Gets or sets the full exception
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBLog.IPAddress">
            <summary>
            Gets or sets the IP address
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBLog.CustomerID">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBLog.PageURL">
            <summary>
            Gets or sets the page URL
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBLog.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantCollection">
            <summary>
            Represents a product variant collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentStatusCollection">
            <summary>
            Represents a payment status collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderStatus">
            <summary>
            Represents an order status
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderStatus.#ctor">
            <summary>
            Creates a new instance of the DBOrderStatus class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderStatus.OrderStatusID">
            <summary>
            Gets or sets the order status identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderStatus.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariantCollection">
            <summary>
            Represents an order product variant collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderCollection">
            <summary>
            Represents an order collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Messages.DBLocalizedMessageTemplate">
            <summary>
            Represents a localized message template
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBLocalizedMessageTemplate.#ctor">
            <summary>
            Creates a new instance of the DBLocalizedMessageTemplate class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBLocalizedMessageTemplate.MessageTemplateLocalizedID">
            <summary>
            Gets or sets the localized message template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBLocalizedMessageTemplate.MessageTemplateID">
            <summary>
            Gets or sets the message template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBLocalizedMessageTemplate.LanguageID">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBLocalizedMessageTemplate.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBLocalizedMessageTemplate.Subject">
            <summary>
            Gets or sets the subject
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBLocalizedMessageTemplate.Body">
            <summary>
            Gets or sets the body
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider">
            <summary>
            Acts as a base class for deriving custom template provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.DeleteCategoryTemplate(System.Int32)">
            <summary>
            Deletes a category template
            </summary>
            <param name="CategoryTemplateID">Category template identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.GetAllCategoryTemplates">
            <summary>
            Gets all category templates
            </summary>
            <returns>Category template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.GetCategoryTemplateByID(System.Int32)">
            <summary>
            Gets a category template
            </summary>
            <param name="CategoryTemplateID">Category template identifier</param>
            <returns>A category template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.InsertCategoryTemplate(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a category template
            </summary>
            <param name="Name">The name</param>
            <param name="TemplatePath">The template path</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>A category template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.UpdateCategoryTemplate(System.Int32,System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the category template
            </summary>
            <param name="CategoryTemplateID">Category template identifier</param>
            <param name="Name">The name</param>
            <param name="TemplatePath">The template path</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>A category template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.DeleteManufacturerTemplate(System.Int32)">
            <summary>
            Deletes a manufacturer template
            </summary>
            <param name="ManufacturerTemplateID">Manufacturer template identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.GetAllManufacturerTemplates">
            <summary>
            Gets all manufacturer templates
            </summary>
            <returns>Manufacturer template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.GetManufacturerTemplateByID(System.Int32)">
            <summary>
            Gets a manufacturer template
            </summary>
            <param name="ManufacturerTemplateID">Manufacturer template identifier</param>
            <returns>Manufacturer template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.InsertManufacturerTemplate(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a manufacturer template
            </summary>
            <param name="Name">The manufacturer template identifier</param>
            <param name="TemplatePath">The template path</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Manufacturer template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.UpdateManufacturerTemplate(System.Int32,System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the manufacturer template
            </summary>
            <param name="ManufacturerTemplateID">Manufacturer template identifer</param>
            <param name="Name">The manufacturer template identifier</param>
            <param name="TemplatePath">The template path</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Manufacturer template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.DeleteProductTemplate(System.Int32)">
            <summary>
            Deletes a product template
            </summary>
            <param name="ProductTemplateID">Product template identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.GetAllProductTemplates">
            <summary>
            Gets all product templates
            </summary>
            <returns>Product template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.GetProductTemplateByID(System.Int32)">
            <summary>
            Gets a product template
            </summary>
            <param name="ProductTemplateID">Product template identifier</param>
            <returns>Product template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.InsertProductTemplate(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a product template
            </summary>
            <param name="Name">The name</param>
            <param name="TemplatePath">The template path</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Product template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.UpdateProductTemplate(System.Int32,System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the product template
            </summary>
            <param name="ProductTemplateID">The product template identifier</param>
            <param name="Name">The name</param>
            <param name="TemplatePath">The template path</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Product template</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardTypeProvider">
            <summary>
            Acts as a base class for deriving custom credit card type provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardTypeProvider.GetCreditCardTypeByID(System.Int32)">
            <summary>
            Gets a credit card type
            </summary>
            <param name="CreditCardTypeID">Credit card type identifier</param>
            <returns>Credit card type</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardTypeProvider.GetAllCreditCardTypes">
            <summary>
            Gets all credit card types
            </summary>
            <returns>Credit card type collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardTypeProvider.InsertCreditCardType(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Inserts a credit card type
            </summary>
            <param name="Name">The name</param>
            <param name="SystemKeyword">The system keyword</param>
            <param name="DisplayOrder">The display order</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <returns>A credit card type</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardTypeProvider.UpdateCreditCardType(System.Int32,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Updates the credit card type
            </summary>
            <param name="CreditCardTypeID">Credit card type identifier</param>
            <param name="Name">The name</param>
            <param name="SystemKeyword">The system keyword</param>
            <param name="DisplayOrder">The display order</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <returns>A credit card type</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryProvider">
            <summary>
            Acts as a base class for deriving custom country provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryProvider.DeleteCountry(System.Int32)">
            <summary>
            Deletes a country
            </summary>
            <param name="CountryID">Country identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryProvider.GetAllCountries(System.Boolean)">
            <summary>
            Gets all countries
            </summary>
            <returns>Country collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryProvider.GetAllCountriesForRegistration(System.Boolean)">
            <summary>
            Gets all countries that allow registration
            </summary>
            <returns>Country collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryProvider.GetAllCountriesForBilling(System.Boolean)">
            <summary>
            Gets all countries that allow billing
            </summary>
            <returns>Country collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryProvider.GetAllCountriesForShipping(System.Boolean)">
            <summary>
            Gets all countries that allow shipping
            </summary>
            <returns>Country collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryProvider.GetCountryByID(System.Int32)">
            <summary>
            Gets a country 
            </summary>
            <param name="CountryID">Country identifier</param>
            <returns>Country</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryProvider.GetCountryByTwoLetterISOCode(System.String)">
            <summary>
            Gets a country by two letter ISO code
            </summary>
            <param name="TwoLetterISOCode">Country two letter ISO code</param>
            <returns>Country</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryProvider.GetCountryByThreeLetterISOCode(System.String)">
            <summary>
            Gets a country by three letter ISO code
            </summary>
            <param name="ThreeLetterISOCode">Country three letter ISO code</param>
            <returns>Country</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryProvider.InsertCountry(System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Inserts a country
            </summary>
            <param name="Name">The name</param>
            <param name="AllowsRegistration">A value indicating whether registration is allowed to this country</param>
            <param name="AllowsBilling">A value indicating whether billing is allowed to this country</param>
            <param name="AllowsShipping">A value indicating whether shipping is allowed to this country</param>
            <param name="TwoLetterISOCode">The two letter ISO code</param>
            <param name="ThreeLetterISOCode">The three letter ISO code</param>
            <param name="NumericISOCode">The numeric ISO code</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Country</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryProvider.UpdateCountry(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Updates the country
            </summary>
            <param name="CountryID">The country identifier</param>
            <param name="Name">The name</param>
            <param name="AllowsRegistration">A value indicating whether registration is allowed to this country</param>
            <param name="AllowsBilling">A value indicating whether billing is allowed to this country</param>
            <param name="AllowsShipping">A value indicating whether shipping is allowed to this country</param>
            <param name="TwoLetterISOCode">The two letter ISO code</param>
            <param name="ThreeLetterISOCode">The three letter ISO code</param>
            <param name="NumericISOCode">The numeric ISO code</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Country</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantPricelistCollection">
            <summary>
            Represents a ProductVariantPricelist Collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerCollection">
            <summary>
            Represents a customer collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer">
            <summary>
            Represents a customer
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.#ctor">
            <summary>
            Creates a new instance of the DBCustomer class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.CustomerID">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.CustomerGUID">
            <summary>
            Gets or sets the customer GUID
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.Email">
            <summary>
            Gets or sets the email
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.Username">
            <summary>
            Gets or sets the username
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.PasswordHash">
            <summary>
            Gets or sets the password hash
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.SaltKey">
            <summary>
            Gets or sets the salt key
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.AffiliateID">
            <summary>
            Gets or sets the affiliate identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.BillingAddressID">
            <summary>
            Gets or sets the billing address identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.ShippingAddressID">
            <summary>
            Gets or sets the shipping address identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.LastPaymentMethodID">
            <summary>
            Gets or sets the last payment method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.LastAppliedCouponCode">
            <summary>
            Gets or sets the last applied coupon code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.LanguageID">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.CurrencyID">
            <summary>
            Gets or sets the currency identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.TaxDisplayTypeID">
            <summary>
            Gets or sets the tax display type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.IsTaxExempt">
            <summary>
            Gets or sets a value indicating whether the customer is tax exempt
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.IsAdmin">
            <summary>
            Gets or sets a value indicating whether the customer is administrator
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.IsGuest">
            <summary>
            Gets or sets a value indicating whether the customer is guest
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.IsForumModerator">
            <summary>
            Gets or sets a value indicating whether the customer is forum moderator
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.TotalForumPosts">
            <summary>
            Gets or sets the forum post count
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.Signature">
            <summary>
            Gets or sets the signature
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.AdminComment">
            <summary>
            Gets or sets the admin comment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.Active">
            <summary>
            Gets or sets a value indicating whether the customer is active
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.Deleted">
            <summary>
            Gets or sets a value indicating whether the customer has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.RegistrationDate">
            <summary>
            Gets or sets the date and time of customer registration
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.TimeZoneID">
            <summary>
            Gets or sets the time zone identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.AvatarID">
            <summary>
            Gets or sets the avatar identifier
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsCommentCollection">
            <summary>
            Represents a news comment collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsComment">
            <summary>
            Represents a news comment
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsComment.#ctor">
            <summary>
            Creates a new instance of the DBNewsComment class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsComment.NewsCommentID">
            <summary>
            Gets or sets the news comment identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsComment.NewsID">
            <summary>
            Gets or sets the news identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsComment.CustomerID">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsComment.Title">
            <summary>
            Gets or sets the title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsComment.Comment">
            <summary>
            Gets or sets the comment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsComment.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider">
            <summary>
            Acts as a base class for deriving custom forum provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.DeleteForumGroup(System.Int32)">
            <summary>
            Deletes a forum group
            </summary>
            <param name="ForumGroupID">The forum group identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetForumGroupByID(System.Int32)">
            <summary>
            Gets a forum group
            </summary>
            <param name="ForumGroupID">The forum group identifier</param>
            <returns>Forum group</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetAllForumGroups">
            <summary>
            Gets all forum groups
            </summary>
            <returns>Forum groups</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.InsertForumGroup(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a forum group
            </summary>
            <param name="Name">The language name</param>
            <param name="Description">The description</param>
            <param name="DisplayOrder">The display order</param>        
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Forum group</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.UpdateForumGroup(System.Int32,System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the forum group
            </summary>
            <param name="ForumGroupID">The forum group identifier</param>
            <param name="Name">The language name</param>
            <param name="Description">The description</param>
            <param name="DisplayOrder">The display order</param>        
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Forum group</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.DeleteForum(System.Int32)">
            <summary>
            Deletes a forum
            </summary>
            <param name="ForumID">The forum identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetForumByID(System.Int32)">
            <summary>
            Gets a forum
            </summary>
            <param name="ForumID">The forum identifier</param>
            <returns>Forum</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetAllForumsByGroupID(System.Int32)">
            <summary>
            Gets forums by group identifier
            </summary>
            <param name="ForumGroupID">The forum group identifier</param>
            <returns>Forums</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.InsertForum(System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a forum
            </summary>
            <param name="ForumGroupID">The forum group identifier</param>
            <param name="Name">The language name</param>
            <param name="Description">The description</param>
            <param name="NumTopics">The number of topics</param>
            <param name="NumPosts">The number of posts</param>
            <param name="LastTopicID">The last topic identifier</param>
            <param name="LastPostID">The last post identifier</param>
            <param name="LastPostUserID">The last post user identifier</param>
            <param name="LastPostTime">The last post date and time</param>
            <param name="DisplayOrder">The display order</param>        
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Forum</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.UpdateForum(System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the forum
            </summary>
            <param name="ForumID">The forum identifier</param>
            <param name="ForumGroupID">The forum group identifier</param>
            <param name="Name">The language name</param>
            <param name="Description">The description</param>
            <param name="NumTopics">The number of topics</param>
            <param name="NumPosts">The number of posts</param>
            <param name="LastTopicID">The last topic identifier</param>
            <param name="LastPostID">The last post identifier</param>
            <param name="LastPostUserID">The last post user identifier</param>
            <param name="LastPostTime">The last post date and time</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Forum</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.UpdateForumStats(System.Int32)">
            <summary>
            Update forum stats
            </summary>
            <param name="ForumID">The forum identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.DeleteTopic(System.Int32)">
            <summary>
            Deletes a topic
            </summary>
            <param name="ForumTopicID">The topic identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetTopicByID(System.Int32,System.Boolean)">
            <summary>
            Gets a topic
            </summary>
            <param name="ForumTopicID">The topic identifier</param>
            <param name="IncreaseViews">The value indicating whether to increase topic views</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetAllTopics(System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all topics
            </summary>
            <param name="ForumID">The forum group identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="Keywords">Keywords</param>
            <param name="SearchPosts">A value indicating whether to search in posts</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="TotalRecords">Total records</param>
            <returns>Topics</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetActiveTopics(System.Int32,System.Int32)">
            <summary>
            Gets active topics
            </summary>
            <param name="ForumID">The forum group identifier</param>
            <param name="TopicCount">Topic count. 0 if you want to get all topics</param>
            <returns>Topics</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.InsertTopic(System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.DateTime,System.DateTime)">
            <summary>
            Inserts a topic
            </summary>
            <param name="ForumID">The forum identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="TopicTypeID">The topic type identifier</param>
            <param name="Subject">The subject</param>
            <param name="NumPosts">The number of posts</param>
            <param name="Views">The number of views</param>
            <param name="LastPostID">The last post identifier</param>
            <param name="LastPostUserID">The last post user identifier</param>
            <param name="LastPostTime">The last post date and time</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.UpdateTopic(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.DateTime,System.DateTime)">
            <summary>
            Updates the topic
            </summary>
            <param name="ForumTopicID">The forum topic identifier</param>
            <param name="ForumID">The forum identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="TopicTypeID">The topic type identifier</param>
            <param name="Subject">The subject</param>
            <param name="NumPosts">The number of posts</param>
            <param name="Views">The number of views</param>
            <param name="LastPostID">The last post identifier</param>
            <param name="LastPostUserID">The last post user identifier</param>
            <param name="LastPostTime">The last post date and time</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.DeletePost(System.Int32)">
            <summary>
            Deletes a post
            </summary>
            <param name="ForumPostID">The post identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetPostByID(System.Int32)">
            <summary>
            Gets a post
            </summary>
            <param name="ForumPostID">The post identifier</param>
            <returns>Post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetAllPosts(System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all posts
            </summary>
            <param name="ForumTopicID">The forum topic identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="Keywords">Keywords</param>
            <param name="AscSort">Sort order</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="TotalRecords">Total records</param>
            <returns>Posts</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.InsertPost(System.Int32,System.Int32,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Inserts a post
            </summary>
            <param name="ForumTopicID">The forum topic identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="Text">The text</param>
            <param name="IPAddress">The IP address</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.UpdatePost(System.Int32,System.Int32,System.Int32,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Updates the post
            </summary>
            <param name="ForumPostID">The forum post identifier</param>
            <param name="ForumTopicID">The forum topic identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="Text">The text</param>
            <param name="IPAddress">The IP address</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.DeletePrivateMessage(System.Int32)">
            <summary>
            Deletes a private message
            </summary>
            <param name="ForumPrivateMessageID">The private message identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetPrivateMessageByID(System.Int32)">
            <summary>
            Gets a private message
            </summary>
            <param name="ForumPrivateMessageID">The private message identifier</param>
            <returns>Private message</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetAllPrivateMessages(System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets private messages
            </summary>
            <param name="FromUserID">The user identifier who sent the message</param>
            <param name="ToUserID">The user identifier who should receive the message</param>
            <param name="IsRead">A value indicating whether loaded messages are read. false - to load not read messages only, 1 to load read messages only, null to load all messages</param>
            <param name="IsDeletedByAuthor">A value indicating whether loaded messages are deleted by author. false - messages are not deleted by author, null to load all messages</param>
            <param name="IsDeletedByRecipient">A value indicating whether loaded messages are deleted by recipient. false - messages are not deleted by recipient, null to load all messages</param>
            <param name="Keywords">Keywords</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="TotalRecords">Total records</param>
            <returns>Private messages</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.InsertPrivateMessage(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Inserts a private message
            </summary>
            <param name="FromUserID">The user identifier who sent the message</param>
            <param name="ToUserID">The user identifier who should receive the message</param>
            <param name="Subject">The subject</param>
            <param name="Text">The text</param>
            <param name="IsRead">The value indivating whether message is read</param>
            <param name="IsDeletedByAuthor">The value indivating whether message is deleted by author</param>
            <param name="IsDeletedByRecipient">The value indivating whether message is deleted by recipient</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Private message</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.UpdatePrivateMessage(System.Int32,System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Updates the private message
            </summary>
            <param name="PrivateMessageID">The private message identifier</param>
            <param name="FromUserID">The user identifier who sent the message</param>
            <param name="ToUserID">The user identifier who should receive the message</param>
            <param name="Subject">The subject</param>
            <param name="Text">The text</param>
            <param name="IsRead">The value indivating whether message is read</param>
            <param name="IsDeletedByAuthor">The value indivating whether message is deleted by author</param>
            <param name="IsDeletedByRecipient">The value indivating whether message is deleted by recipient</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Private message</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.DeleteSubscription(System.Int32)">
            <summary>
            Deletes a forum subscription
            </summary>
            <param name="ForumSubscriptionID">The forum subscription identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetSubscriptionByID(System.Int32)">
            <summary>
            Gets a forum subscription
            </summary>
            <param name="ForumSubscriptionID">The forum subscription identifier</param>
            <returns>Forum subscription</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetSubscriptionByGUID(System.Int32)">
            <summary>
            Gets a forum subscription
            </summary>
            <param name="SubscriptionGUID">The forum subscription identifier</param>
            <returns>Forum subscription</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetAllSubscriptions(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets forum subscriptions
            </summary>
            <param name="UserID">The user identifier</param>
            <param name="ForumID">The forum identifier</param>
            <param name="TopicID">The topic identifier</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="TotalRecords">Total records</param>
            <returns>Forum subscriptions</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.InsertSubscription(System.Guid,System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Inserts a forum subscription
            </summary>
            <param name="SubscriptionGUID">The forum subscription identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="ForumID">The forum identifier</param>
            <param name="TopicID">The topic identifier</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Forum subscription</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.UpdateSubscription(System.Int32,System.Guid,System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Updates the forum subscription
            </summary>
            <param name="SubscriptionID">The forum subscription identifier</param>
            <param name="SubscriptionGUID">The forum subscription identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="ForumID">The forum identifier</param>
            <param name="TopicID">The topic identifier</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Forum subscription</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumGroupCollection">
            <summary>
            Represents a forum group collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumCollection">
            <summary>
            Represents a forum collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Templates.DBProductTemplate">
            <summary>
            Represents a product template
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBProductTemplate.#ctor">
            <summary>
            Creates a new instance of the DBProductTemplate class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBProductTemplate.ProductTemplateID">
            <summary>
            Gets or sets the product template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBProductTemplate.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBProductTemplate.TemplatePath">
            <summary>
            Gets or sets the template path
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBProductTemplate.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBProductTemplate.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBProductTemplate.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountTypeCollection">
            <summary>
            Represents a discount type collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBRelatedProduct">
            <summary>
            Represents a related product
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBRelatedProduct.#ctor">
            <summary>
            Creates a new instance of the DBRelatedProduct class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBRelatedProduct.RelatedProductID">
            <summary>
            Gets or sets the related product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBRelatedProduct.ProductID1">
            <summary>
            Gets or sets the first product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBRelatedProduct.ProductID2">
            <summary>
            Gets or sets the second product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBRelatedProduct.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValue">
            <summary>
            Represents a product variant attribute value
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValue.#ctor">
            <summary>
            Creates a new instance of the DBProductVariantAttributeValue class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValue.ProductVariantAttributeValueID">
            <summary>
            Gets or sets the product variant attribute value identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValue.ProductVariantAttributeID">
            <summary>
            Gets or sets the product variant attribute mapping identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValue.Name">
            <summary>
            Gets or sets the product variant attribute name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValue.PriceAdjustment">
            <summary>
            Gets or sets the price adjustment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValue.WeightAdjustment">
            <summary>
            Gets or sets the weight adjustment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValue.IsPreSelected">
            <summary>
            Gets or sets a value indicating whether the value is pre-selected
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValue.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder">
            <summary>
            Represents an order
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.#ctor">
            <summary>
            Creates a new instance of the DBOrder class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderID">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderGUID">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CustomerID">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CustomerLanguageID">
            <summary>
            Gets or sets the customer language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CustomerTaxDisplayTypeID">
            <summary>
            Gets or sets the customer tax display type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderSubtotalInclTax">
            <summary>
            Gets or sets the order subtotal (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderSubtotalExclTax">
            <summary>
            Gets or sets the order subtotal (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderShippingInclTax">
            <summary>
            Gets or sets the order shipping (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderShippingExclTax">
            <summary>
            Gets or sets the order shipping (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.PaymentMethodAdditionalFeeInclTax">
            <summary>
            Gets or sets the payment method additional fee (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.PaymentMethodAdditionalFeeExclTax">
            <summary>
            Gets or sets the payment method additional fee (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderTax">
            <summary>
            Gets or sets the order tax
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderTotal">
            <summary>
            Gets or sets the order total
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderDiscount">
            <summary>
            Gets or sets the order discount
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderSubtotalInclTaxInCustomerCurrency">
            <summary>
            Gets or sets the order subtotal incl tax (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderSubtotalExclTaxInCustomerCurrency">
            <summary>
            Gets or sets the order subtotal excl tax (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderShippingInclTaxInCustomerCurrency">
            <summary>
            Gets or sets the order shipping incl tax (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderShippingExclTaxInCustomerCurrency">
            <summary>
            Gets or sets the order shipping excl tax (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.PaymentMethodAdditionalFeeInclTaxInCustomerCurrency">
            <summary>
            Gets or sets the payment method additional fee incl tax (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.PaymentMethodAdditionalFeeExclTaxInCustomerCurrency">
            <summary>
            Gets or sets the payment method additional fee excl tax (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderTaxInCustomerCurrency">
            <summary>
            Gets or sets the order tax (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderTotalInCustomerCurrency">
            <summary>
            Gets or sets the order total (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CustomerCurrencyCode">
            <summary>
            Gets or sets the customer currency code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderWeight">
            <summary>
            Gets or sets the order weight
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.AffiliateID">
            <summary>
            Gets or sets the affiliate identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderStatusID">
            <summary>
            Gets or sets an order status identifer
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.AllowStoringCreditCardNumber">
            <summary>
            Gets or sets a value indicating whether storing of credit card number is allowed
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CardType">
            <summary>
            Gets or sets the card type
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CardName">
            <summary>
            Gets or sets the card name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CardNumber">
            <summary>
            Gets or sets the card number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.MaskedCreditCardNumber">
            <summary>
            Gets or sets the masked credit card number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CardCVV2">
            <summary>
            Gets or sets the card CVV2
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CardExpirationMonth">
            <summary>
            Gets or sets the card expiration month
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CardExpirationYear">
            <summary>
            Gets or sets the card expiration year
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.PaymentMethodID">
            <summary>
            Gets or sets the payment method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.PaymentMethodName">
            <summary>
            Gets or sets the payment method name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.AuthorizationTransactionID">
            <summary>
            Gets or sets the authorization transaction ID
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.AuthorizationTransactionCode">
            <summary>
            Gets or sets the authorization transaction code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.AuthorizationTransactionResult">
            <summary>
            Gets or sets the authorization transaction result
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CaptureTransactionID">
            <summary>
            Gets or sets the capture transaction ID
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CaptureTransactionResult">
            <summary>
            Gets or sets the capture transaction result
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.PurchaseOrderNumber">
            <summary>
            Gets or sets the purchase order number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.PaymentStatusID">
            <summary>
            Gets or sets the payment status identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingFirstName">
            <summary>
            Gets or sets the billing first name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingLastName">
            <summary>
            Gets or sets the billing last name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingPhoneNumber">
            <summary>
            Gets or sets the billing phone number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingEmail">
            <summary>
            Gets or sets the billing email
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingFaxNumber">
            <summary>
            Gets or sets the billing fax number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingCompany">
            <summary>
            Gets or sets the billing company
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingAddress1">
            <summary>
            Gets or sets the billing address 1
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingAddress2">
            <summary>
            Gets or sets the billing address 2
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingCity">
            <summary>
            Gets or sets the billing city
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingStateProvince">
            <summary>
            Gets or sets the billing state/province
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingStateProvinceID">
            <summary>
            Gets or sets the billing state/province identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingZipPostalCode">
            <summary>
            Gets or sets the billing zip/postal code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingCountry">
            <summary>
            Gets or sets the billing country
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingCountryID">
            <summary>
            Gets or sets the billing country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingStatusID">
            <summary>
            Gets or sets the shipping status identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingFirstName">
            <summary>
            Gets or sets the shipping first name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingLastName">
            <summary>
            Gets or sets the shipping last name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingPhoneNumber">
            <summary>
            Gets or sets the shipping phone number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingEmail">
            <summary>
            Gets or sets the shipping email
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingFaxNumber">
            <summary>
            Gets or sets the shipping fax number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingCompany">
            <summary>
            Gets or sets the shipping  company
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingAddress1">
            <summary>
            Gets or sets the shipping address 1
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingAddress2">
            <summary>
            Gets or sets the shipping address 2
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingCity">
            <summary>
            Gets or sets the shipping city
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingStateProvince">
            <summary>
            Gets or sets the shipping state/province
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingStateProvinceID">
            <summary>
            Gets or sets the shipping state/province identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingZipPostalCode">
            <summary>
            Gets or sets the shipping zip/postal code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingCountry">
            <summary>
            Gets or sets the shipping country
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingCountryID">
            <summary>
            Gets or sets the shipping identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingMethod">
            <summary>
            Gets or sets the shipping method
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingRateComputationMethodID">
            <summary>
            Gets or sets the shipping rate computation method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippedDate">
            <summary>
            Gets or sets the shipped date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CreatedOn">
            <summary>
            Gets or sets the date and time of order creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Media.DBDownloadCollection">
            <summary>
            Represents a download collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureWeightCollection">
            <summary>
            Represents a measure weight collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResource">
            <summary>
            Represents a locale string resource
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResource.#ctor">
            <summary>
            Creates a new instance of the DBLocaleStringResource class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResource.LocaleStringResourceID">
            <summary>
            Gets or sets the locale string resource identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResource.LanguageID">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResource.ResourceName">
            <summary>
            Gets or sets the resource name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResource.ResourceValue">
            <summary>
            Gets or sets the resource value
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrencyProvider">
            <summary>
            Acts as a base class for deriving custom currency provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrencyProvider.DeleteCurrency(System.Int32)">
            <summary>
            Deletes currency
            </summary>
            <param name="CurrencyID">Currency identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrencyProvider.GetCurrencyByID(System.Int32)">
            <summary>
            Gets a currency
            </summary>
            <param name="CurrencyID">Currency identifier</param>
            <returns>Currency</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrencyProvider.GetAllCurrencies(System.Boolean)">
            <summary>
            Gets all currencies
            </summary>
            <returns>Currency collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrencyProvider.InsertCurrency(System.String,System.String,System.Decimal,System.String,System.String,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a currency
            </summary>
            <param name="Name">The name</param>
            <param name="CurrencyCode">The currency code</param>
            <param name="Rate">The rate</param>
            <param name="DisplayLocale">The display locale</param>
            <param name="CustomFormatting">The custom formatting</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>A currency</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrencyProvider.UpdateCurrency(System.Int32,System.String,System.String,System.Decimal,System.String,System.String,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the currency
            </summary>
            <param name="CurrencyID">Currency identifier</param>
            <param name="Name">The name</param>
            <param name="CurrencyCode">The currency code</param>
            <param name="Rate">The rate</param>
            <param name="DisplayLocale">The display locale</param>
            <param name="CustomFormatting">The custom formatting</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>A currency</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider">
            <summary>
            Acts as a base class for deriving custom log provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider.DeleteBlogPost(System.Int32)">
            <summary>
            Deletes an blog post
            </summary>
            <param name="BlogPostID">Blog post identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider.GetBlogPostByID(System.Int32)">
            <summary>
            Gets an blog post
            </summary>
            <param name="BlogPostID">Blog post identifier</param>
            <returns>Blog post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider.GetAllBlogPosts(System.Int32)">
            <summary>
            Gets all blog posts
            </summary>
            <param name="LanguageID">Language identifier. 0 if you want to get all news</param>
            <returns>Blog posts</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider.InsertBlogPost(System.Int32,System.String,System.String,System.Boolean,System.Int32,System.DateTime)">
            <summary>
            Inserts an blog post
            </summary>
            <param name="LanguageID">The language identifier</param>
            <param name="BlogPostTitle">The blog post title</param>
            <param name="BlogPostBody">The blog post title</param>
            <param name="BlogPostAllowComments">A value indicating whether the blog post comments are allowed</param>
            <param name="CreatedByID">The user identifier who created the blog post</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Blog post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider.UpdateBlogPost(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.DateTime)">
            <summary>
            Updates the blog post
            </summary>
            <param name="LanguageID">The language identifier</param>
            <param name="BlogPostID">Blog post identifier</param>
            <param name="BlogPostTitle">The blog post title</param>
            <param name="BlogPostBody">The blog post title</param>
            <param name="BlogPostAllowComments">A value indicating whether the blog post comments are allowed</param>
            <param name="CreatedByID">The user identifier who created the blog post</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Blog post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider.DeleteBlogComment(System.Int32)">
            <summary>
            Deletes an blog comment
            </summary>
            <param name="BlogCommentID">Blog comment identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider.GetBlogCommentByID(System.Int32)">
            <summary>
            Gets an blog comment
            </summary>
            <param name="BlogCommentID">Blog comment identifier</param>
            <returns>An blog comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider.GetBlogCommentsByBlogPostID(System.Int32)">
            <summary>
            Gets a collection of blog comments by blog post identifier
            </summary>
            <param name="BlogPostID">Blog post identifier</param>
            <returns>A collection of blog comments</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider.GetAllBlogComments">
            <summary>
            Gets all blog comments
            </summary>
            <returns>Blog comments</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider.InsertBlogComment(System.Int32,System.Int32,System.String,System.DateTime)">
            <summary>
            Inserts an blog comment
            </summary>
            <param name="BlogPostID">The blog post identifier</param>
            <param name="CustomerID">The customer identifier who commented the blog post</param>
            <param name="CommentText">The comment text</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Blog comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider.UpdateBlogComment(System.Int32,System.Int32,System.Int32,System.String,System.DateTime)">
            <summary>
            Updates the blog comment
            </summary>
            <param name="BlogCommentID">The blog comment identifier</param>
            <param name="BlogPostID">The blog post identifier</param>
            <param name="CustomerID">The customer identifier who commented the blog post</param>
            <param name="CommentText">The comment text</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Blog comment</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouseCollection">
            <summary>
            Represents a warehouse collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProviderCollection">
            <summary>
            Represents a tax provider collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRateCollection">
            <summary>
            Represents a tax rate collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightCollection">
            <summary>
            Represents a ShippingByWeight collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaign">
            <summary>
            Represents a campaign
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaign.#ctor">
            <summary>
            Creates a new instance of the DBCampaign class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaign.CampaignID">
            <summary>
            Gets or sets the campaign identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaign.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaign.Subject">
            <summary>
            Gets or sets the subject
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaign.Body">
            <summary>
            Gets or sets the body
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaign.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliateCollection">
            <summary>
            Represents an affiliate collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeCollection">
            <summary>
            Represents a product variant attribute mapping collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardType">
            <summary>
            Represents a credit card type
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardType.#ctor">
            <summary>
            Creates a new instance of the DBCreditCardType class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardType.CreditCardTypeID">
            <summary>
            Gets or sets the credit card type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardType.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardType.SystemKeyword">
            <summary>
            Gets or sets the system keyword
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardType.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardType.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBTierPrice">
            <summary>
            Represents a tier price
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBTierPrice.#ctor">
            <summary>
            Creates a new instance of the DBTierPrice class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBTierPrice.TierPriceID">
            <summary>
            Gets or sets the tier price identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBTierPrice.ProductVariantID">
            <summary>
            Gets or sets the product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBTierPrice.Quantity">
            <summary>
            Gets or sets the quantity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBTierPrice.Price">
            <summary>
            Gets or sets the price
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPoll">
            <summary>
            Represents a poll
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPoll.#ctor">
            <summary>
            Creates a new instance of the DBPoll class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPoll.PollID">
            <summary>
            Gets or sets the poll identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPoll.LanguageID">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPoll.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPoll.SystemKeyword">
            <summary>
            Gets or sets the system keyword
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPoll.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPoll.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopicCollection">
            <summary>
            Represents a forum topic collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessage">
            <summary>
            Represents a private message
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessage.#ctor">
            <summary>
            Creates a new instance of the DBPrivateMessage class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessage.PrivateMessageID">
            <summary>
            Gets or sets the private message identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessage.FromUserID">
            <summary>
            Gets or sets the user identifier who sent the message
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessage.ToUserID">
            <summary>
            Gets or sets the user identifier who should receive the message
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessage.Subject">
            <summary>
            Gets or sets the subject
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessage.Text">
            <summary>
            Gets or sets the text
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessage.IsRead">
            <summary>
            Gets or sets a value indivating whether message is read
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessage.IsDeletedByAuthor">
            <summary>
            Gets or sets a value indivating whether message is deleted by author
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessage.IsDeletedByRecipient">
            <summary>
            Gets or sets a value indivating whether message is deleted by recipient
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessage.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumSubscriptionCollection">
            <summary>
            Represents a forum subscription collection
            </summary>
        </member>
    </members>
</doc>
