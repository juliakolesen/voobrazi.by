<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nop.BusinessLogic</name>
    </assembly>
    <members>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentInfo">
            <summary>
            Represents a payment info holder
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentInfo.CustomerCurrency">
            <summary>
            Gets or sets a customer currency
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentInfo.CustomerLanguage">
            <summary>
            Gets or sets a customer language
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentInfo.BillingAddress">
            <summary>
            Gets or sets a billing address
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentInfo.ShippingAddress">
            <summary>
            Gets or sets a shipping address
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentInfo.CreditCardType">
            <summary>
            Gets or sets a credit card type (Visa, Master Card, etc...)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentInfo.CreditCardName">
            <summary>
            Gets or sets a credit card owner name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentInfo.CreditCardNumber">
            <summary>
            Gets or sets a credit card number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentInfo.CreditCardExpireYear">
            <summary>
            Gets or sets a credit card expire year
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentInfo.CreditCardExpireMonth">
            <summary>
            Gets or sets a credit card expire month
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentInfo.CreditCardCVV2">
            <summary>
            Gets or sets a credit card CVV2 (Card Verification Value)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentInfo.OrderTotal">
            <summary>
            Gets or sets an order total
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentInfo.PaymentMethodID">
            <summary>
            /// <summary>
            Gets or sets a payment method identifier
            </summary>
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentInfo.PaypalToken">
            <summary>
            Gets or sets a paypal payer token (required for Paypal payment methods)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentInfo.PaypalPayerID">
            <summary>
            Gets or sets a paypal payer identifier (required for Paypal payment methods)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentInfo.GoogleOrderNumber">
            <summary>
            Gets or sets a google order number (required for Google Checkout)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentInfo.PurchaseOrderNumber">
            <summary>
            Gets or sets a purchase order number (required for Purchase Order payment method)
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Templates.TemplateManager">
            <summary>
            Category template manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Templates.TemplateManager.DeleteCategoryTemplate(System.Int32)">
            <summary>
            Deletes a category template
            </summary>
            <param name="CategoryTemplateID">Category template identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Templates.TemplateManager.GetAllCategoryTemplates">
            <summary>
            Gets all category templates
            </summary>
            <returns>Category template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Templates.TemplateManager.GetCategoryTemplateByID(System.Int32)">
            <summary>
            Gets a category template
            </summary>
            <param name="CategoryTemplateID">Category template identifier</param>
            <returns>A category template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Templates.TemplateManager.InsertCategoryTemplate(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a category template
            </summary>
            <param name="Name">The name</param>
            <param name="TemplatePath">The template path</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>A category template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Templates.TemplateManager.UpdateCategoryTemplate(System.Int32,System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the category template
            </summary>
            <param name="CategoryTemplateID">Category template identifier</param>
            <param name="Name">The name</param>
            <param name="TemplatePath">The template path</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>A category template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Templates.TemplateManager.DeleteManufacturerTemplate(System.Int32)">
            <summary>
            Deletes a manufacturer template
            </summary>
            <param name="ManufacturerTemplateID">Manufacturer template identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Templates.TemplateManager.GetAllManufacturerTemplates">
            <summary>
            Gets all manufacturer templates
            </summary>
            <returns>Manufacturer template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Templates.TemplateManager.GetManufacturerTemplateByID(System.Int32)">
            <summary>
            Gets a manufacturer template
            </summary>
            <param name="ManufacturerTemplateID">Manufacturer template identifier</param>
            <returns>Manufacturer template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Templates.TemplateManager.InsertManufacturerTemplate(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a manufacturer template
            </summary>
            <param name="Name">The manufacturer template identifier</param>
            <param name="TemplatePath">The template path</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Manufacturer template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Templates.TemplateManager.UpdateManufacturerTemplate(System.Int32,System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the manufacturer template
            </summary>
            <param name="ManufacturerTemplateID">Manufacturer template identifer</param>
            <param name="Name">The manufacturer template identifier</param>
            <param name="TemplatePath">The template path</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Manufacturer template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Templates.TemplateManager.DeleteProductTemplate(System.Int32)">
            <summary>
            Deletes a product template
            </summary>
            <param name="ProductTemplateID">Product template identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Templates.TemplateManager.GetAllProductTemplates">
            <summary>
            Gets all product templates
            </summary>
            <returns>Product template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Templates.TemplateManager.GetProductTemplateByID(System.Int32)">
            <summary>
            Gets a product template
            </summary>
            <param name="ProductTemplateID">Product template identifier</param>
            <returns>Product template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Templates.TemplateManager.InsertProductTemplate(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a product template
            </summary>
            <param name="Name">The name</param>
            <param name="TemplatePath">The template path</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Product template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Templates.TemplateManager.UpdateProductTemplate(System.Int32,System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the product template
            </summary>
            <param name="ProductTemplateID">The product template identifier</param>
            <param name="Name">The name</param>
            <param name="TemplatePath">The template path</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Product template</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Templates.TemplateManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Utils.KeepAliveTask">
            <summary>
            Represents a task for pinger
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Tasks.ITask">
            <summary>
            Interface that should be implemented by each task
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tasks.ITask.Execute(System.Xml.XmlNode)">
            <summary>
            Execute task
            </summary>
            <param name="node">Custom configuration node</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Utils.KeepAliveTask.Execute(System.Xml.XmlNode)">
            <summary>
            Executes a task
            </summary>
            <param name="node">Xml node that represents a task description</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Directory.Language">
            <summary>
            Represents a language
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.BaseEntity">
            <summary>
            Provides a base class for entities
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.Language.#ctor">
            <summary>
            Creates a new instance of the Language class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Language.LanguageID">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Language.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Language.LanguageCulture">
            <summary>
            Gets or sets the language culture
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Language.Published">
            <summary>
            Gets or sets a value indicating whether the language is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Language.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Language.LocaleStringResources">
            <summary>
            Gets the locale string dictionary
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Localization.LocaleStringResource">
            <summary>
            Represents a locale string resource
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Localization.LocaleStringResource.#ctor">
            <summary>
            Creates a new instance of the LocaleStringResource class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Localization.LocaleStringResource.LocaleStringResourceID">
            <summary>
            Gets or sets the locale string resource identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Localization.LocaleStringResource.LanguageID">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Localization.LocaleStringResource.ResourceName">
            <summary>
            Gets or sets the resource name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Localization.LocaleStringResource.ResourceValue">
            <summary>
            Gets or sets the resource value
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Localization.LocaleStringResource.Language">
            <summary>
            Gets the language
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingOptionCollection">
            <summary>
            Represents a shipping option collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttributeCollection">
            <summary>
            Represents a product variant attribute mapping collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.BaseEntityCollection`1">
            <summary>
            Provides a base class for entity collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttributeValueCollection">
            <summary>
            Represents a product variant attribute value collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Media.Download">
            <summary>
            Represents a download
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.Download.#ctor">
            <summary>
            Creates a new instance of the Download class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Media.Download.DownloadID">
            <summary>
            Gets or sets the download identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Media.Download.UseDownloadURL">
            <summary>
            Gets a sets a value indicating whether DownloadURL property should be used
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Media.Download.DownloadURL">
            <summary>
            Gets a sets a download URL
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Media.Download.DownloadBinary">
            <summary>
            Gets or sets the download binary
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Media.Download.ContentType">
            <summary>
            The mime-type for the download
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Media.Download.Extension">
            <summary>
            Gets or sets the extension
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Media.Download.IsNew">
            <summary>
            Gets or sets a value indicating whether the download is new
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Tax.CalculateTaxRequest">
            <summary>
            Represents a request for tax calculation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.CalculateTaxRequest.Customer">
            <summary>
            Gets or sets a customer
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.CalculateTaxRequest.Item">
            <summary>
            Gets or sets a product variant
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.CalculateTaxRequest.Address">
            <summary>
            Gets or sets an address
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.CalculateTaxRequest.TaxClassID">
            <summary>
            Gets or sets a tax class identifier
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper">
            <summary>
            Price helper
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.GetAllowedDiscounts(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer)">
            <summary>
            Gets allowed discounts
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="customer">Customer</param>
            <returns>Discounts</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.GetPreferredDiscount(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer)">
            <summary>
            Gets a preferred discount
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="customer">Customer</param>
            <returns>Preferred discount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.GetPreferredDiscount(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Decimal)">
            <summary>
            Gets a preferred discount
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="customer">Customer</param>
            <param name="AdditionalCharge">Additional charge</param>
            <returns>Preferred discount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.GetTierPrice(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,System.Int32)">
            <summary>
            Gets a tier price
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="Quantity">Quantity</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.GetFinalPrice(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,System.Boolean)">
            <summary>
            Gets the final price
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="includeDiscounts">A value indicating whether include discounts or not for final price computation</param>
            <returns>Final price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.GetFinalPrice(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Boolean)">
            <summary>
            Gets the final price
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="customer">The customer</param>
            <param name="includeDiscounts">A value indicating whether include discounts or not for final price computation</param>
            <returns>Final price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.GetFinalPrice(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Decimal,System.Boolean)">
            <summary>
            Gets the final price
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="customer">The customer</param>
            <param name="AdditionalCharge">Additional charge</param>
            <param name="includeDiscounts">A value indicating whether include discounts or not for final price computation</param>
            <returns>Final price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.GetSubTotal(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem,System.Boolean)">
            <summary>
            Gets the shopping cart item sub total
            </summary>
            <param name="shoppingCartItem">The shopping cart item</param>
            <param name="includeDiscounts">A value indicating whether include discounts or not for price computation</param>
            <returns>Shopping cart item sub total</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.GetSubTotal(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Boolean)">
            <summary>
            Gets the shopping cart item sub total
            </summary>
            <param name="shoppingCartItem">The shopping cart item</param>
            <param name="customer">The customer</param>
            <param name="includeDiscounts">A value indicating whether include discounts or not for price computation</param>
            <returns>Shopping cart item sub total</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.GetUnitPrice(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem,System.Boolean)">
            <summary>
            Gets the shopping cart unit price (one item)
            </summary>
            <param name="shoppingCartItem">The shopping cart item</param>
            <param name="includeDiscounts">A value indicating whether include discounts or not for price computation</param>
            <returns>Shopping cart unit price (one item)</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.GetUnitPrice(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Boolean)">
            <summary>
            Gets the shopping cart unit price (one item)
            </summary>
            <param name="shoppingCartItem">The shopping cart item</param>
            <param name="customer">The customer</param>
            <param name="includeDiscounts">A value indicating whether include discounts or not for price computation</param>
            <returns>Shopping cart unit price (one item)</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.GetDiscountAmount(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant)">
            <summary>
            Gets discount amount
            </summary>
            <param name="productVariant">Product variant</param>
            <returns>Discount amount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.GetDiscountAmount(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer)">
            <summary>
            Gets discount amount
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="customer">The customer</param>
            <returns>Discount amount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.GetDiscountAmount(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Decimal)">
            <summary>
            Gets discount amount
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="customer">The customer</param>
            <param name="AdditionalCharge">Additional charge</param>
            <returns>Discount amount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.GetDiscountAmount(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem)">
            <summary>
            Gets discount amount
            </summary>
            <param name="shoppingCartItem">The shopping cart item</param>
            <returns>Discount amount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.GetDiscountAmount(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer)">
            <summary>
            Gets discount amount
            </summary>
            <param name="shoppingCartItem">The shopping cart item</param>
            <param name="customer">The customer</param>
            <returns>Discount amount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.FormatPrice(System.Decimal)">
            <summary>
            Formats the price
            </summary>
            <param name="Price">Price</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.FormatPrice(System.Decimal,System.Boolean,NopSolutions.NopCommerce.BusinessLogic.Directory.Currency)">
            <summary>
            Formats the price
            </summary>
            <param name="Price">Price</param>
            <param name="ShowCurrency">A value indicating whether to show a currency</param>
            <param name="TargetCurrency">Target currency</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.FormatPrice(System.Decimal,System.Boolean,System.Boolean)">
            <summary>
            Formats the price
            </summary>
            <param name="Price">Price</param>
            <param name="ShowCurrency">A value indicating whether to show a currency</param>
            <param name="ShowTax">A value indicating whether to show tax suffix</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.FormatPrice(System.Decimal,System.Boolean,System.String,System.Boolean)">
            <summary>
            Formats the price
            </summary>
            <param name="Price">Price</param>
            <param name="ShowCurrency">A value indicating whether to show a currency</param>
            <param name="CurrencyCode">Currency code</param>
            <param name="ShowTax">A value indicating whether to show tax suffix</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.FormatPrice(System.Decimal,System.Boolean,NopSolutions.NopCommerce.BusinessLogic.Directory.Currency,NopSolutions.NopCommerce.BusinessLogic.Directory.Language,System.Boolean)">
            <summary>
            Formats the price
            </summary>
            <param name="Price">Price</param>
            <param name="ShowCurrency">A value indicating whether to show a currency</param>
            <param name="TargetCurrency">Target currency</param>
            <param name="Language">Language</param>
            <param name="priceIncludesTax">A value indicating whether price includes tax</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.FormatPrice(System.Decimal,System.Boolean,NopSolutions.NopCommerce.BusinessLogic.Directory.Currency,NopSolutions.NopCommerce.BusinessLogic.Directory.Language,System.Boolean,System.Boolean)">
            <summary>
            Formats the price
            </summary>
            <param name="Price">Price</param>
            <param name="ShowCurrency">A value indicating whether to show a currency</param>
            <param name="TargetCurrency">Target currency</param>
            <param name="Language">Language</param>
            <param name="priceIncludesTax">A value indicating whether price includes tax</param>
            <param name="ShowTax">A value indicating whether to show tax suffix</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.FormatPrice(System.Decimal,System.Boolean,System.String,NopSolutions.NopCommerce.BusinessLogic.Directory.Language,System.Boolean)">
            <summary>
            Formats the price
            </summary>
            <param name="Price">Price</param>
            <param name="ShowCurrency">A value indicating whether to show a currency</param>
            <param name="CurrencyCode">Currency code</param>
            <param name="Language">Language</param>
            <param name="priceIncludesTax">A value indicating whether price includes tax</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.FormatShippingPrice(System.Decimal,System.Boolean)">
            <summary>
            Formats the shipping price
            </summary>
            <param name="Price">Price</param>
            <param name="ShowCurrency">A value indicating whether to show a currency</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.FormatShippingPrice(System.Decimal,System.Boolean,NopSolutions.NopCommerce.BusinessLogic.Directory.Currency,NopSolutions.NopCommerce.BusinessLogic.Directory.Language,System.Boolean)">
            <summary>
            Formats the shipping price
            </summary>
            <param name="Price">Price</param>
            <param name="ShowCurrency">A value indicating whether to show a currency</param>
            <param name="TargetCurrency">Target currency</param>
            <param name="Language">Language</param>
            <param name="priceIncludesTax">A value indicating whether price includes tax</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.FormatShippingPrice(System.Decimal,System.Boolean,NopSolutions.NopCommerce.BusinessLogic.Directory.Currency,NopSolutions.NopCommerce.BusinessLogic.Directory.Language,System.Boolean,System.Boolean)">
            <summary>
            Formats the shipping price
            </summary>
            <param name="Price">Price</param>
            <param name="ShowCurrency">A value indicating whether to show a currency</param>
            <param name="TargetCurrency">Target currency</param>
            <param name="Language">Language</param>
            <param name="priceIncludesTax">A value indicating whether price includes tax</param>
            <param name="ShowTax">A value indicating whether to show tax suffix</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.FormatShippingPrice(System.Decimal,System.Boolean,System.String,NopSolutions.NopCommerce.BusinessLogic.Directory.Language,System.Boolean)">
            <summary>
            Formats the shipping price
            </summary>
            <param name="Price">Price</param>
            <param name="ShowCurrency">A value indicating whether to show a currency</param>
            <param name="CurrencyCode">Currency code</param>
            <param name="Language">Language</param>
            <param name="priceIncludesTax">A value indicating whether price includes tax</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.FormatPaymentMethodAdditionalFee(System.Decimal,System.Boolean)">
            <summary>
            Formats the payment method additional fee
            </summary>
            <param name="Price">Price</param>
            <param name="ShowCurrency">A value indicating whether to show a currency</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.FormatPaymentMethodAdditionalFee(System.Decimal,System.Boolean,NopSolutions.NopCommerce.BusinessLogic.Directory.Currency,NopSolutions.NopCommerce.BusinessLogic.Directory.Language,System.Boolean)">
            <summary>
            Formats the payment method additional fee
            </summary>
            <param name="Price">Price</param>
            <param name="ShowCurrency">A value indicating whether to show a currency</param>
            <param name="TargetCurrency">Target currency</param>
            <param name="Language">Language</param>
            <param name="priceIncludesTax">A value indicating whether price includes tax</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.FormatPaymentMethodAdditionalFee(System.Decimal,System.Boolean,NopSolutions.NopCommerce.BusinessLogic.Directory.Currency,NopSolutions.NopCommerce.BusinessLogic.Directory.Language,System.Boolean,System.Boolean)">
            <summary>
            Formats the payment method additional fee
            </summary>
            <param name="Price">Price</param>
            <param name="ShowCurrency">A value indicating whether to show a currency</param>
            <param name="TargetCurrency">Target currency</param>
            <param name="Language">Language</param>
            <param name="priceIncludesTax">A value indicating whether price includes tax</param>
            <param name="ShowTax">A value indicating whether to show tax suffix</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceHelper.FormatPaymentMethodAdditionalFee(System.Decimal,System.Boolean,System.String,NopSolutions.NopCommerce.BusinessLogic.Directory.Language,System.Boolean)">
            <summary>
            Formats the payment method additional fee
            </summary>
            <param name="Price">Price</param>
            <param name="ShowCurrency">A value indicating whether to show a currency</param>
            <param name="CurrencyCode">Currency code</param>
            <param name="Language">Language</param>
            <param name="priceIncludesTax">A value indicating whether price includes tax</param>
            <returns>Price</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentStatusManager">
            <summary>
            Payment status manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentStatusManager.GetPaymentStatusName(System.Int32)">
            <summary>
            Gets a payment status full name
            </summary>
            <param name="PaymentStatusID">Payment status identifier</param>
            <returns>Payment status name</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentStatusManager.GetPaymentStatusByID(System.Int32)">
            <summary>
            Gets a payment status by ID
            </summary>
            <param name="PaymentStatusID">payment status identifier</param>
            <returns>Payment status</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentStatusManager.GetAllPaymentStatuses">
            <summary>
            Gets all payment statuses
            </summary>
            <returns>Payment status collection</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentStatusManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderNoteCollection">
            <summary>
            Represents an order note collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariantPricelistCollection">
            <summary>
            This object represents the properties and methods of a ProductVariantPricelistCollection.
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeOptionFilter">
            <summary>
            Represents a specification attribute option filter
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeOptionFilter.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeOptionFilter.SpecificationAttributeID">
            <summary>
            Gets or sets the SpecificationAttributeID
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeOptionFilter.SpecificationAttributeName">
            <summary>
            Gets or sets the SpecificationAttributeName
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeOptionFilter.DisplayOrder">
            <summary>
            Gets or sets the DisplayOrder
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeOptionFilter.SpecificationAttributeOptionID">
            <summary>
            Gets or sets the SpecificationAttributeOptionID
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeOptionFilter.SpecificationAttributeOptionName">
            <summary>
            Gets or sets the SpecificationAttributeOptionName
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumGroup">
            <summary>
            Represents a forum group
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumGroup.#ctor">
            <summary>
            Creates a new instance of the ForumGroup class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumGroup.ForumGroupID">
            <summary>
            Gets or sets the forum group identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumGroup.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumGroup.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumGroup.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumGroup.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumGroup.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumGroup.Forums">
            <summary>
            Gets the forums
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager">
            <summary>
            Forum manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.DeleteForumGroup(System.Int32)">
            <summary>
            Deletes a forum group
            </summary>
            <param name="ForumGroupID">The forum group identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.GetForumGroupByID(System.Int32)">
            <summary>
            Gets a forum group
            </summary>
            <param name="ForumGroupID">The forum group identifier</param>
            <returns>Forum group</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.GetAllForumGroups">
            <summary>
            Gets all forum groups
            </summary>
            <returns>Forum groups</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.InsertForumGroup(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a forum group
            </summary>
            <param name="Name">The language name</param>
            <param name="Description">The description</param>
            <param name="DisplayOrder">The display order</param>        
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Forum group</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.UpdateForumGroup(System.Int32,System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the forum group
            </summary>
            <param name="ForumGroupID">The forum group identifier</param>
            <param name="Name">The language name</param>
            <param name="Description">The description</param>
            <param name="DisplayOrder">The display order</param>        
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Forum group</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.DeleteForum(System.Int32)">
            <summary>
            Deletes a forum
            </summary>
            <param name="ForumID">The forum identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.GetForumByID(System.Int32)">
            <summary>
            Gets a forum
            </summary>
            <param name="ForumID">The forum identifier</param>
            <returns>Forum</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.GetAllForumsByGroupID(System.Int32)">
            <summary>
            Gets forums by group identifier
            </summary>
            <param name="ForumGroupID">The forum group identifier</param>
            <returns>Forums</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.InsertForum(System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a forum
            </summary>
            <param name="ForumGroupID">The forum group identifier</param>
            <param name="Name">The language name</param>
            <param name="Description">The description</param>
            <param name="NumTopics">The number of topics</param>
            <param name="NumPosts">The number of posts</param>
            <param name="LastTopicID">The last topic identifier</param>
            <param name="LastPostID">The last post identifier</param>
            <param name="LastPostUserID">The last post user identifier</param>
            <param name="LastPostTime">The last post date and time</param>
            <param name="DisplayOrder">The display order</param>        
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Forum</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.UpdateForum(System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the forum
            </summary>
            <param name="ForumID">The forum identifier</param>
            <param name="ForumGroupID">The forum group identifier</param>
            <param name="Name">The language name</param>
            <param name="Description">The description</param>
            <param name="NumTopics">The number of topics</param>
            <param name="NumPosts">The number of posts</param>
            <param name="LastTopicID">The last topic identifier</param>
            <param name="LastPostID">The last post identifier</param>
            <param name="LastPostUserID">The last post user identifier</param>
            <param name="LastPostTime">The last post date and time</param>
            <param name="DisplayOrder">The display order</param>        
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Forum</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.UpdateForumStats(System.Int32)">
            <summary>
            Update forum stats
            </summary>
            <param name="ForumID">The forum identifier</param>
            <returns>Forum</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.DeleteTopic(System.Int32)">
            <summary>
            Deletes a topic
            </summary>
            <param name="ForumTopicID">The topic identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.GetTopicByID(System.Int32)">
            <summary>
            Gets a topic
            </summary>
            <param name="ForumTopicID">The topic identifier</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.GetTopicByID(System.Int32,System.Boolean)">
            <summary>
            Gets a topic
            </summary>
            <param name="ForumTopicID">The topic identifier</param>
            <param name="IncreaseViews">The value indicating whether to increase topic views</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.GetAllTopics(System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all topics
            </summary>
            <param name="ForumID">The forum group identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="Keywords">Keywords</param>
            <param name="SearchPosts">A value indicating whether to search in posts</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="TotalRecords">Total records</param>
            <returns>Topics</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.GetActiveTopics(System.Int32)">
            <summary>
            Gets active topics
            </summary>
            <param name="ForumID">The forum group identifier</param>
            <returns>Topics</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.GetActiveTopics(System.Int32,System.Int32)">
            <summary>
            Gets active topics
            </summary>
            <param name="ForumID">The forum group identifier</param>
            <param name="TopicCount">Topic count. 0 if you want to get all topics</param>
            <returns>Topics</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.InsertTopic(System.Int32,System.Int32,NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopicTypeEnum,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Inserts a topic
            </summary>
            <param name="ForumID">The forum identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="TopicType">The topic type</param>
            <param name="Subject">The subject</param>
            <param name="NumPosts">The number of posts</param>
            <param name="Views">The number of views</param>
            <param name="LastPostID">The last post identifier</param>
            <param name="LastPostUserID">The last post user identifier</param>
            <param name="LastPostTime">The last post date and time</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <param name="SendNotifications">A value indicating whether to send notifications to users</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.UpdateTopic(System.Int32,System.Int32,System.Int32,NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopicTypeEnum,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.DateTime,System.DateTime)">
            <summary>
            Updates the topic
            </summary>
            <param name="ForumTopicID">The forum topic identifier</param>
            <param name="ForumID">The forum identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="TopicType">The topic type</param>
            <param name="Subject">The subject</param>
            <param name="NumPosts">The number of posts</param>
            <param name="Views">The number of views</param>
            <param name="LastPostID">The last post identifier</param>
            <param name="LastPostUserID">The last post user identifier</param>
            <param name="LastPostTime">The last post date and time</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.MoveTopic(System.Int32,System.Int32)">
            <summary>
            Moves the topic
            </summary>
            <param name="ForumTopicID">The forum topic identifier</param>
            <param name="NewForumID">New forum identifier</param>
            <returns>Moved topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.DeletePost(System.Int32)">
            <summary>
            Deletes a post
            </summary>
            <param name="ForumPostID">The post identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.GetPostByID(System.Int32)">
            <summary>
            Gets a post
            </summary>
            <param name="ForumPostID">The post identifier</param>
            <returns>Post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.GetAllPosts(System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all posts
            </summary>
            <param name="ForumTopicID">The forum topic identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="Keywords">Keywords</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="TotalRecords">Total records</param>
            <returns>Posts</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.GetAllPosts(System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all posts
            </summary>
            <param name="ForumTopicID">The forum topic identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="Keywords">Keywords</param>
            <param name="AscSort">Sort order</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="TotalRecords">Total records</param>
            <returns>Posts</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.InsertPost(System.Int32,System.Int32,System.String,System.String,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Inserts a post
            </summary>
            <param name="ForumTopicID">The forum topic identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="Text">The text</param>
            <param name="IPAddress">The IP address</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <param name="SendNotifications">A value indicating whether to send notifications to users</param>
            <returns>Post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.UpdatePost(System.Int32,System.Int32,System.Int32,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Updates the post
            </summary>
            <param name="ForumPostID">The forum post identifier</param>
            <param name="ForumTopicID">The forum topic identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="Text">The text</param>
            <param name="IPAddress">The IP address</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.DeletePrivateMessage(System.Int32)">
            <summary>
            Deletes a private message
            </summary>
            <param name="ForumPrivateMessageID">The private message identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.GetPrivateMessageByID(System.Int32)">
            <summary>
            Gets a private message
            </summary>
            <param name="ForumPrivateMessageID">The private message identifier</param>
            <returns>Private message</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.GetAllPrivateMessages(System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets private messages
            </summary>
            <param name="FromUserID">The user identifier who sent the message</param>
            <param name="ToUserID">The user identifier who should receive the message</param>
            <param name="IsRead">A value indicating whether loaded messages are read. false - to load not read messages only, true - to load read messages only, null to load all messages</param>
            <param name="IsDeletedByAuthor">A value indicating whether loaded messages are deleted by author. false - messages are not deleted by author, null to load all messages</param>
            <param name="IsDeletedByRecipient">A value indicating whether loaded messages are deleted by recipient. false - messages are not deleted by recipient, null to load all messages</param>
            <param name="Keywords">Keywords</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="TotalRecords">Total records</param>
            <returns>Private messages</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.InsertPrivateMessage(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Inserts a private message
            </summary>
            <param name="FromUserID">The user identifier who sent the message</param>
            <param name="ToUserID">The user identifier who should receive the message</param>
            <param name="Subject">The subject</param>
            <param name="Text">The text</param>
            <param name="IsRead">The value indivating whether message is read</param>
            <param name="IsDeletedByAuthor">The value indivating whether message is deleted by author</param>
            <param name="IsDeletedByRecipient">The value indivating whether message is deleted by recipient</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Private message</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.UpdatePrivateMessage(System.Int32,System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Updates the private message
            </summary>
            <param name="PrivateMessageID">The private message identifier</param>
            <param name="FromUserID">The user identifier who sent the message</param>
            <param name="ToUserID">The user identifier who should receive the message</param>
            <param name="Subject">The subject</param>
            <param name="Text">The text</param>
            <param name="IsRead">The value indivating whether message is read</param>
            <param name="IsDeletedByAuthor">The value indivating whether message is deleted by author</param>
            <param name="IsDeletedByRecipient">The value indivating whether message is deleted by recipient</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Private message</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.DeleteSubscription(System.Int32)">
            <summary>
            Deletes a forum subscription
            </summary>
            <param name="ForumSubscriptionID">The forum subscription identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.GetSubscriptionByID(System.Int32)">
            <summary>
            Gets a forum subscription
            </summary>
            <param name="ForumSubscriptionID">The forum subscription identifier</param>
            <returns>Forum subscription</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.GetSubscriptionByGUID(System.Int32)">
            <summary>
            Gets a forum subscription
            </summary>
            <param name="SubscriptionGUID">The forum subscription identifier</param>
            <returns>Forum subscription</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.GetAllSubscriptions(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets forum subscriptions
            </summary>
            <param name="UserID">The user identifier</param>
            <param name="ForumID">The forum identifier</param>
            <param name="TopicID">The topic identifier</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <returns>Forum subscriptions</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.GetAllSubscriptions(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets forum subscriptions
            </summary>
            <param name="UserID">The user identifier</param>
            <param name="ForumID">The forum identifier</param>
            <param name="TopicID">The topic identifier</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="TotalRecords">Total records</param>
            <returns>Forum subscriptions</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.InsertSubscription(System.Guid,System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Inserts a forum subscription
            </summary>
            <param name="SubscriptionGUID">The forum subscription identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="ForumID">The forum identifier</param>
            <param name="TopicID">The topic identifier</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Forum subscription</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.UpdateSubscription(System.Int32,System.Guid,System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Updates the forum subscription
            </summary>
            <param name="SubscriptionID">The forum subscription identifier</param>
            <param name="SubscriptionGUID">The forum subscription identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="ForumID">The forum identifier</param>
            <param name="TopicID">The topic identifier</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Forum subscription</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.IsUserAllowedToCreateTopic(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum)">
            <summary>
            Check whether user is allowed to create new topics
            </summary>
            <param name="customer">Customer</param>
            <param name="forum">Forum</param>
            <returns>True if allowed, otherwise false</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.IsUserAllowedToEditTopic(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic)">
            <summary>
            Check whether user is allowed to edit topic
            </summary>
            <param name="customer">Customer</param>
            <param name="topic">Topic</param>
            <returns>True if allowed, otherwise false</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.IsUserAllowedToMoveTopic(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic)">
            <summary>
            Check whether user is allowed to move topic
            </summary>
            <param name="customer">Customer</param>
            <param name="topic">Topic</param>
            <returns>True if allowed, otherwise false</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.IsUserAllowedToDeleteTopic(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic)">
            <summary>
            Check whether user is allowed to delete topic
            </summary>
            <param name="customer">Customer</param>
            <param name="topic">Topic</param>
            <returns>True if allowed, otherwise false</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.IsUserAllowedToCreatePost(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic)">
            <summary>
            Check whether user is allowed to create new post
            </summary>
            <param name="customer">Customer</param>
            <param name="topic">Topic</param>
            <returns>True if allowed, otherwise false</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.IsUserAllowedToEditPost(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumPost)">
            <summary>
            Check whether user is allowed to edit post
            </summary>
            <param name="customer">Customer</param>
            <param name="post">Topic</param>
            <returns>True if allowed, otherwise false</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.IsUserAllowedToDeletePost(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumPost)">
            <summary>
            Check whether user is allowed to delete post
            </summary>
            <param name="customer">Customer</param>
            <param name="post">Topic</param>
            <returns>True if allowed, otherwise false</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.IsUserAllowedToSetTopicPriority(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer)">
            <summary>
            Check whether user is allowed to set topic priority
            </summary>
            <param name="customer">Customer</param>
            <returns>True if allowed, otherwise false</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.IsUserAllowedToSubscribe(System.Int32)">
            <summary>
            Check whether user is allowed to watch topics
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <returns>True if allowed, otherwise false</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.IsUserAllowedToSubscribe(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer)">
            <summary>
            Check whether user is allowed to watch topics
            </summary>
            <param name="customer">Customer</param>
            <returns>True if allowed, otherwise false</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.FormatPostText(System.String)">
            <summary>
            Formats the posts text
            </summary>
            <param name="Text">Text</param>
            <returns>Formatted text</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.FormatSignatureText(System.String)">
            <summary>
            Formats the signature text
            </summary>
            <param name="Text">Text</param>
            <returns>Formatted text</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.FormatPrivateMessageText(System.String)">
            <summary>
            Formats the private message text
            </summary>
            <param name="Text">Text</param>
            <returns>Formatted text</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.StripTopicSubject(System.String)">
            <summary>
            Strips topic subject
            </summary>
            <param name="Subject">Subject</param>
            <returns>Formatted subject</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.CalculateTopicPageIndex(System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates topic page index by post identifier
            </summary>
            <param name="ForumTopicID">Topic identifier</param>
            <param name="PageSize">Page size</param>
            <param name="PostID">Post identifier</param>
            <returns>Page index</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.ForumsEnabled">
            <summary>
            Gets or sets a value indicating whether forums are enabled
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.AllowCustomersToEditPosts">
            <summary>
            Gets or sets a value indicating whether customers are allowed to edit posts that they created.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.AllowCustomersToDeletePosts">
            <summary>
            Gets or sets a value indicating whether customers are allowed to delete posts that they created.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.TopicSubjectMaxLength">
            <summary>
            Gets or sets maximum length of topic subject
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.PostMaxLength">
            <summary>
            Gets or sets maximum length of post
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.TopicsPageSize">
            <summary>
            Gets or sets the page size for topics in forums
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.PostsPageSize">
            <summary>
            Gets or sets the page size for posts in topics
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.SearchResultsPageSize">
            <summary>
            Gets or sets the page size for search result
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.LatestUserPostsPageSize">
            <summary>
            Gets or sets the page size for latest user post
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.ShowCustomersPostCount">
            <summary>
            Gets or sets a value indicating whether to show customers forum post count
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.ForumEditor">
            <summary>
            Gets or sets a forum editor type
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.SignaturesEnabled">
            <summary>
            Gets or sets a value indicating whether customers are allowed to specify signature.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.AllowPrivateMessages">
            <summary>
            Gets or sets a value indicating whether private messages are allowed
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.PMSubjectMaxLength">
            <summary>
            Gets or sets maximum length of pm subject
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumManager.PMTextMaxLength">
            <summary>
            Gets or sets maximum length of pm message
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Security.SecurityHelper">
            <summary>
            Represents a security helper
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.SecurityHelper.Decrypt(System.String)">
            <summary>
            Decrypts text
            </summary>
            <param name="CipherText">Cipher text</param>
            <returns>Decrypted string</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.SecurityHelper.Decrypt(System.String,System.String)">
            <summary>
            Decrypts text
            </summary>
            <param name="CipherText">Cipher text</param>
            <param name="EncryptionPrivateKey">Encryption private key</param>
            <returns>Decrypted string</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.SecurityHelper.Encrypt(System.String)">
            <summary>
            Encrypts text
            </summary>
            <param name="PlainText">Plaint text</param>
            <returns>Encrypted string</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.SecurityHelper.Encrypt(System.String,System.String)">
            <summary>
            Encrypts text
            </summary>
            <param name="PlainText">Plaint text</param>
            <param name="EncryptionPrivateKey">Encryption private key</param>
            <returns>Encrypted string</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.SecurityHelper.ChangeEncryptionPrivateKey(System.String)">
            <summary>
            Change encryption private key
            </summary>
            <param name="NewEncryptionPrivateKey">New encryption private key</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider">
            <summary>
            Manages storage of membership information for a nopCommerce application in a data source
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.ChangePassword(System.String,System.String,System.String)">
            <summary>
            Processes a request to update the password for a membership user.
            </summary>
            <param name="username">The user to update the password for. </param>
            <param name="oldPassword">The current password for the specified user.</param>
            <param name="newPassword">The new password for the specified user.</param>
            <returns>true if the password was updated successfully; otherwise, false.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)">
            <summary>
            Processes a request to update the password question and answer for a membership user.
            </summary>
            <param name="username">The user to change the password question and answer for.</param>
            <param name="password">The password for the specified user.</param>
            <param name="newPasswordQuestion">The new password question for the specified user.</param>
            <param name="newPasswordAnswer">The new password answer for the specified user.</param>
            <returns>true if the password question and answer are updated successfully; otherwise, false.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
            <summary>
            Adds a new membership user to the data source.
            </summary>
            <param name="username">The user name for the new user.</param>
            <param name="password">The password for the new user.</param>
            <param name="email">The e-mail address for the new user.</param>
            <param name="passwordQuestion">The password question for the new user.</param>
            <param name="passwordAnswer">The password answer for the new user.</param>
            <param name="isApproved">Whether or not the new user is approved to be validated.</param>
            <param name="providerUserKey">The unique identifier from the membership data source for the user.</param>
            <param name="status">A MembershipCreateStatus enumeration value indicating whether the user was created successfully.</param>
            <returns>A MembershipUser object populated with the information for the newly created user.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.DeleteUser(System.String,System.Boolean)">
            <summary>
            Removes a user from the membership data source.
            </summary>
            <param name="username">The name of the user to delete.</param>
            <param name="deleteAllRelatedData">true to delete data related to the user from the database; false to leave data related to the user in the database.</param>
            <returns>true if the user was successfully deleted; otherwise, false.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a collection of membership users where the e-mail address contains the specified e-mail address to match.
            </summary>
            <param name="EmailToMatch">The e-mail address to search for.</param>
            <param name="pageIndex">The index of the page of results to return. pageIndex is zero-based.</param>
            <param name="pageSize">The size of the page of results to return.</param>
            <param name="totalRecords">The total number of matched users.</param>
            <returns>A MembershipUserCollection collection that contains a page of pageSizeMembershipUser objects beginning at the page specified by pageIndex.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a collection of membership users where the user name contains the specified user name to match.
            </summary>
            <param name="usernameToMatch">The user name to search for.</param>
            <param name="pageIndex">The index of the page of results to return. pageIndex is zero-based.</param>
            <param name="pageSize">The size of the page of results to return.</param>
            <param name="totalRecords">The total number of matched users.</param>
            <returns>A MembershipUserCollection collection that contains a page of pageSizeMembershipUser objects beginning at the page specified by pageIndex.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a collection of all the users in the data source in pages of data.
            </summary>
            <param name="pageIndex">The index of the page of results to return. pageIndex is zero-based.</param>
            <param name="pageSize">The size of the page of results to return.</param>
            <param name="totalRecords">The total number of matched users.</param>
            <returns>A MembershipUserCollection collection that contains a page of pageSizeMembershipUser objects beginning at the page specified by pageIndex.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.GetNumberOfUsersOnline">
            <summary>
            Gets the number of users currently accessing the application.
            </summary>
            <returns>The number of users currently accessing the application.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.GetPassword(System.String,System.String)">
            <summary>
            Gets the password for the specified user name from the data source.
            </summary>
            <param name="username">The user to retrieve the password for.</param>
            <param name="answer">The password answer for the user.</param>
            <returns>The password for the specified user name.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.GetUser(System.Object,System.Boolean)">
            <summary>
            Gets user information from the data source based on the unique identifier for the membership user. Provides an option to update the last-activity date/time stamp for the user.
            </summary>
            <param name="providerUserKey">The unique identifier for the membership user to get information for.</param>
            <param name="userIsOnline">true to update the last-activity date/time stamp for the user; false to return user information without updating the last-activity date/time stamp for the user.</param>
            <returns>A MembershipUser object populated with the specified user's information from the data source.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.GetUser(System.String,System.Boolean)">
            <summary>
            Gets information from the data source for a user. Provides an option to update the last-activity date/time stamp for the user.
            </summary>
            <param name="username">The name of the user to get information for.</param>
            <param name="userIsOnline">true to update the last-activity date/time stamp for the user; false to return user information without updating the last-activity date/time stamp for the user.</param>
            <returns>A MembershipUser object populated with the specified user's information from the data source.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.GetUserNameByEmail(System.String)">
            <summary>
            Gets the user name associated with the specified e-mail address.
            </summary>
            <param name="email">The e-mail address to search for.</param>
            <returns>The user name associated with the specified e-mail address. If no match is found, return null.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.ResetPassword(System.String,System.String)">
            <summary>
            Resets a user's password to a new, automatically generated password.
            </summary>
            <param name="username">The user to reset the password for.</param>
            <param name="answer">The password answer for the specified user.</param>
            <returns>The new password for the specified user.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.UnlockUser(System.String)">
            <summary>
            Clears a lock so that the membership user can be validated.
            </summary>
            <param name="userName">The membership user whose lock status you want to clear.</param>
            <returns>true if the membership user was successfully unlocked; otherwise, false.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)">
            <summary>
            Updates information about a user in the data source.
            </summary>
            <param name="user">A MembershipUser object that represents the user to update and the updated information for the user.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.ValidateUser(System.String,System.String)">
            <summary>
            Verifies that the specified user name and password exist in the data source.
            </summary>
            <param name="username">The name of the user to validate.</param>
            <param name="password">The password for the specified user.</param>
            <returns>true if the specified username and password are valid; otherwise, false.</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.ApplicationName">
            <summary>
            The name of the application using the custom membership provider.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.EnablePasswordReset">
            <summary>
            Indicates whether the membership provider is configured to allow users to reset their passwords.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.MaxInvalidPasswordAttempts">
            <summary>
            Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.MinRequiredNonAlphanumericCharacters">
            <summary>
            Gets the minimum number of special characters that must be present in a valid password.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.MinRequiredPasswordLength">
            <summary>
            Gets the minimum length required for a password.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.PasswordAttemptWindow">
            <summary>
            Gets the number of minutes in which a maximum number of invalid password or password-answer attempts are allowed before the membership user is locked out.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.PasswordStrengthRegularExpression">
            <summary>
            Gets the regular expression used to evaluate a password.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.RequiresQuestionAndAnswer">
            <summary>
            Gets a value indicating whether the membership provider is configured to require the user to answer a password question for password reset and retrieval.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.RequiresUniqueEmail">
            <summary>
            Gets a value indicating whether the membership provider is configured to require a unique e-mail address for each user name.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.EnablePasswordRetrieval">
            <summary>
            Indicates whether the membership provider is configured to allow users to retrieve their passwords.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreMembershipProvider.PasswordFormat">
            <summary>
            Gets a value indicating the format for storing passwords in the membership data store.
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Categories.CategoryManager">
            <summary>
            Category manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Categories.CategoryManager.MarkCategoryAsDeleted(System.Int32)">
            <summary>
            Marks category as deleted
            </summary>
            <param name="CategoryID">Category identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Categories.CategoryManager.RemoveCategoryPicture(System.Int32)">
            <summary>
            Removes category picture
            </summary>
            <param name="CategoryID">Category identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Categories.CategoryManager.GetAllCategories(System.Int32)">
            <summary>
            Gets all categories
            </summary>
            <param name="ParentCategoryID">Parent category identifier</param>
            <returns>Category collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Categories.CategoryManager.GetAllCategories(System.Int32,System.Boolean)">
            <summary>
            Gets all categories
            </summary>
            <param name="ParentCategoryID">Parent category identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Category collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Categories.CategoryManager.GetCategoryByID(System.Int32)">
            <summary>
            Gets a category
            </summary>
            <param name="CategoryID">Category identifier</param>
            <returns>Category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Categories.CategoryManager.GetBreadCrumb(System.Int32)">
            <summary>
            Gets a category breadcrumb
            </summary>
            <param name="CategoryID">Category identifier</param>
            <returns>Category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Categories.CategoryManager.InsertCategory(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts category identifier
            </summary>
            <param name="Name">The category name</param>
            <param name="Description">The description</param>
            <param name="TemplateID">The template identifier</param>
            <param name="MetaKeywords">The meta keywords</param>
            <param name="MetaDescription">The meta description</param>
            <param name="MetaTitle">The meta title</param>
            <param name="SEName">The search-engine name</param>
            <param name="ParentCategoryID">The parent category identifier</param>
            <param name="PictureID">The picture identifier</param>
            <param name="PageSize">The page size</param>
            <param name="PriceRanges">The price ranges</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Categories.CategoryManager.UpdateCategory(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the category
            </summary>
            <param name="CategoryID">Category identifier</param>
            <param name="Name">The category name</param>
            <param name="Description">The description</param>
            <param name="TemplateID">The template identifier</param>
            <param name="MetaKeywords">The meta keywords</param>
            <param name="MetaDescription">The meta description</param>
            <param name="MetaTitle">The meta title</param>
            <param name="SEName">The search-engine name</param>
            <param name="ParentCategoryID">The parent category identifier</param>
            <param name="PictureID">The picture identifier</param>
            <param name="PageSize">The page size</param>
            <param name="PriceRanges">The price ranges</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Categories.CategoryManager.DeleteProductCategory(System.Int32)">
            <summary>
            Deletes a product category mapping
            </summary>
            <param name="ProductCategoryID">Product category identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Categories.CategoryManager.GetProductCategoriesByCategoryID(System.Int32)">
            <summary>
            Gets product category mapping collection
            </summary>
            <param name="CategoryID">Category identifier</param>
            <returns>Product a category mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Categories.CategoryManager.GetProductCategoriesByProductID(System.Int32)">
            <summary>
            Gets a product category mapping collection
            </summary>
            <param name="ProductID">Product identifier</param>
            <returns>Product category mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Categories.CategoryManager.GetProductCategoryByID(System.Int32)">
            <summary>
            Gets a product category mapping 
            </summary>
            <param name="ProductCategoryID">Product category mapping identifier</param>
            <returns>Product category mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Categories.CategoryManager.InsertProductCategory(System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Inserts a product category mapping
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="CategoryID">Category identifier</param>
            <param name="IsFeaturedProduct">A value indicating whether the product is featured</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product category mapping </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Categories.CategoryManager.UpdateProductCategory(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Updates the product category mapping 
            </summary>
            <param name="ProductCategoryID">Product category mapping  identifier</param>
            <param name="ProductID">Product identifier</param>
            <param name="CategoryID">Category identifier</param>
            <param name="IsFeaturedProduct">A value indicating whether the product is featured</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product category mapping </returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.CategoryManager.CategoriesCacheEnabled">
            <summary>
            Gets a value indicating whether categories cache is enabled
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.CategoryManager.MappingsCacheEnabled">
            <summary>
            Gets a value indicating whether mappings cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Utils.SiteHelper">
            <summary>
            Site helper
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Utils.SiteHelper.GetCurrentVersion">
            <summary>
            Get current version
            </summary>
            <returns></returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountCollection">
            <summary>
            Represents a discount collection
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountCollection.ContainsDiscount(System.String)">
            <summary>
            Determines whether the collection contains the specified discount.
            </summary>
            <param name="DiscountName">Discount name</param>
            <returns>true if the collection contains a discount with the specified name; otherwise, false.</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Directory.Currency">
            <summary>
            Represents a currency
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.Currency.#ctor">
            <summary>
            Creates a new instance of the Currency class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Currency.CurrencyID">
            <summary>
            Gets or sets the currency identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Currency.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Currency.CurrencyCode">
            <summary>
            Gets or sets the currency code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Currency.Rate">
            <summary>
            Gets or sets the rate
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Currency.DisplayLocale">
            <summary>
            Gets or sets the display locale
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Currency.CustomFormatting">
            <summary>
            Gets or sets the custom formatting
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Currency.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Currency.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Currency.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Currency.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Currency.IsPrimaryExchangeRateCurrency">
            <summary>
            Gets or a value indicating whether the currency is primary exchange rate currency
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Currency.IsPrimaryStoreCurrency">
            <summary>
            Gets or a value indicating whether the currency is primary store currency
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Payment.CreditCardType">
            <summary>
            Represents a credit card type
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.CreditCardType.#ctor">
            <summary>
            Creates a new instance of the CreditCardType class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.CreditCardType.CreditCardTypeID">
            <summary>
            Gets or sets the credit card type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.CreditCardType.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.CreditCardType.SystemKeyword">
            <summary>
            Gets or sets the system keyword
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.CreditCardType.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.CreditCardType.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShipmentPackage">
            <summary>
            Represents a shipment package
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShipmentPackage.GetTotalWidth">
            <summary>
            Gets total weight
            </summary>
            <returns>Total weight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShipmentPackage.GetTotalLength">
            <summary>
            Gets total length
            </summary>
            <returns>Total length</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShipmentPackage.GetTotalHeight">
            <summary>
            Gets total height
            </summary>
            <returns>Total height</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShipmentPackage.Customer">
            <summary>
            Gets or sets a customer
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShipmentPackage.Items">
            <summary>
            Gets or sets a shopping cart items
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShipmentPackage.ShippingAddress">
            <summary>
            Gets or sets a shipping address
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShipmentPackage.CountryFrom">
            <summary>
            Shipped from country
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShipmentPackage.StateProvinceFrom">
            <summary>
            Shipped from state/province
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShipmentPackage.ZipPostalCodeFrom">
            <summary>
            Shipped from zip/postal code
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartTypeEnum">
            <summary>
            Represents a shoping cart type (need to be synchronize with [Nop_ShoppingCartType] table
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartTypeEnum.ShoppingCart">
            <summary>
            Shopping cart
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartTypeEnum.Wishlist">
            <summary>
            Wishlist
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageTemplateCollection">
            <summary>
            Represents a message template collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogPostCollection">
            <summary>
            Represents a blog post collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Media.Picture">
            <summary>
            Represents a picture
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.Picture.#ctor">
            <summary>
            Creates a new instance of the Picture class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Media.Picture.PictureID">
            <summary>
            Gets or sets the picture identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Media.Picture.PictureBinary">
            <summary>
            Gets or sets the picture binary
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Media.Picture.Extension">
            <summary>
            Gets or sets the picture extension
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Media.Picture.IsNew">
            <summary>
            Gets or sets a value indicating whether the picture is new
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Categories.ProductCategory">
            <summary>
            Represents a product category mapping
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Categories.ProductCategory.#ctor">
            <summary>
            Creates a new instance of the ProductCategory class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.ProductCategory.ProductCategoryID">
            <summary>
            Gets or sets the ProductCategory identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.ProductCategory.ProductID">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.ProductCategory.CategoryID">
            <summary>
            Gets or sets the category identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.ProductCategory.IsFeaturedProduct">
            <summary>
            Gets or sets a value indicating whether the product is featured
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.ProductCategory.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.ProductCategory.Category">
            <summary>
            Gets the category
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.ProductCategory.Product">
            <summary>
            Gets the product
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Security.BannedIpAddressCollection">
            <summary>
            Represents an IP address collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountType">
            <summary>
            Represents a discount type
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountType.#ctor">
            <summary>
            Creates a new instance of the DiscountType class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountType.DiscountTypeID">
            <summary>
            Gets or sets the discount type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountType.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeOptionFilterCollection">
            <summary>
            Represents a collection of specification attribute filter options
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExcelHelper">
            <summary>
            Excel helper
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExcelHelper.#ctor(System.String)">
            <summary>
            Ctor
            </summary>
            <param name="filepath">Excel file path</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExcelHelper.GetSchema">
            <summary>
            Gets a schema
            </summary>
            <returns>Schema</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExcelHelper.ReadTable(System.String)">
            <summary>
            Read table
            </summary>
            <param name="tableName">Table Name</param>
            <returns>Table</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExcelHelper.ReadTable(System.String,System.String)">
            <summary>
            Read table
            </summary>
            <param name="tableName">Table Name</param>
            <param name="criteria">Criteria</param>
            <returns>Table</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExcelHelper.DropTable(System.String)">
            <summary>
            Drop table
            </summary>
            <param name="tableName">Table Name</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExcelHelper.WriteTable(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Write table
            </summary>
            <param name="tableName">Table Name</param>
            <param name="tableDefinition">Table Definition</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExcelHelper.AddNewRow(System.Data.DataRow)">
            <summary>
            Add new row
            </summary>
            <param name="dr">Data Row</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExcelHelper.ExecuteCommand(System.String)">
            <summary>
            Execute new command
            </summary>
            <param name="Command">Command</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExcelHelper.GenerateCreateTable(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Generates create table script
            </summary>
            <param name="tableName">Table Name</param>
            <param name="tableDefinition">Table Definition</param>
            <returns>Create table script</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExcelHelper.GenerateInsertStatement(System.Data.DataRow)">
            <summary>
            Generates insert statement script
            </summary>
            <param name="dr">Data row</param>
            <returns>Insert statement script</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExcelHelper.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExcelHelper.ConnectionString">
            <summary>
            Gets connection string
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExcelHelper.Connection">
            <summary>
            Gets connection
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExcelHelper.HDR">
            <summary>
            Gets or sets a HDR
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExcelHelper.IMEX">
            <summary>
            Gets or sets an IMEX
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.DeleteExpiresCustomerSessionsTask">
            <summary>
            Represents a task for deleting expires customer sessions
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.DeleteExpiresCustomerSessionsTask.Execute(System.Xml.XmlNode)">
            <summary>
            Executes a task
            </summary>
            <param name="node">Xml node that represents a task description</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreRoleProvider">
            <summary>
            Manages storage of role membership information for a nopCommerce application in a data source.
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreRoleProvider.AddUsersToRoles(System.String[],System.String[])">
            <summary>
            Adds the specified user names to the specified roles for the configured applicationName
            </summary>
            <param name="usernames">A string array of user names to be added to the specified roles.</param>
            <param name="roleNames">A string array of the role names to add the specified user names to.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreRoleProvider.CreateRole(System.String)">
            <summary>
            Adds a new role to the data source for the configured applicationName.
            </summary>
            <param name="roleName">The name of the role to create.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreRoleProvider.DeleteRole(System.String,System.Boolean)">
            <summary>
            Removes a role from the data source for the configured applicationName.
            </summary>
            <param name="roleName">The name of the role to delete.</param>
            <param name="throwOnPopulatedRole">If true, throw an exception if roleName has one or more members and do not delete roleName.</param>
            <returns>true if the role was successfully deleted; otherwise, false.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreRoleProvider.FindUsersInRole(System.String,System.String)">
            <summary>
            Gets an array of user names in a role where the user name contains the specified user name to match.
            </summary>
            <param name="roleName">The role to search in.</param>
            <param name="usernameToMatch">The user name to search for.</param>
            <returns>A string array containing the names of all the users where the user name matches usernameToMatch and the user is a member of the specified role.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreRoleProvider.GetAllRoles">
            <summary>
            Gets a list of all the roles for the configured applicationName.
            </summary>
            <returns>A string array containing the names of all the roles stored in the data source for the configured applicationName.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreRoleProvider.GetRolesForUser(System.String)">
            <summary>
            Gets a list of the roles that a specified user is in for the configured applicationName.
            </summary>
            <param name="username">The user to return a list of roles for.</param>
            <returns>A string array containing the names of all the roles that the specified user is in for the configured applicationName.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreRoleProvider.GetUsersInRole(System.String)">
            <summary>
            Gets a list of users in the specified role for the configured applicationName.
            </summary>
            <param name="roleName">The name of the role to get the list of users for.</param>
            <returns>A string array containing the names of all the users who are members of the specified role for the configured applicationName.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreRoleProvider.IsUserInRole(System.String,System.String)">
            <summary>
            Gets a value indicating whether the specified user is in the specified role for the configured applicationName.
            </summary>
            <param name="username">The user name to search for.</param>
            <param name="roleName">The role to search in.</param>
            <returns>true if the specified user is in the specified role for the configured applicationName; otherwise, false.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
            <summary>
            Removes the specified user names from the specified roles for the configured applicationName.
            </summary>
            <param name="usernames">A string array of user names to be removed from the specified roles.</param>
            <param name="roleNames">A string array of role names to remove the specified user names from.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreRoleProvider.RoleExists(System.String)">
            <summary>
            Gets a value indicating whether the specified role name already exists in the role data source for the configured applicationName.
            </summary>
            <param name="roleName">The name of the role to search for in the data source.</param>
            <returns>true if the role name already exists in the data source for the configured applicationName; otherwise, false.</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Profile.StoreRoleProvider.ApplicationName">
            <summary>
            Gets or sets the name of the application to store and retrieve role information for.
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Payment.ProcessPaymentResult">
            <summary>
            Represents a ProcessPaymentResult
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.ProcessPaymentResult.AVSResult">
            <summary>
            Gets or sets an AVS result
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.ProcessPaymentResult.AuthorizationTransactionID">
            <summary>
            Gets or sets the authorization transaction ID
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.ProcessPaymentResult.AuthorizationTransactionCode">
            <summary>
            Gets or sets the authorization transaction code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.ProcessPaymentResult.AuthorizationTransactionResult">
            <summary>
            Gets or sets the authorization transaction result
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.ProcessPaymentResult.CaptureTransactionID">
            <summary>
            Gets or sets the capture transaction ID
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.ProcessPaymentResult.CaptureTransactionResult">
            <summary>
            Gets or sets the capture transaction result
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.ProcessPaymentResult.Error">
            <summary>
            Gets or sets an error message for customer, or String.Empty if no errors
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.ProcessPaymentResult.FullError">
            <summary>
            Gets or sets a full error message, or String.Empty if no errors
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.ProcessPaymentResult.PaymentStatus">
            <summary>
            Gets or sets a payment status after processing
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.ProcessPaymentResult.AllowStoringCreditCardNumber">
            <summary>
            Gets or sets a value indicating whether storing of credit card number, CVV2 is allowed
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Payment.IPaymentMethod">
            <summary>
            Provides an interface for creating payment gateways
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.IPaymentMethod.ProcessPayment(NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentInfo,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Guid,NopSolutions.NopCommerce.BusinessLogic.Payment.ProcessPaymentResult@)">
            <summary>
            Process payment
            </summary>
            <param name="paymentInfo">Payment info required for an order processing</param>
            <param name="customer">Customer</param>
            <param name="OrderGuid">Unique order identifier</param>
            <param name="processPaymentResult">Process payment result</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.IPaymentMethod.PostProcessPayment(NopSolutions.NopCommerce.BusinessLogic.Orders.Order)">
            <summary>
            Post process payment (payment gateways that require redirecting)
            </summary>
            <param name="order">Order</param>
            <returns>The error status, or String.Empty if no errors</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.IPaymentMethod.GetAdditionalHandlingFee">
            <summary>
            Gets additional handling fee
            </summary>
            <returns>Additional handling fee</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.IPaymentMethod.Capture(NopSolutions.NopCommerce.BusinessLogic.Orders.Order,NopSolutions.NopCommerce.BusinessLogic.Payment.ProcessPaymentResult@)">
            <summary>
            Captures payment (from admin panel)
            </summary>
            <param name="order">Order</param>
            <param name="processPaymentResult">Process payment result</param>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.IPaymentMethod.CanCapture">
            <summary>
            Gets a value indicating whether capture is allowed from admin panel
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Configuration.NopConfig">
            <summary>
            Represents a NopConfig
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Configuration.NopConfig.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            Creates a configuration section handler.
            </summary>
            <param name="parent">Parent object.</param>
            <param name="configContext">Configuration context object.</param>
            <param name="section">Section XML node.</param>
            <returns>The created section handler object.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Configuration.NopConfig.Init">
            <summary>
            Initializes the NopConfig object
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Configuration.NopConfig.ConnectionString">
            <summary>
            Gets or sets the connection string that is used to connect to the storage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Configuration.NopConfig.CookieExpires">
            <summary>
            Gets or sets the expiration date and time for the Cookie in hours
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Configuration.NopConfig.CacheEnabled">
            <summary>
            Gets or sets a value indicating whether the cache is enabled
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Configuration.NopConfig.ScheduleTasks">
            <summary>
            Gets or sets a schedule tasks section
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Warehouses.WarehouseManager">
            <summary>
            Warehouse manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Warehouses.WarehouseManager.MarkWarehouseAsDeleted(System.Int32)">
            <summary>
            Marks a warehouse as deleted
            </summary>
            <param name="WarehouseID">The warehouse identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Warehouses.WarehouseManager.GetAllWarehouses">
            <summary>
            Gets all warehouses
            </summary>
            <returns>Warehouse collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Warehouses.WarehouseManager.GetWarehouseByID(System.Int32)">
            <summary>
            Gets a warehouse
            </summary>
            <param name="WarehouseID">The warehouse identifier</param>
            <returns>Warehouse</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Warehouses.WarehouseManager.InsertWarehouse(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Inserts a warehouse
            </summary>
            <param name="Name">The name</param>
            <param name="PhoneNumber">The phone number</param>
            <param name="Email">The email</param>
            <param name="FaxNumber">The fax number</param>
            <param name="Address1">The address 1</param>
            <param name="Address2">The address 2</param>
            <param name="City">The city</param>
            <param name="StateProvince">The state/province</param>
            <param name="ZipPostalCode">The zip/postal code</param>
            <param name="CountryID">The country identifier</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Warehouse</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Warehouses.WarehouseManager.UpdateWarehouse(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Updates the warehouse
            </summary>
            <param name="WarehouseID">The warehouse identifier</param>
            <param name="Name">The name</param>
            <param name="PhoneNumber">The phone number</param>
            <param name="Email">The email</param>
            <param name="FaxNumber">The fax number</param>
            <param name="Address1">The address 1</param>
            <param name="Address2">The address 2</param>
            <param name="City">The city</param>
            <param name="StateProvince">The state/province</param>
            <param name="ZipPostalCode">The zip/postal code</param>
            <param name="CountryID">The country identifier</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Warehouse</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingManager">
            <summary>
            Setting manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingManager.GetSettingByID(System.Int32)">
            <summary>
            Gets a setting
            </summary>
            <param name="SettingID">Setting identifer</param>
            <returns>Setting</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingManager.DeleteSetting(System.Int32)">
            <summary>
            Deletes a setting
            </summary>
            <param name="SettingID">Setting identifer</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingManager.GetAllSettings">
            <summary>
            Gets all settings
            </summary>
            <returns>Setting collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingManager.SetParam(System.String,System.String)">
            <summary>
            Inserts/updates a param
            </summary>
            <param name="Name">The name</param>
            <param name="Value">The value</param>
            <returns>Setting</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingManager.SetParam(System.String,System.String,System.String)">
            <summary>
            Inserts/updates a param
            </summary>
            <param name="Name">The name</param>
            <param name="Value">The value</param>
            <param name="Description">The description</param>
            <returns>Setting</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingManager.SetParamNative(System.String,System.Decimal)">
            <summary>
            Inserts/updates a param in US locale
            </summary>
            <param name="Name">The name</param>
            <param name="Value">The value</param>
            <returns>Setting</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingManager.SetParamNative(System.String,System.Decimal,System.String)">
            <summary>
            Inserts/updates a param in US locale
            </summary>
            <param name="Name">The name</param>
            <param name="Value">The value</param>
            <param name="Description">The description</param>
            <returns>Setting</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingManager.AddSetting(System.String,System.String,System.String)">
            <summary>
            Adds a setting
            </summary>
            <param name="Name">The name</param>
            <param name="Value">The value</param>
            <param name="Description">The description</param>
            <returns>Setting</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingManager.UpdateSetting(System.Int32,System.String,System.String,System.String)">
            <summary>
            Updates a setting
            </summary>
            <param name="SettingID">Setting identifier</param>
            <param name="Name">The name</param>
            <param name="Value">The value</param>
            <param name="Description">The description</param>
            <returns>Setting</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingManager.GetSettingValueBoolean(System.String)">
            <summary>
            Gets a boolean value of a setting
            </summary>
            <param name="Name">The setting name</param>
            <returns>The setting value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingManager.GetSettingValueBoolean(System.String,System.Boolean)">
            <summary>
            Gets a boolean value of a setting
            </summary>
            <param name="Name">The setting name</param>
            <param name="DefaultValue">The default value</param>
            <returns>The setting value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingManager.GetSettingValueInteger(System.String)">
            <summary>
            Gets an integer value of a setting
            </summary>
            <param name="Name">The setting name</param>
            <returns>The setting value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingManager.GetSettingValueInteger(System.String,System.Int32)">
            <summary>
            Gets an integer value of a setting
            </summary>
            <param name="Name">The setting name</param>
            <param name="DefaultValue">The default value</param>
            <returns>The setting value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingManager.GetSettingValueDecimalNative(System.String)">
            <summary>
            Gets a decimal value of a setting in US locale
            </summary>
            <param name="Name">The setting name</param>
            <returns>The setting value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingManager.GetSettingValueDecimalNative(System.String,System.Decimal)">
            <summary>
            Gets a decimal value of a setting in US locale
            </summary>
            <param name="Name">The setting name</param>
            <param name="DefaultValue">The default value</param>
            <returns>The setting value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingManager.GetSettingValue(System.String)">
            <summary>
            Gets a setting value
            </summary>
            <param name="Name">The setting name</param>
            <returns>The setting value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingManager.GetSettingValue(System.String,System.String)">
            <summary>
            Gets a setting value
            </summary>
            <param name="Name">The setting name</param>
            <param name="DefaultValue">The default value</param>
            <returns>The setting value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingManager.GetSettingByName(System.String)">
            <summary>
            Get a setting by name
            </summary>
            <param name="Name">The setting name</param>
            <returns>Setting instance</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingManager.StoreName">
            <summary>
            Gets or sets a store name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingManager.StoreURL">
            <summary>
            Gets or sets a store URL (ending with "/")
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Audit.LogManager">
            <summary>
            Log manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Audit.LogManager.DeleteLog(System.Int32)">
            <summary>
            Deletes a log item
            </summary>
            <param name="LogID">Log item identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Audit.LogManager.ClearLog">
            <summary>
            Clears a log
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Audit.LogManager.GetAllLogs">
            <summary>
            Gets all log items
            </summary>
            <returns>Log item collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Audit.LogManager.GetLogByID(System.Int32)">
            <summary>
            Gets a log item
            </summary>
            <param name="LogID">Log item identifier</param>
            <returns>Log item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Audit.LogManager.InsertLog(NopSolutions.NopCommerce.BusinessLogic.Audit.LogTypeEnum,System.String,System.String)">
            <summary>
            Inserts a log item
            </summary>
            <param name="LogType">Log item type</param>
            <param name="Message">The short message</param>
            <param name="Exception">The exception</param>
            <returns>A log item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Audit.LogManager.InsertLog(NopSolutions.NopCommerce.BusinessLogic.Audit.LogTypeEnum,System.String,System.Exception)">
            <summary>
            Inserts a log item
            </summary>
            <param name="LogType">Log item type</param>
            <param name="Message">The short message</param>
            <param name="Exception">The exception</param>
            <returns>A log item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Audit.LogManager.InsertLog(NopSolutions.NopCommerce.BusinessLogic.Audit.LogTypeEnum,System.Int32,System.String,System.Exception,System.String,System.Int32,System.String)">
            <summary>
            Inserts a log item
            </summary>
            <param name="LogType">Log item type</param>
            <param name="Severity">The severity</param>
            <param name="Message">The short message</param>
            <param name="exception">The full exception</param>
            <param name="IPAddress">The IP address</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="PageURL">The page URL</param>
            <returns>Log item</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Localization.LocaleStringResourceManager">
            <summary>
            Locale string resource manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Localization.LocaleStringResourceManager.DeleteLocaleStringResource(System.Int32)">
            <summary>
            Deletes a locale string resource
            </summary>
            <param name="LocaleStringResourceID">Locale string resource identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Localization.LocaleStringResourceManager.GetLocaleStringResourceByID(System.Int32)">
            <summary>
            Gets a locale string resource
            </summary>
            <param name="LocaleStringResourceID">Locale string resource identifier</param>
            <returns>Locale string resource</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Localization.LocaleStringResourceManager.GetAllResourcesByLanguageID(System.Int32)">
            <summary>
            Gets all locale string resources by language identifier
            </summary>
            <param name="LanguageID">Language identifier</param>
            <returns>Locale string resource collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Localization.LocaleStringResourceManager.InsertLocaleStringResource(System.Int32,System.String,System.String)">
            <summary>
            Inserts a locale string resource
            </summary>
            <param name="LanguageID">The language identifier</param>
            <param name="ResourceName">The resource name</param>
            <param name="ResourceValue">The resource value</param>
            <returns>Locale string resource</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Localization.LocaleStringResourceManager.UpdateLocaleStringResource(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Updates the locale string resource
            </summary>
            <param name="LocaleStringResourceID">The locale string resource identifier</param>
            <param name="LanguageID">The language identifier</param>
            <param name="ResourceName">The resource name</param>
            <param name="ResourceValue">The resource value</param>
            <returns>Locale string resource</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Localization.LocaleStringResourceManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxCategoryCollection">
            <summary>
            Represents a tax category collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingRateComputationMethodCollection">
            <summary>
            Represents a shipping rate computation method collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.SettingCollection">
            <summary>
            Represents a setting collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentMethodCollection">
            <summary>
            Represents a payment method collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderCollection">
            <summary>
            Represents an order collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Categories.CategoryCollection">
            <summary>
            Represents a category collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Media.DownloadManager">
            <summary>
            Download manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.DownloadManager.GetAdminDownloadUrl(NopSolutions.NopCommerce.BusinessLogic.Media.Download)">
            <summary>
            Gets a download url for an admin area
            </summary>
            <param name="download">Download instance</param>
            <returns>Download url</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.DownloadManager.GetDownloadUrl(NopSolutions.NopCommerce.BusinessLogic.Orders.OrderProductVariant)">
            <summary>
            Gets a download url for a product variant
            </summary>
            <param name="orderProductVariant">Order product variant instance</param>
            <returns>Download url</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.DownloadManager.GetSampleDownloadUrl(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant)">
            <summary>
            Gets a sample download url for a product variant
            </summary>
            <param name="productVariant">Product variant instance</param>
            <returns>Download url</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.DownloadManager.GetDownloadByID(System.Int32)">
            <summary>
            Gets a download
            </summary>
            <param name="DownloadID">Download identifier</param>
            <returns>Download</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.DownloadManager.DeleteDownload(System.Int32)">
            <summary>
            Deletes a download
            </summary>
            <param name="DownloadID">Download identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.DownloadManager.InsertDownload(System.Boolean,System.String,System.Byte[],System.String,System.String,System.Boolean)">
            <summary>
            Inserts a download
            </summary>
            <param name="UseDownloadURL">The value indicating whether DownloadURL property should be used</param>
            <param name="DownloadURL">The download URL</param>
            <param name="DownloadBinary">The download binary</param>
            <param name="ContentType">The mime-type of the download</param>
            <param name="Extension">The extension</param>
            <param name="IsNew">A value indicating whether the download is new</param>
            <returns>Download</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.DownloadManager.UpdateDownload(System.Int32,System.Boolean,System.String,System.Byte[],System.String,System.String,System.Boolean)">
            <summary>
            Updates the download
            </summary>
            <param name="DownloadID">The download identifier</param>
            <param name="UseDownloadURL">The value indicating whether DownloadURL property should be used</param>
            <param name="DownloadURL">The download URL</param>
            <param name="DownloadBinary">The download binary</param>
            <param name="ContentType">The mime-type of the download</param>
            <param name="Extension">The extension</param>
            <param name="IsNew">A value indicating whether the download is new</param>
            <returns>Download</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.DownloadManager.GetDownloadBits(System.IO.Stream,System.Int32)">
            <summary>
            Gets the download binary array
            </summary>
            <param name="fs">File stream</param>
            <param name="size">Download size</param>
            <returns>Download binary array</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightAndCountryCollection">
            <summary>
            Represents a ShippingByWeightAndCountry collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Measures.MeasureDimensionCollection">
            <summary>
            Represents a measure dimension collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByTotal">
            <summary>
            Represents a ShippingByTotal
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByTotal.#ctor">
            <summary>
            Creates a new instance of the ShippingByTotal class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByTotal.ShippingByTotalID">
            <summary>
            Gets or sets the ShippingByTotal identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByTotal.ShippingMethodID">
            <summary>
            Gets or sets the shipping method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByTotal.From">
            <summary>
            Gets or sets the "from" value
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByTotal.To">
            <summary>
            Gets or sets the "to" value
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByTotal.UsePercentage">
            <summary>
            Gets or sets a value indicating whether to use percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByTotal.ShippingChargePercentage">
            <summary>
            Gets or sets the shipping charge percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByTotal.ShippingChargeAmount">
            <summary>
            Gets or sets the shipping charge amount
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByTotal.ShippingMethod">
            <summary>
            Gets the shipping method
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollAnswer">
            <summary>
            Represents a poll answer
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollAnswer.#ctor">
            <summary>
            Creates a new instance of the PollAnswer class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollAnswer.PollAnswerID">
            <summary>
            Gets or sets the poll answer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollAnswer.PollID">
            <summary>
            Gets or sets the poll identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollAnswer.Name">
            <summary>
            Gets or sets the poll answer name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollAnswer.Count">
            <summary>
            Gets or sets the current count
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollAnswer.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollAnswer.Poll">
            <summary>
            Gets the poll
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttribute">
            <summary>
            Represents a product attribute
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttribute.#ctor">
            <summary>
            Creates a new instance of the ProductAttribute class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttribute.ProductAttributeID">
            <summary>
            Gets or sets the product attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttribute.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttribute.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Security.BannedIpNetwork">
            <summary>
            Network IP address range implementation
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.BannedIpNetwork.#ctor">
            <summary>
            Default constructor. Creates a new instance of IpNetwork
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.BannedIpNetwork.ToString">
            <summary>
            Returns the IP range as a formatted string
            </summary>
            <returns></returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Security.BannedIpNetwork.BannedIpNetworkID">
            <summary>
            Gets or sets the IpAddress unique identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Security.BannedIpNetwork.StartAddress">
            <summary>
            Gets or sets the starting IP address in the range
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Security.BannedIpNetwork.EndAddress">
            <summary>
            Gets or sets the ending IP address in the range
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Security.BannedIpNetwork.Comment">
            <summary>
            Gets or sets a reason why the IP network was banned
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Security.BannedIpNetwork.IpException">
            <summary>
            Gets or sets a list of IP exceptions in the network
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Security.BannedIpNetwork.CreatedOn">
            <summary>
            Gets or sets when the IP address record was banned
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Security.BannedIpNetwork.UpdatedOn">
            <summary>
            Gets or sets when the banned IP address record was last updated
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Messages.LocalizedMessageTemplateCollection">
            <summary>
            Represents a localized message template collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Media.PictureTypeEnum">
            <summary>
            Represents a picture item type
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Media.PictureTypeEnum.Entity">
            <summary>
            Entities (produtcs, categories, manufacturers)
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Media.PictureTypeEnum.Avatar">
            <summary>
            Avatar
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.TopicManager">
            <summary>
            Message manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.TopicManager.DeleteTopic(System.Int32)">
            <summary>
            Deletes a topic
            </summary>
            <param name="TopicID">Topic identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.TopicManager.InsertTopic(System.String)">
            <summary>
            Inserts a topic
            </summary>
            <param name="Name">The name</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.TopicManager.UpdateTopic(System.Int32,System.String)">
            <summary>
            Updates the topic
            </summary>
            <param name="TopicID">The topic identifier</param>
            <param name="Name">The name</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.TopicManager.GetTopicByID(System.Int32)">
            <summary>
            Gets a topic by template identifier
            </summary>
            <param name="TopicID">topic identifier</param>
            <returns>topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.TopicManager.GetAllTopics">
            <summary>
            Gets all topics
            </summary>
            <returns>topic collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.TopicManager.GetLocalizedTopicByID(System.Int32)">
            <summary>
            Gets a localized topic by identifier
            </summary>
            <param name="LocalizedTopicID">Localized topic identifier</param>
            <returns>Localized topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.TopicManager.GetLocalizedTopic(System.Int32,System.Int32)">
            <summary>
            Gets a localized topic by parent TopicID and language identifier
            </summary>
            <param name="TopicID">The topic identifier</param>
            <param name="LanguageID">Language identifier</param>
            <returns>Localized topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.TopicManager.GetLocalizedTopic(System.String,System.Int32)">
            <summary>
            Gets a localized topic by name and language identifier
            </summary>
            <param name="Name">topic name</param>
            <param name="LanguageID">Language identifier</param>
            <returns>Localized topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.TopicManager.DeleteLocalizedTopic(System.Int32)">
            <summary>
            Deletes a localized topic
            </summary>
            <param name="LocalizedTopicID">topic identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.TopicManager.GetAllLocalizedTopics(System.String)">
            <summary>
            Gets all localized topics
            </summary>
            <param name="TopicName">topic name</param>
            <returns>Localized topic collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.TopicManager.InsertLocalizedTopic(System.Int32,System.Int32,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Inserts a localized topic
            </summary>
            <param name="TopicID">The topic identifier</param>
            <param name="LanguageID">The language identifier</param>
            <param name="Title">The title</param>
            <param name="Body">The body</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Localized topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.TopicManager.UpdateLocalizedTopic(System.Int32,System.Int32,System.Int32,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Updates the localized topic
            </summary>
            <param name="TopicLocalizedID">The localized topic identifier</param>
            <param name="TopicID">The topic identifier</param>
            <param name="LanguageID">The language identifier</param>
            <param name="Title">The title</param>
            <param name="Body">The body</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Localized topic</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum">
            <summary>
            Represents a forum
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum.#ctor">
            <summary>
            Creates a new instance of the Forum class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum.ForumID">
            <summary>
            Gets or sets the forum identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum.ForumGroupID">
            <summary>
            Gets or sets the forum group identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum.NumTopics">
            <summary>
            Gets or sets the number of topics
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum.NumPosts">
            <summary>
            Gets or sets the number of posts
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum.LastTopicID">
            <summary>
            Gets or sets the last topic identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum.LastPostID">
            <summary>
            Gets or sets the last post identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum.LastPostUserID">
            <summary>
            Gets or sets the last post user identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum.LastPostTime">
            <summary>
            Gets or sets the last post date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum.ForumGroup">
            <summary>
            Gets the forum group
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum.LastTopic">
            <summary>
            Gets the last topic
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum.LastPost">
            <summary>
            Gets the last post
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum.LastPostUser">
            <summary>
            Gets the last post user
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Templates.ProductTemplate">
            <summary>
            Represents a product template
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Templates.ProductTemplate.#ctor">
            <summary>
            Creates a new instance of the ProductTemplate class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Templates.ProductTemplate.ProductTemplateID">
            <summary>
            Gets or sets the product template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Templates.ProductTemplate.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Templates.ProductTemplate.TemplatePath">
            <summary>
            Gets or sets the template path
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Templates.ProductTemplate.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Templates.ProductTemplate.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Templates.ProductTemplate.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsCollection">
            <summary>
            Represents a news collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.News">
            <summary>
            Represents a news
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.News.#ctor">
            <summary>
            Creates a new instance of the News class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.News.NewsID">
            <summary>
            Gets or sets the news identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.News.LanguageID">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.News.Title">
            <summary>
            Gets or sets the news title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.News.Short">
            <summary>
            Gets or sets the short text
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.News.Full">
            <summary>
            Gets or sets the full text
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.News.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.News.AllowComments">
            <summary>
            Gets or sets a value indicating whether the entity allows comments
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.News.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.News.Language">
            <summary>
            Gets the language
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.News.NewsComments">
            <summary>
            Gets the news comments
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Templates.ManufacturerTemplateCollection">
            <summary>
            Represents a manufacturer template collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Templates.CategoryTemplateCollection">
            <summary>
            Represents a category temaplte collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Templates.CategoryTemplate">
            <summary>
            Represents a category template
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Templates.CategoryTemplate.#ctor">
            <summary>
            Creates a new instance of the CategoryTemplate class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Templates.CategoryTemplate.CategoryTemplateID">
            <summary>
            Gets or sets the category template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Templates.CategoryTemplate.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Templates.CategoryTemplate.TemplatePath">
            <summary>
            Gets or sets the template path
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Templates.CategoryTemplate.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Templates.CategoryTemplate.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Templates.CategoryTemplate.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.AddressCollection">
            <summary>
            Represents an address collection
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.AddressCollection.FindAddress(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Finds an address
            </summary>
            <param name="FirstName">First name</param>
            <param name="LastName">Last name</param>
            <param name="PhoneNumber">Phone number</param>
            <param name="Email">Email</param>
            <param name="FaxNumber">Fax number</param>
            <param name="Company">Company</param>
            <param name="Address1">Address 1</param>
            <param name="Address2">Address 2</param>
            <param name="City">City</param>
            <param name="StateProvinceID">State/province identifier</param>
            <param name="ZipPostalCode">Zip postal code</param>
            <param name="CountryID">Country identifier</param>
            <returns>Address</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingManager">
            <summary>
            Shipping manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingManager.IsFreeShipping(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer)">
            <summary>
            Gets a value indicating whether shipping is free
            </summary>
            <param name="Cart">Cart</param>
            <param name="customer">Customer</param>
            <returns>A value indicating whether shipping is free</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingManager.CreateShipmentPackage(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address)">
            <summary>
            Create shipment package from shopping cart
            </summary>
            <param name="Cart">Shopping cart</param>
            <param name="customer">Customer</param>
            <param name="ShippingAddress">Shipping address</param>
            <returns>Shipment package</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingManager.GetShoppingCartTotalWeigth(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart)">
            <summary>
            Gets shopping cart weight
            </summary>
            <param name="Cart">Cart</param>
            <returns>Shopping cart weight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingManager.GetShoppingCartShippingTotal(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart)">
            <summary>
            Gets shopping cart shipping total
            </summary>
            <param name="Cart">Cart</param>
            <returns>Shipping total</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingManager.GetShoppingCartShippingTotal(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart,System.String@)">
            <summary>
            Gets shopping cart shipping total
            </summary>
            <param name="Cart">Cart</param>
            <param name="Error">Error</param>
            <returns>Shipping total</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingManager.GetShoppingCartShippingTotal(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer)">
            <summary>
            Gets shopping cart shipping total
            </summary>
            <param name="Cart">Cart</param>
            <param name="customer">Customer</param>
            <returns>Shipping total</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingManager.GetShoppingCartShippingTotal(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.String@)">
            <summary>
            Gets shopping cart shipping total
            </summary>
            <param name="Cart">Cart</param>
            <param name="customer">Customer</param>
            <param name="Error">Error</param>
            <returns>Shipping total</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingManager.GetShoppingCartShippingTotal(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Boolean)">
            <summary>
            Gets shopping cart shipping total
            </summary>
            <param name="Cart">Cart</param>
            <param name="customer">Customer</param>
            <param name="includingTax">A value indicating whether calculated price should include tax</param>
            <returns>Shipping total</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingManager.GetShoppingCartShippingTotal(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Boolean,System.String@)">
            <summary>
            Gets shopping cart shipping total
            </summary>
            <param name="Cart">Cart</param>
            <param name="customer">Customer</param>
            <param name="includingTax">A value indicating whether calculated price should include tax</param>
            <param name="Error">Error</param>
            <returns>Shipping total</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingManager.ShoppingCartRequiresShipping(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart)">
            <summary>
            Indicates whether the shopping cart requires shipping
            </summary>
            <param name="Cart">Cart</param>
            <returns>True if the shopping cart requires shipping; otherwise, false.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingManager.GetShoppingCartAdditionalShippingCharge(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer)">
            <summary>
            Gets shopping cart additional shipping charge
            </summary>
            <param name="Cart">Cart</param>
            <param name="customer">Customer</param>
            <returns>Additional shipping charge</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingManager.GetShippingOptions(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address,System.String@)">
            <summary>
             Gets available shipping options
            </summary>
            <param name="Cart">Shopping cart</param>
            <param name="customer">Customer</param>
            <param name="ShippingAddress">Shipping address</param>
            <param name="Error">Error</param>
            <returns>Shipping options</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingManager.ActiveShippingRateComputationMethod">
            <summary>
            Gets or sets an active shipping rate computation method
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingManager.ShippingOrigin">
            <summary>
            Gets or sets a default shipping origin address
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Promo.Campaigns.CampaignManager">
            <summary>
            Message campaign manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Campaigns.CampaignManager.GetCampaignByID(System.Int32)">
            <summary>
            Gets a campaign by campaign identifier
            </summary>
            <param name="CampaignID">Campaign identifier</param>
            <returns>Message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Campaigns.CampaignManager.DeleteCampaign(System.Int32)">
            <summary>
            Deletes a campaign
            </summary>
            <param name="CampaignID">Campaign identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Campaigns.CampaignManager.GetAllCampaigns">
            <summary>
            Gets all campaigns
            </summary>
            <returns>Campaign collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Campaigns.CampaignManager.InsertCampaign(System.String,System.String,System.String,System.DateTime)">
            <summary>
            Inserts a campaign
            </summary>
            <param name="Name">The name</param>
            <param name="Subject">The subject</param>
            <param name="Body">The body</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Campaign</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Campaigns.CampaignManager.UpdateCampaign(System.Int32,System.String,System.String,System.String,System.DateTime)">
            <summary>
            Updates the campaign
            </summary>
            <param name="CampaignID">The campaign identifier</param>
            <param name="Name">The name</param>
            <param name="Subject">The subject</param>
            <param name="Body">The body</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Campaign</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Campaigns.CampaignManager.SendCampaign(System.Int32,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerCollection)">
            <summary>
            Sends a campaign to specified emails
            </summary>
            <param name="CampaignID">Campaign identifier</param>
            <param name="Customers">Customers</param>
            <returns>Total emails sent</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Campaigns.CampaignManager.SendCampaign(System.Int32,System.String)">
            <summary>
            Sends a campaign to specified email
            </summary>
            <param name="CampaignID">Campaign identifier</param>
            <param name="Email">Email</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeight">
            <summary>
            Represents a ShippingByWeight
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeight.#ctor">
            <summary>
            Creates a new instance of the ShippingByWeight class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeight.ShippingByWeightID">
            <summary>
            Gets or sets the ShippingByWeight identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeight.ShippingMethodID">
            <summary>
            Gets or sets the shipping method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeight.From">
            <summary>
            Gets or sets the "from" value
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeight.To">
            <summary>
            Gets or sets the "to" value
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeight.UsePercentage">
            <summary>
            Gets or sets a value indicating whether to use percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeight.ShippingChargePercentage">
            <summary>
            Gets or sets the shipping charge percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeight.ShippingChargeAmount">
            <summary>
            Gets or sets the shipping charge amount
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeight.ShippingMethod">
            <summary>
            Gets the shipping method
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Security.IpBlacklistManager">
            <summary>
            IP Blacklist manager implementation
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.IpBlacklistManager.IpAddressToLongBackwards(System.String)">
            <summary>
            This encodes the string representation of an IP address to a uint, but
            backwards so that it can be used to compare addresses. This function is
            used internally for comparison and is not valid for valid encoding of
            IP address information.
            </summary>
            <param name="ipAddress">A string representation of the IP address to convert</param>
            <returns>Returns a backwards uint representation of the string.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.IpBlacklistManager.GetBannedIpAddressById(System.Int32)">
            <summary>
            Gets an IP address by its ID
            </summary>
            <param name="ipAddressID">IP Address unique identifier</param>
            <returns>An IP address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.IpBlacklistManager.GetBannedIpAddressAll">
            <summary>
            Gets all IP addresses
            </summary>
            <returns>An IP address collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.IpBlacklistManager.InsertBannedIpAddress(System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Inserts an IP address
            </summary>
            <param name="address">IP address</param>
            <param name="comment">Reason why the IP was banned</param>
            <param name="createdOn">When the record was inserted</param>
            <param name="updatedOn">When the record was last updated</param>
            <returns>IP Address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.IpBlacklistManager.UpdateBannedIpAddress(System.Int32,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Updates an IP address
            </summary>
            <param name="ipAddressID">IP address unique identifier</param>
            <param name="address">IP address</param>
            <param name="comment">Reason why the IP was banned</param>
            <param name="createdOn">When the record was inserted</param>
            <param name="updatedOn">When the record was last updated</param>
            <returns>IP address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.IpBlacklistManager.DeleteBannedIpAddress(System.Int32)">
            <summary>
            Deletes an IP address by its ID
            </summary>
            <param name="ipAddressID">IP address unique identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.IpBlacklistManager.GetBannedIpNetworkById(System.Int32)">
            <summary>
            Gets an IP network by its ID
            </summary>
            <param name="bannedIpNetworkID">IP network unique identifier</param>
            <returns>IP network</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.IpBlacklistManager.GetBannedIpNetworkAll">
            <summary>
            Gets all IP networks
            </summary>
            <returns>IP network collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.IpBlacklistManager.InsertBannedIpNetwork(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Inserts an IP network
            </summary>
            <param name="startAddress">First IP address in the range</param>
            <param name="endAddress">Last IP address in the range </param>
            <param name="comment">Reason why the IP network was banned</param>
            <param name="ipException">Exception IPs in the range</param>
            <param name="createdOn">When the record was inserted</param>
            <param name="updatedOn">When the record was last updated</param>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.IpBlacklistManager.UpdateBannedIpNetwork(System.Int32,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Updates an IP network
            </summary>
            <param name="bannedIpNetwork">IP network unique identifier</param>
            <param name="startAddress">First IP address in the range</param>
            <param name="endAddress">Last IP address in the range</param>
            <param name="comment">Reason why the IP network was banned</param>
            <param name="ipException">Exception IPs in the range</param>
            <param name="createdOn">When the record was created</param>
            <param name="updatedOn">When the record was last updated</param>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.IpBlacklistManager.DeleteBannedIpNetwork(System.Int32)">
            <summary>
            Deletes an IP network
            </summary>
            <param name="bannedIpNetwork">IP network unique identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.IpBlacklistManager.IsIpAddressBanned(NopSolutions.NopCommerce.BusinessLogic.Security.BannedIpAddress)">
            <summary>
            Checks if an IP from the IpAddressCollection or the IpNetworkCollection is banned
            </summary>
            <param name="ipAddress">IP address</param>
            <returns>False or true</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.IpBlacklistManager.IsValidIp(System.String)">
            <summary>
            Check if the ip is valid.
            </summary>
            <param name="ipAddress">The string representation of an IP address</param>
            <returns>True if the IP is valid.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.IpBlacklistManager.AreEqual(System.String,System.String)">
            <summary>
            Compares two IP addresses for equality. 
            </summary>
            <param name="ipAddress1">The first IP to compare</param>
            <param name="ipAddress2">The second IP to compare</param>
            <returns>True if equal, false if not.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.IpBlacklistManager.IsGreater(System.String,System.String)">
            <summary>
            Compares two string representations of an Ip address to see if one
            is greater than the other
            </summary>
            <param name="toCompare">The IP address on the left hand side of the greater 
            than operator</param>
            <param name="compareAgainst">The Ip address on the right hand side of the 
            greater than operator</param>
            <returns>True if ToCompare is greater than CompareAgainst, else false</returns>       
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.IpBlacklistManager.IsLess(System.String,System.String)">
            <summary>
            Compares two string representations of an Ip address to see if one
            is less than the other
            </summary>
            <param name="toCompare">The IP address on the left hand side of the less 
            than operator</param>
            <param name="compareAgainst">The Ip address on the right hand side of the 
            less than operator</param>
            <returns>True if ToCompare is greater than CompareAgainst, else false</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.IpBlacklistManager.IsGreaterOrEqual(System.String,System.String)">
            <summary>
            Compares two string representations of an Ip address to see if one
            is greater than or equal to the other.
            </summary>
            <param name="toCompare">The IP address on the left hand side of the greater 
            than or equal operator</param>
            <param name="compareAgainst">The Ip address on the right hand side of the 
            greater than or equal operator</param>
            <returns>True if ToCompare is greater than or equal to CompareAgainst, else false</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.IpBlacklistManager.IsLessOrEqual(System.String,System.String)">
            <summary>
            Compares two string representations of an Ip address to see if one
            is less than or equal to the other.
            </summary>
            <param name="toCompare">The IP address on the left hand side of the less 
            than or equal operator</param>
            <param name="compareAgainst">The Ip address on the right hand side of the 
            less than or equal operator</param>
            <returns>True if ToCompare is greater than or equal to CompareAgainst, else false</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.IpBlacklistManager.LongToIpAddress(System.UInt32)">
            <summary>
            Converts a uint representation of an Ip address to a string.
            </summary>
            <param name="ipAddress">The IP address to convert</param>
            <returns>A string representation of the IP address.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.IpBlacklistManager.IpAddressToLong(System.String)">
            <summary>
            Converts a string representation of an IP address to a uint. This
            encoding is proper and can be used with other networking functions such
            as the System.Net.IPAddress class.
            </summary>
            <param name="ipAddress">The Ip address to convert.</param>
            <returns>Returns a uint representation of the IP address.</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Security.IpBlacklistManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountRequirementCollection">
            <summary>
            Represents a discount requirement collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Profile.DateTimeHelper">
            <summary>
            Represents a datetime helper
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.DateTimeHelper.FindTimeZoneById(System.String)">
            <summary>
            Retrieves a System.TimeZoneInfo object from the registry based on its identifier.
            </summary>
            <param name="id">The time zone identifier, which corresponds to the System.TimeZoneInfo.Id property.</param>
            <returns>A System.TimeZoneInfo object whose identifier is the value of the id parameter.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.DateTimeHelper.GetSystemTimeZones">
            <summary>
            Returns a sorted collection of all the time zones
            </summary>
            <returns>A read-only collection of System.TimeZoneInfo objects.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.DateTimeHelper.ConvertToUserTime(System.DateTime)">
            <summary>
            Converts the date and time to current user date and time
            </summary>
            <param name="dt">The date and time (respesents local system time or UTC time) to convert.</param>
            <returns>A DateTime value that represents time that corresponds to the dateTime parameter in customer time zone.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.DateTimeHelper.ConvertToUserTime(System.DateTime,System.TimeZoneInfo)">
            <summary>
            Converts the date and time to current user date and time
            </summary>
            <param name="dt">The date and time to convert.</param>
            <param name="sourceTimeZone">The time zone of dateTime.</param>
            <returns>A DateTime value that represents time that corresponds to the dateTime parameter in customer time zone.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.DateTimeHelper.ConvertToUtcTime(System.DateTime)">
            <summary>
            Converts the date and time to Coordinated Universal Time (UTC)
            </summary>
            <param name="dt">The date and time (respesents local system time or UTC time) to convert.</param>
            <returns>A DateTime value that represents the Coordinated Universal Time (UTC) that corresponds to the dateTime parameter. The DateTime value's Kind property is always set to DateTimeKind.Utc.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Profile.DateTimeHelper.ConvertToUtcTime(System.DateTime,System.TimeZoneInfo)">
            <summary>
            Converts the date and time to Coordinated Universal Time (UTC)
            </summary>
            <param name="dt">The date and time to convert.</param>
            <param name="sourceTimeZone">The time zone of dateTime.</param>
            <returns>A DateTime value that represents the Coordinated Universal Time (UTC) that corresponds to the dateTime parameter. The DateTime value's Kind property is always set to DateTimeKind.Utc.</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Profile.DateTimeHelper.DefaultStoreTimeZone">
            <summary>
            Gets or sets a default store time zone
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Profile.DateTimeHelper.CurrentTimeZone">
            <summary>
            Gets or sets the current user time zone
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Profile.DateTimeHelper.AllowCustomersToSetTimeZone">
            <summary>
            Gets or sets a value indicating whether customers are allowed to select theirs time zone
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.Topic">
            <summary>
            Represents a topic
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.Topic.#ctor">
            <summary>
            Creates a new instance of the Topic class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.Topic.TopicID">
            <summary>
            Gets or sets the topic identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.Topic.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeOption">
            <summary>
            Represents a specification attribute option
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeOption.#ctor">
            <summary>
            Creates a new instance of the SpecificationAttributeOption class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeOption.SpecificationAttributeOptionID">
            <summary>
            Gets or sets the specification attribute option identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeOption.SpecificationAttributeID">
            <summary>
            Gets or sets the specification attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeOption.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeOption.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeOption.SpecificationAttribute">
            <summary>
            Gets the specification attribute
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentMethodManager">
            <summary>
            Payment method manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentMethodManager.DeletePaymentMethod(System.Int32)">
            <summary>
            Deletes a payment method
            </summary>
            <param name="PaymentMethodID">Payment method identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentMethodManager.GetPaymentMethodByID(System.Int32)">
            <summary>
            Gets a payment method
            </summary>
            <param name="PaymentMethodID">Payment method identifier</param>
            <returns>Payment method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentMethodManager.GetPaymentMethodBySystemKeyword(System.String)">
            <summary>
            Gets a payment method
            </summary>
            <param name="SystemKeyword">Payment method system keyword</param>
            <returns>Payment method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentMethodManager.GetAllPaymentMethods">
            <summary>
            Gets all payment methods
            </summary>
            <returns>Payment method collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentMethodManager.InsertPaymentMethod(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Inserts a payment method
            </summary>
            <param name="Name">The name</param>
            <param name="VisibleName">The visible name</param>
            <param name="Description">The description</param>
            <param name="ConfigureTemplatePath">The configure template path</param>
            <param name="UserTemplatePath">The user template path</param>
            <param name="ClassName">The class name</param>
            <param name="SystemKeyword">The system keyword</param>
            <param name="IsActive">A value indicating whether the payment method is active</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Payment method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentMethodManager.UpdatePaymentMethod(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Updates the payment method
            </summary>
            <param name="PaymentMethodID">The payment method identifer</param>
            <param name="Name">The name</param>
            <param name="VisibleName">The visible name</param>
            <param name="Description">The description</param>
            <param name="ConfigureTemplatePath">The configure template path</param>
            <param name="UserTemplatePath">The user template path</param>
            <param name="ClassName">The class name</param>
            <param name="SystemKeyword">The system keyword</param>
            <param name="IsActive">A value indicating whether the payment method is active</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Payment method</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentMethodManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Directory.CountryManager">
            <summary>
            Country manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.CountryManager.DeleteCountry(System.Int32)">
            <summary>
            Deletes a country
            </summary>
            <param name="CountryID">Country identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.CountryManager.GetAllCountries">
            <summary>
            Gets all countries
            </summary>
            <returns>Country collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.CountryManager.GetAllCountriesForRegistration">
            <summary>
            Gets all countries that allow registration
            </summary>
            <returns>Country collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.CountryManager.GetAllCountriesForBilling">
            <summary>
            Gets all countries that allow billing
            </summary>
            <returns>Country collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.CountryManager.GetAllCountriesForShipping">
            <summary>
            Gets all countries that allow shipping
            </summary>
            <returns>Country collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.CountryManager.GetCountryByID(System.Int32)">
            <summary>
            Gets a country 
            </summary>
            <param name="CountryID">Country identifier</param>
            <returns>Country</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.CountryManager.GetCountryByTwoLetterISOCode(System.String)">
            <summary>
            Gets a country by two letter ISO code
            </summary>
            <param name="TwoLetterISOCode">Country two letter ISO code</param>
            <returns>Country</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.CountryManager.GetCountryByThreeLetterISOCode(System.String)">
            <summary>
            Gets a country by three letter ISO code
            </summary>
            <param name="ThreeLetterISOCode">Country three letter ISO code</param>
            <returns>Country</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.CountryManager.InsertCountry(System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Inserts a country
            </summary>
            <param name="Name">The name</param>
            <param name="AllowsRegistration">A value indicating whether registration is allowed to this country</param>
            <param name="AllowsBilling">A value indicating whether billing is allowed to this country</param>
            <param name="AllowsShipping">A value indicating whether shipping is allowed to this country</param>
            <param name="TwoLetterISOCode">The two letter ISO code</param>
            <param name="ThreeLetterISOCode">The three letter ISO code</param>
            <param name="NumericISOCode">The numeric ISO code</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Country</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.CountryManager.UpdateCountry(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Updates the country
            </summary>
            <param name="CountryID">The country identifier</param>
            <param name="Name">The name</param>
            <param name="AllowsRegistration">A value indicating whether registration is allowed to this country</param>
            <param name="AllowsBilling">A value indicating whether billing is allowed to this country</param>
            <param name="AllowsShipping">A value indicating whether shipping is allowed to this country</param>
            <param name="TwoLetterISOCode">The two letter ISO code</param>
            <param name="ThreeLetterISOCode">The three letter ISO code</param>
            <param name="NumericISOCode">The numeric ISO code</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Country</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.CountryManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.Product">
            <summary>
            Represents a product
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Product.#ctor">
            <summary>
            Creates a new instance of the Product class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.ProductID">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.ShortDescription">
            <summary>
            Gets or sets the short description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.FullDescription">
            <summary>
            Gets or sets the full description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.AdminComment">
            <summary>
            Gets or sets the admin comment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.ProductTypeID">
            <summary>
            Gets or sets the product type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.TemplateID">
            <summary>
            Gets or sets the template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.ShowOnHomePage">
            <summary>
            Gets or sets a value indicating whether to show the product on home page
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.MetaKeywords">
            <summary>
            Gets or sets the meta keywords
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.MetaDescription">
            <summary>
            Gets or sets the meta description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.MetaTitle">
            <summary>
            Gets or sets the meta title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.SEName">
            <summary>
            Gets or sets the search-engine name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.AllowCustomerReviews">
            <summary>
            Gets or sets a value indicating whether the product allows customer reviews
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.AllowCustomerRatings">
            <summary>
            Gets or sets a value indicating whether the product allows customer ratings
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.RatingSum">
            <summary>
            Gets or sets the rating sum
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.TotalRatingVotes">
            <summary>
            Gets or sets the total rating votes
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.CreatedOn">
            <summary>
            Gets or sets the date and time of product creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.UpdatedOn">
            <summary>
            Gets or sets the date and time of product update
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.ProductVariants">
            <summary>
            Gets the product variants
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.HasMultipleVariants">
            <summary>
            Indicates whether Product has more than one variant
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.ProductTemplate">
            <summary>
            Gets the product template
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.ProductType">
            <summary>
            Gets the product type
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.RelatedProducts">
            <summary>
            Gets the related products
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.ProductPictures">
            <summary>
            Gets the product pictures
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.ProductCategories">
            <summary>
            Gets the product categories
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.ProductManufacturers">
            <summary>
            Gets the product manufacturers
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.ProductReviews">
            <summary>
            Gets the product reviews
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.MinimalPriceProductVariant">
            <summary>
            Returns the product variant with minimal price
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Product.ProductPriceRange">
            <summary>
            Returns the price range for product variants
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerAttribute">
            <summary>
            Represents a customer attribute
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerAttribute.#ctor">
            <summary>
            Creates a new instance of the CustomerAttribute class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerAttribute.CustomerAttributeID">
            <summary>
            Gets or sets the customer attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerAttribute.CustomerID">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerAttribute.Key">
            <summary>
            Gets or sets the key
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerAttribute.Value">
            <summary>
            Gets or sets the value
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByTotalManager">
            <summary>
            "Shipping by total" manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByTotalManager.GetByID(System.Int32)">
            <summary>
            Get a ShippingByTotal
            </summary>
            <param name="ShippingByTotalID">ShippingByTotal identifier</param>
            <returns>ShippingByTotal</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByTotalManager.DeleteShippingByTotal(System.Int32)">
            <summary>
            Deletes a ShippingByTotal
            </summary>
            <param name="ShippingByTotalID">ShippingByTotal identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByTotalManager.GetAll">
            <summary>
            Gets all ShippingByTotals
            </summary>
            <returns>ShippingByTotal collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByTotalManager.InsertShippingByTotal(System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Inserts a ShippingByTotal
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="From">The "from" value</param>
            <param name="To">The "to" value</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="ShippingChargePercentage">The shipping charge percentage</param>
            <param name="ShippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByTotal</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByTotalManager.UpdateShippingByTotal(System.Int32,System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Updates the ShippingByTotal
            </summary>
            <param name="ShippingByTotalID">The ShippingByTotal identifier</param>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="From">The "from" value</param>
            <param name="To">The "to" value</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="ShippingChargePercentage">The shipping charge percentage</param>
            <param name="ShippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByTotal</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByTotalManager.GetAllByShippingMethodID(System.Int32)">
            <summary>
            Gets all ShippingByTotals by shipping method identifier
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <returns>ShippingByTotal collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeCollection">
            <summary>
            Represents a specification attribute collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.ProductSpecificationAttributeCollection">
            <summary>
            Represents a product specification attribute collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentStatusCollection">
            <summary>
            Represents a payment status collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Messages.QueuedEmail">
            <summary>
            Represents an email item
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.QueuedEmail.#ctor">
            <summary>
            Creates a new instance of the QueuedEmail class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.QueuedEmail.QueuedEmailID">
            <summary>
            Gets or sets the queued email identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.QueuedEmail.Priority">
            <summary>
            Gets or sets the priority
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.QueuedEmail.From">
            <summary>
            Gets or sets the From property
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.QueuedEmail.FromName">
            <summary>
            Gets or sets the FromName property
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.QueuedEmail.To">
            <summary>
            Gets or sets the To property
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.QueuedEmail.ToName">
            <summary>
            Gets or sets the ToName property
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.QueuedEmail.Cc">
            <summary>
            Gets or sets the Cc
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.QueuedEmail.Bcc">
            <summary>
            Gets or sets the Bcc
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.QueuedEmail.Subject">
            <summary>
            Gets or sets the subject
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.QueuedEmail.Body">
            <summary>
            Gets or sets the body
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.QueuedEmail.CreatedOn">
            <summary>
            Gets or sets the date and time of item creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.QueuedEmail.SendTries">
            <summary>
            Gets or sets the send tries
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.QueuedEmail.SentOn">
            <summary>
            Gets or sets the sent date and time
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.PricelistCollection">
            <summary>
            This object represents the properties and methods of a PricelistCollection.
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.TierPrice">
            <summary>
            Represents a tier price
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.TierPrice.#ctor">
            <summary>
            Creates a new instance of the TierPrice class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.TierPrice.TierPriceID">
            <summary>
            Gets or sets the tier price identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.TierPrice.ProductVariantID">
            <summary>
            Gets or sets the product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.TierPrice.Quantity">
            <summary>
            Gets or sets the quantity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.TierPrice.Price">
            <summary>
            Gets or sets the price
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.TierPrice.ProductVariant">
            <summary>
            Gets the product variant
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.TierPriceCollection">
            <summary>
            Represents a tier price collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Profile.CustomerNameFormatEnum">
            <summary>
            Represents the customer name fortatting enumeration
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Profile.CustomerNameFormatEnum.ShowEmails">
            <summary>
            Show emails
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Profile.CustomerNameFormatEnum.ShowUsernames">
            <summary>
            Show usernames
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Profile.CustomerNameFormatEnum.ShowFullNames">
            <summary>
            Show full names
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumGroupCollection">
            <summary>
            Represents a forum group collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Utils.Html.EditorTypeEnum">
            <summary>
            Represents an editor type
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Utils.Html.EditorTypeEnum.SimpleTextBox">
            <summary>
            SimpleTextBox
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Utils.Html.EditorTypeEnum.BBCodeEditor">
            <summary>
            BBCode Editor
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Utils.Html.EditorTypeEnum.HtmlEditor">
            <summary>
            Html Editor
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart">
            <summary>
            Represents a shopping cart
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingRateComputationMethod">
            <summary>
            Represents a shipping rate computation method
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingRateComputationMethod.#ctor">
            <summary>
            Creates a new instance of the ShippingRateComputationMethod class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingRateComputationMethod.ShippingRateComputationMethodID">
            <summary>
            Gets or sets the shipping rate computation method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingRateComputationMethod.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingRateComputationMethod.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingRateComputationMethod.ConfigureTemplatePath">
            <summary>
            Gets or sets the configure template path
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingRateComputationMethod.ClassName">
            <summary>
            Gets or sets the class name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingRateComputationMethod.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingRateComputationMethod.IsDefault">
            <summary>
            Gets or a value indicating whether the entity is default
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderProductVariant">
            <summary>
            Represents an order product variant
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderProductVariant.#ctor">
            <summary>
            Creates a new instance of the OrderProductVariant class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderProductVariant.OrderProductVariantID">
            <summary>
            Gets or sets the order product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderProductVariant.OrderID">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderProductVariant.ProductVariantID">
            <summary>
            Gets or sets the product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderProductVariant.UnitPriceInclTax">
            <summary>
            Gets or sets the unit price in primary store currency (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderProductVariant.UnitPriceExclTax">
            <summary>
            Gets or sets the unit price in primary store currency (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderProductVariant.PriceInclTax">
            <summary>
            Gets or sets the price in primary store currency (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderProductVariant.PriceExclTax">
            <summary>
            Gets or sets the price in primary store currency (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderProductVariant.UnitPriceInclTaxInCustomerCurrency">
            <summary>
            Gets or sets the unit price in customer currency (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderProductVariant.UnitPriceExclTaxInCustomerCurrency">
            <summary>
            Gets or sets the unit price in customer currency (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderProductVariant.PriceInclTaxInCustomerCurrency">
            <summary>
            Gets or sets the price in customer currency (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderProductVariant.PriceExclTaxInCustomerCurrency">
            <summary>
            Gets or sets the price in customer currency (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderProductVariant.AttributeDescription">
            <summary>
            Gets or sets the attribute description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderProductVariant.Quantity">
            <summary>
            Gets or sets the quantity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderProductVariant.DiscountAmountInclTax">
            <summary>
            Gets or sets the discount amount (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderProductVariant.DiscountAmountExclTax">
            <summary>
            Gets or sets the discount amount (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderProductVariant.DownloadCount">
            <summary>
            Gets or sets the download count
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderProductVariant.Order">
            <summary>
            Gets the order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderProductVariant.ProductVariant">
            <summary>
            Gets the product variant
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer">
            <summary>
            Represents a manufacturer
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer.#ctor">
            <summary>
            Creates a new instance of the Manufacturer class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer.ManufacturerID">
            <summary>
            Gets or sets the manufacturer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer.TemplateID">
            <summary>
            Gets or sets the template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer.MetaKeywords">
            <summary>
            Gets or sets the meta keywords
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer.MetaDescription">
            <summary>
            Gets or sets the meta description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer.MetaTitle">
            <summary>
            Gets or sets the meta title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer.SEName">
            <summary>
            Gets or sets the search-engine name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer.PictureID">
            <summary>
            Gets or sets the parent picture identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer.PageSize">
            <summary>
            Gets or sets the page size
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer.PriceRanges">
            <summary>
            Gets or sets the available price ranges
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer.ManufacturerTemplate">
            <summary>
            Gets the manufacturer template
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer.ProductManufacturers">
            <summary>
            Gets the products
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer.Picture">
            <summary>
            Gets the picture
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer.FeaturedProducts">
            <summary>
            Gets the featured products of the manufacturer
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Directory.CountryCollection">
            <summary>
            Represents a country collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Localization.LocaleStringResourceDictionary">
            <summary>
            Represents a locale string resource dictionary
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.BaseEntityDictionary`2">
            <summary>
            Provides a base class for entity dictionary
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Measures.MeasureManager">
            <summary>
            Measure dimension manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Measures.MeasureManager.GetMeasureDimensionByID(System.Int32)">
            <summary>
            Gets a measure dimension by identifier
            </summary>
            <param name="MeasureDimensionID">Measure dimension identifier</param>
            <returns>Measure dimension</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Measures.MeasureManager.GetAllMeasureDimensions">
            <summary>
            Gets all measure dimensions
            </summary>
            <returns>Measure dimension collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Measures.MeasureManager.GetMeasureWeightByID(System.Int32)">
            <summary>
            Gets a measure weight by identifier
            </summary>
            <param name="MeasureWeightID">Measure weight identifier</param>
            <returns>Measure weight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Measures.MeasureManager.GetAllMeasureWeights">
            <summary>
            Gets all measure weights
            </summary>
            <returns>Measure weight collection</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Measures.MeasureManager.BaseDimensionIn">
            <summary>
            Gets or sets the dimension that will be used as a default
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Measures.MeasureManager.BaseWeightIn">
            <summary>
            Gets or sets the weight that will be used as a default
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Measures.MeasureManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.ProductPicture">
            <summary>
            Represents a product picture mapping
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductPicture.#ctor">
            <summary>
            Creates a new instance of the ProductPicture class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductPicture.ProductPictureID">
            <summary>
            Gets or sets the ProductPicture identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductPicture.ProductID">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductPicture.PictureID">
            <summary>
            Gets or sets the picture identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductPicture.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductPicture.Picture">
            <summary>
            Gets the picture
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.ProductReview">
            <summary>
            Represents a product review
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductReview.#ctor">
            <summary>
            Creates a new instance of the ProductReview class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductReview.ProductReviewID">
            <summary>
            Gets or sets the product review identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductReview.ProductID">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductReview.CustomerID">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductReview.Title">
            <summary>
            Gets or sets the title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductReview.ReviewText">
            <summary>
            Gets or sets the review text
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductReview.Rating">
            <summary>
            Review rating
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductReview.HelpfulYesTotal">
            <summary>
            Review helpful votes total
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductReview.HelpfulNoTotal">
            <summary>
            Review not helpful votes total
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductReview.IsApproved">
            <summary>
            Gets or sets a value indicating whether the product review is approved
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductReview.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductReview.Product">
            <summary>
            Gets the product
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductReview.Customer">
            <summary>
            Gets the customer
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Security.BannedIpNetworkCollection">
            <summary>
            Represents an IP network collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Promo.Campaigns.Campaign">
            <summary>
            Represents a campaign
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Campaigns.Campaign.#ctor">
            <summary>
            Creates a new instance of the Campaign class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Campaigns.Campaign.CampaignID">
            <summary>
            Gets or sets the campaign identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Campaigns.Campaign.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Campaigns.Campaign.Subject">
            <summary>
            Gets or sets the subject
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Campaigns.Campaign.Body">
            <summary>
            Gets or sets the body
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Campaigns.Campaign.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Messages.SendQueuedMessagesTask">
            <summary>
            Represents a task for sending queued message 
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.SendQueuedMessagesTask.Execute(System.Xml.XmlNode)">
            <summary>
            Executes a task
            </summary>
            <param name="node">Xml node that represents a task description</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist">
            <summary>
            This object represents the properties and methods of a Pricelist.
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.#ctor">
            <summary>
            Ctor for Pricelist
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.replaceMessageTemplateTokens(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.Int32,System.Decimal)">
            <summary>
            Replaces a message template tokens
            </summary>
            <param name="productVariant">Product variant instance</param>
            <param name="Template">Template</param>
            <param name="LocalFormat">Localization Provider Short name (en-US, de-DE, etc.)</param>
            <param name="AdditionalKeys">Additional keys</param>
            <param name="AffiliateID">Affiliate identifier</param>
            <param name="Price">Price</param>
            <returns>New template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.getAdjustedPrice(System.Decimal,NopSolutions.NopCommerce.BusinessLogic.Products.PriceAdjustmentTypeEnum,System.Decimal)">
            <summary>
            Calculate a price adjustment according to adjustment type
            </summary>
            <param name="Price">Price to adjust</param>
            <param name="PriceAdjustmentType">The type of price adjustment calculation (e.g. absolute adjustment)</param>
            <param name="PriceAdjustment">The value for price adjustment calculation</param>
            <returns>Adjusted price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.CreatePricelist(System.String)">
            <summary>
            Creates price list
            </summary>
            <param name="CachePath">Cache path where cached price list can be stored</param>
            <returns>Created price list</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.GetListOfAllowedTokens">
            <summary>
            Gets list of allowed tokens
            </summary>
            <returns>List of allowed tokens</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.PricelistID">
            <summary>
            Gets or sets the pricelist identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.ExportModeID">
            <summary>
            Gets or sets the mode of list creation (Export all, assigned only, assigned only with special price)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.ExportTypeID">
            <summary>
            Gets or sets the export type
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.AffiliateID">
            <summary>
            Gets or sets the Affiliate connected to this pricelist (optional), links will be created with AffiliateID
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.DisplayName">
            <summary>
            Gets or sets the Displayedname
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.ShortName">
            <summary>
            Gets or sets the shortname to identify the pricelist
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.PricelistGuid">
            <summary>
            Gets or sets the unique identifier to get pricelist "anonymous"
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.CacheTime">
            <summary>
            Gets or sets the how long will the pricelist be in cached before new creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.FormatLocalization">
            <summary>
            Gets or sets the what localization will be used (numeric formats, etc.) en-US, de-DE etc.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.Description">
            <summary>
            Gets or sets the Displayed description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.AdminNotes">
            <summary>
            Gets or sets the Admin can put some notes here, not displayed in public
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.Header">
            <summary>
            Gets or sets the Headerline of the exported file (plain text)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.Body">
            <summary>
            Gets or sets the template for an exportet productvariant, uses delimiters and replacement strings
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.Footer">
            <summary>
            Gets or sets the Footer line of the exportet file (plain text)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.PriceAdjustmentTypeID">
            <summary>
            Gets or sets the type of price adjustment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.PriceAdjustment">
            <summary>
            Gets or sets the price will be adjusted by this amount (in accordance with PriceAdjustmentType)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.OverrideIndivAdjustment">
            <summary>
            Gets or sets the use individual adjustment, if available, or override
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.ExportMode">
            <summary>
            Gets the export mode
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.ExportType">
            <summary>
            Gets the log type
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Pricelist.PriceAdjustmentType">
            <summary>
            Gets the price adjustment type
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.PriceListExportModeEnum">
            <summary>
            Represents the mode, that defines which products will be selected
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Products.PriceListExportModeEnum.All">
            <summary>
            No filter, all products
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Products.PriceListExportModeEnum.AssignedProducts">
            <summary>
            Filter on assigned products only
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeOptionCollection">
            <summary>
            Represents a specification attribute option collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopicCollection">
            <summary>
            Represents a forum topic collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopicTypeEnum">
            <summary>
            Represents a forum topic type
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopicTypeEnum.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopicTypeEnum.Announcement">
            <summary>
            Announcement
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumSubscriptionCollection">
            <summary>
            Represents a forum subscription collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Warehouses.WarehouseCollection">
            <summary>
            Represents a warehouse collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.Setting">
            <summary>
            Represents a setting
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.Setting.#ctor">
            <summary>
            Creates a new instance of the Setting class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.Setting.SettingID">
            <summary>
            Gets or sets the setting identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.Setting.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.Setting.Value">
            <summary>
            Gets or sets the value
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Configuration.Settings.Setting.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariantCollection">
            <summary>
            Represents a product variant collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Templates.ProductTemplateCollection">
            <summary>
            Represents a product template collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.ProductCollection">
            <summary>
            Represents a product collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentMethod">
            <summary>
            Represents a payment method
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentMethod.#ctor">
            <summary>
            Creates a new instance of the PaymentMethod class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentMethod.PaymentMethodID">
            <summary>
            Gets or sets the payment method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentMethod.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentMethod.VisibleName">
            <summary>
            Gets or sets the visible name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentMethod.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentMethod.ConfigureTemplatePath">
            <summary>
            Gets or sets the configure template path
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentMethod.UserTemplatePath">
            <summary>
            Gets or sets the user template path
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentMethod.ClassName">
            <summary>
            Gets or sets the class name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentMethod.SystemKeyword">
            <summary>
            Gets or sets the system keyword
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentMethod.IsActive">
            <summary>
            Gets or sets a value indicating whether the payment method is active
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentMethod.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ManufacturerCollection">
            <summary>
            Represents a manufacturer collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Directory.CurrencyCollection">
            <summary>
            Represents a currency collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Payment.CreditCardTypeCollection">
            <summary>
            Represents a credit card type collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ImportManager">
            <summary>
            Import manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ImportManager.ImportResources(System.Int32,System.String)">
            <summary>
            Import locale resources
            </summary>
            <param name="LanguageID">Language identifier</param>
            <param name="content">Recources in XML format</param>
            <returns>Impotred resources count</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ImportManager.ImportCustomersFromXLS(System.String)">
            <summary>
            Import customer list from XLS file
            </summary>
            <param name="FilePath">Excel file path</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ImportManager.ImportProductsFromXLS(System.String)">
            <summary>
            Import products from XLS file
            </summary>
            <param name="FilePath">Excel file path</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Audit.SearchLogCollection">
            <summary>
            Represents a search log item collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxProviderCollection">
            <summary>
            Represents a tax provider collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxBasedOnEnum">
            <summary>
            Represents the tax based on enumeration
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxBasedOnEnum.BillingAddress">
            <summary>
            Billing address
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxBasedOnEnum.ShippingAddress">
            <summary>
            Shipping address
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxBasedOnEnum.DefaultAddress">
            <summary>
            Default address
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxBasedOnEnum.ShippingOrigin">
            <summary>
            Shipping origin address
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Tasks.Task">
            <summary>
            Task
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tasks.Task.#ctor">
            <summary>
            Ctor for Task
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tasks.Task.#ctor(System.Type,System.Xml.XmlNode)">
            <summary>
            Ctor for Task
            </summary>
            <param name="taskType">Task type</param>
            <param name="configNode">Config XML node</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tasks.Task.Execute">
            <summary>
            Executes the task
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tasks.Task.IsRunning">
            <summary>
            A value indicating whether a task is running
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tasks.Task.LastStarted">
            <summary>
            Datetime of the last start
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tasks.Task.LastEnd">
            <summary>
            Datetime of the last end
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tasks.Task.LastSuccess">
            <summary>
            Datetime of the last success
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tasks.Task.TaskType">
            <summary>
            A value indicating type of the task
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tasks.Task.StopOnError">
            <summary>
            A value indicating whether to stop task on error
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tasks.Task.Name">
            <summary>
            Get the task name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tasks.Task.Enabled">
            <summary>
            A value indicating whether the task is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Messages.QueuedEmailCollection">
            <summary>
            Represents an queued email collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Maintenance.MaintenanceManager">
            <summary>
            Maintenance manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Maintenance.MaintenanceManager.Reindex">
            <summary>
            Reindex tables
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.PrivateMessage">
            <summary>
            Represents a private message
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.PrivateMessage.#ctor">
            <summary>
            Creates a new instance of the PrivateMessage class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.PrivateMessage.PrivateMessageID">
            <summary>
            Gets or sets the private message identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.PrivateMessage.FromUserID">
            <summary>
            Gets or sets the user identifier who sent the message
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.PrivateMessage.ToUserID">
            <summary>
            Gets or sets the user identifier who should receive the message
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.PrivateMessage.Subject">
            <summary>
            Gets or sets the subject
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.PrivateMessage.Text">
            <summary>
            Gets or sets the text
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.PrivateMessage.IsRead">
            <summary>
            Gets or sets a value indivating whether message is read
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.PrivateMessage.IsDeletedByAuthor">
            <summary>
            Gets or sets a value indivating whether message is deleted by author
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.PrivateMessage.IsDeletedByRecipient">
            <summary>
            Gets or sets a value indivating whether message is deleted by recipient
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.PrivateMessage.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.PrivateMessage.FromUser">
            <summary>
            Gets the user who sent the message
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.PrivateMessage.ToUser">
            <summary>
            Gets the user who should receive the message
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Caching.NopCache">
            <summary>
            Represents a NopCache
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Caching.NopCache.#cctor">
            <summary>
            Creates a new instance of the NopCache class
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Caching.NopCache.#ctor">
            <summary>
            Creates a new instance of the NopCache class
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Caching.NopCache.Clear">
            <summary>
            Removes all keys and values from the cache
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Caching.NopCache.Get(System.String)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="key">The key of the value to get.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Caching.NopCache.Max(System.String,System.Object)">
            <summary>
            Adds the specified key and object to the cache.
            </summary>
            <param name="key">key</param>
            <param name="obj">object</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Caching.NopCache.Max(System.String,System.Object,System.Web.Caching.CacheDependency)">
            <summary>
            Adds the specified key and object to the cache.
            </summary>
            <param name="key">key</param>
            <param name="obj">object</param>
            <param name="dep">cache dependency</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Caching.NopCache.Remove(System.String)">
            <summary>
            Removes the value with the specified key from the cache
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Caching.NopCache.RemoveByPattern(System.String)">
            <summary>
            Removes items by pattern
            </summary>
            <param name="pattern">pattern</param>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Caching.NopCache.IsEnabled">
            <summary>
            Gets or sets a value indicating whether the cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Directory.StateProvince">
            <summary>
            Represents a state/province
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.StateProvince.#ctor">
            <summary>
            Creates a new instance of the StateProvince class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.StateProvince.StateProvinceID">
            <summary>
            Gets or sets the state/province identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.StateProvince.CountryID">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.StateProvince.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.StateProvince.Abbreviation">
            <summary>
            Gets or sets the abbreviation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.StateProvince.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.StateProvince.Country">
            <summary>
            Gets the country
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingMethodCollection">
            <summary>
            Represents a shipping method collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerSessionCollection">
            <summary>
            Represents a customer session collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Linq.ExtensionMethods">
            <summary>
            Extension methods
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxProviderManager">
            <summary>
            Tax provider manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxProviderManager.DeleteTaxProvider(System.Int32)">
            <summary>
            Deletes a tax provider
            </summary>
            <param name="TaxProviderID">Tax provider identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxProviderManager.GetTaxProviderByID(System.Int32)">
            <summary>
            Gets a tax provider
            </summary>
            <param name="TaxProviderID">Tax provider identifier</param>
            <returns>Tax provider</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxProviderManager.GetAllTaxProviders">
            <summary>
            Gets all tax providers
            </summary>
            <returns>Shipping rate computation method collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxProviderManager.InsertTaxProvider(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Inserts a tax provider
            </summary>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="ConfigureTemplatePath">The configure template path</param>
            <param name="ClassName">The class name</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Tax provider</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxProviderManager.UpdateTaxProvider(System.Int32,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Updates the tax provider
            </summary>
            <param name="TaxProviderID">The tax provider identifier</param>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="ConfigureTemplatePath">The configure template path</param>
            <param name="ClassName">The class name</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Tax provider</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxProviderManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByTotalCollection">
            <summary>
            Represents a ShippingByTotal collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountTypeCollection">
            <summary>
            Represents a discount type collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerRole">
            <summary>
            Represents a customer role
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerRole.#ctor">
            <summary>
            Creates a new instance of the CustomerRole class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerRole.CustomerRoleID">
            <summary>
            Gets or sets the customer role identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerRole.Name">
            <summary>
            Gets or sets the customer role name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerRole.FreeShipping">
            <summary>
            Gets or sets a value indicating whether the customer role is marked as free shiping
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerRole.TaxExempt">
            <summary>
            Gets or sets a value indicating whether the customer role is marked as tax exempt
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerRole.Active">
            <summary>
            Gets or sets a value indicating whether the customer role is active
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerRole.Deleted">
            <summary>
            Gets or sets a value indicating whether the customer role has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerRole.Customers">
            <summary>
            Gets the customers of the role
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttribute">
            <summary>
            Represents a specification attribute
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttribute.#ctor">
            <summary>
            Creates a new instance of the SpecificationAttribute class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttribute.SpecificationAttributeID">
            <summary>
            Gets or sets the specification attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttribute.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttribute.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingStatusEnum">
            <summary>
            Represents the shipping status enumeration (need to be synchronize with [Nop_ShippingStatus] table)
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingStatusEnum.ShippingNotRequired">
            <summary>
            Shipping not required
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingStatusEnum.NotYetShipped">
            <summary>
            Not yet shipped
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingStatusEnum.Shipped">
            <summary>
            Shipped
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.SEO.Sitemaps.UpdateFrequency">
            <summary>
            Represents a sitemap update frequency
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.SEO.Sitemaps.UpdateFrequency.always">
            <summary>
            Always
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.SEO.Sitemaps.UpdateFrequency.hourly">
            <summary>
            Hourly
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.SEO.Sitemaps.UpdateFrequency.daily">
            <summary>
            Daily
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.SEO.Sitemaps.UpdateFrequency.weekly">
            <summary>
            Weekly
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.SEO.Sitemaps.UpdateFrequency.monthly">
            <summary>
            Monthly
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.SEO.Sitemaps.UpdateFrequency.yearly">
            <summary>
            Yearly
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.SEO.Sitemaps.UpdateFrequency.never">
            <summary>
            Never
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.SEO.Sitemaps.SitemapGenerator">
            <summary>
            Represents a sitemap generator
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.SEO.Sitemaps.BaseSitemapGenerator">
            <summary>
            Represents a base sitemap generator
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.Sitemaps.BaseSitemapGenerator.GenerateUrlNodes">
            <summary>
            Method that is overridden, that handles creation of child urls.
            Use the method WriteUrlLocation() within this method.
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.Sitemaps.BaseSitemapGenerator.WriteUrlLocation(System.String,NopSolutions.NopCommerce.BusinessLogic.SEO.Sitemaps.UpdateFrequency,System.DateTime)">
            <summary>
            Writes the url location to the writer.
            </summary>
            <param name="url">Url of indexed location (don't put root url information in).</param>
            <param name="updateFrequency">Update frequency - always, hourly, daily, weekly, yearly, never.</param>
            <param name="lastUpdated">Date last updated.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.Sitemaps.BaseSitemapGenerator.Generate">
            <summary>
            This will build an xml sitemap for better index with search engines.
            See http://en.wikipedia.org/wiki/Sitemaps for more information.
            </summary>
            <returns>Sitemap.xml as string</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.Sitemaps.BaseSitemapGenerator.Generate(System.IO.Stream)">
            <summary>
            This will build an xml sitemap for better index with search engines.
            See http://en.wikipedia.org/wiki/Sitemaps for more information.
            </summary>
            <param name="stream">Stream of sitemap.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.Sitemaps.SitemapGenerator.GenerateUrlNodes">
            <summary>
            Method that is overridden, that handles creation of child urls.
            Use the method WriteUrlLocation() within this method.
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountRequirement">
            <summary>
            Represents a discount requirement
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountRequirement.#ctor">
            <summary>
            Creates a new instance of the DiscountRequirement class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountRequirement.DiscountRequirementID">
            <summary>
            Gets or sets the discount requirement identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountRequirement.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Maintenance.DatabaseMaintanceTask">
            <summary>
            Represents a task for sending queued message 
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Maintenance.DatabaseMaintanceTask.Execute(System.Xml.XmlNode)">
            <summary>
            Executes a task
            </summary>
            <param name="node">Xml node that represents a task description</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.IShippingRateComputationMethod">
            <summary>
            Provides an interface for creating shipping rate computation methods
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.IShippingRateComputationMethod.GetShippingOptions(NopSolutions.NopCommerce.BusinessLogic.Shipping.ShipmentPackage,System.String@)">
            <summary>
             Gets available shipping options
            </summary>
            <param name="ShipmentPackage">Shipment package</param>
            <param name="Error">Error</param>
            <returns>Shipping options</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.IShippingRateComputationMethod.GetFixedRate(NopSolutions.NopCommerce.BusinessLogic.Shipping.ShipmentPackage)">
            <summary>
            Gets fixed shipping rate (if shipping rate computation method allows it and the rate can be calculated before checkout).
            </summary>
            <param name="ShipmentPackage">Shipment package</param>
            <returns>Fixed shipping rate; or null if shipping rate could not be calculated before checkout</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxCategoryManager">
            <summary>
            Tax category manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxCategoryManager.DeleteTaxCategory(System.Int32)">
            <summary>
            Deletes a tax category
            </summary>
            <param name="TaxCategoryID">The tax category identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxCategoryManager.GetAllTaxCategories">
            <summary>
            Gets all tax categories
            </summary>
            <returns>Tax category collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxCategoryManager.GetTaxCategoryByID(System.Int32)">
            <summary>
            Gets a tax category
            </summary>
            <param name="TaxCategoryID">Tax category identifier</param>
            <returns>Tax category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxCategoryManager.InsertTaxCategory(System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a tax category
            </summary>
            <param name="Name">The name</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Tax category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxCategoryManager.UpdateTaxCategory(System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the tax category
            </summary>
            <param name="TaxCategoryID">The tax category identifier</param>
            <param name="Name">The name</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Tax category</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxCategoryManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager">
            <summary>
            Product manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.MarkProductAsDeleted(System.Int32)">
            <summary>
            Marks a product as deleted
            </summary>
            <param name="ProductID">Product identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetAllProducts">
            <summary>
            Gets all products
            </summary>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetAllProducts(System.Boolean)">
            <summary>
            Gets all products
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetAllProducts(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all products
            </summary>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="TotalRecords">Total records</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetAllProducts(System.Int32,System.Int32,System.Nullable{System.Boolean},System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all products
            </summary>
            <param name="CategoryID">Category identifier</param>
            <param name="ManufacturerID">Manufacturer identifier</param>
            <param name="FeaturedProducts">A value indicating whether loaded products are marked as featured (relates only to categories and manufacturers). 0 to load featured products only, 1 to load not featured products only, null to load all products</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="TotalRecords">Total records</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetAllProducts(System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all products
            </summary>
            <param name="Keywords">Keywords</param>
            <param name="SearchDescriptions">A value indicating whether to search in descriptions</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="TotalRecords">Total records</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetAllProducts(System.Int32,System.Int32,System.Nullable{System.Boolean},System.String,System.Boolean,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32},System.Int32@)">
            <summary>
            Gets all products
            </summary>
            <param name="CategoryID">Category identifier</param>
            <param name="ManufacturerID">Manufacturer identifier</param>
            <param name="FeaturedProducts">A value indicating whether loaded products are marked as featured (relates only to categories and manufacturers). 0 to load featured products only, 1 to load not featured products only, null to load all products</param>
            <param name="Keywords">Keywords</param>
            <param name="SearchDescriptions">A value indicating whether to search in descriptions</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="FilteredSpecs">Filtered product specification identifiers</param>
            <param name="TotalRecords">Total records</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetAllProducts(System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Int32,System.Int32,System.Collections.Generic.List{System.Int32},System.Int32@)">
            <summary>
            Gets all products
            </summary>
            <param name="CategoryID">Category identifier</param>
            <param name="ManufacturerID">Manufacturer identifier</param>
            <param name="FeaturedProducts">A value indicating whether loaded products are marked as featured (relates only to categories and manufacturers). 0 to load featured products only, 1 to load not featured products only, null to load all products</param>
            <param name="PriceMin">Minimum price</param>
            <param name="PriceMax">Maximum price</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="FilteredSpecs">Filtered product specification identifiers</param>
            <param name="TotalRecords">Total records</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetAllProducts(System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Boolean,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32},System.Int32@)">
            <summary>
            Gets all products
            </summary>
            <param name="CategoryID">Category identifier</param>
            <param name="ManufacturerID">Manufacturer identifier</param>
            <param name="FeaturedProducts">A value indicating whether loaded products are marked as featured (relates only to categories and manufacturers). 0 to load featured products only, 1 to load not featured products only, null to load all products</param>
            <param name="PriceMin">Minimum price</param>
            <param name="PriceMax">Maximum price</param>
            <param name="Keywords">Keywords</param>
            <param name="SearchDescriptions">A value indicating whether to search in descriptions</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="FilteredSpecs">Filtered product specification identifiers</param>
            <param name="TotalRecords">Total records</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetAllProductsDisplayedOnHomePage">
            <summary>
            Gets all products displayed on the home page
            </summary>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetProductByID(System.Int32)">
            <summary>
            Gets product
            </summary>
            <param name="ProductID">Product identifier</param>
            <returns>Product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.InsertProduct(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Inserts a product
            </summary>
            <param name="Name">The name</param>
            <param name="ShortDescription">The short description</param>
            <param name="FullDescription">The full description</param>
            <param name="AdminComment">The admin comment</param>
            <param name="ProductTypeID">The product type identifier</param>
            <param name="TemplateID">The template identifier</param>
            <param name="ShowOnHomePage">A value indicating whether to show the product on the home page</param>
            <param name="MetaKeywords">The meta keywords</param>
            <param name="MetaDescription">The meta description</param>
            <param name="MetaTitle">The meta title</param>
            <param name="SEName">The search-engine name</param>
            <param name="AllowCustomerReviews">A value indicating whether the product allows customer reviews</param>
            <param name="AllowCustomerRatings">A value indicating whether the product allows customer ratings</param>
            <param name="RatingSum">The rating sum</param>
            <param name="TotalRatingVotes">The total rating votes</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="CreatedOn">The date and time of product creation</param>
            <param name="UpdatedOn">The date and time of product update</param>
            <returns>Product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.UpdateProduct(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Updates the product
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="Name">The name</param>
            <param name="ShortDescription">The short description</param>
            <param name="FullDescription">The full description</param>
            <param name="AdminComment">The admin comment</param>
            <param name="ProductTypeID">The product type identifier</param>
            <param name="ShowOnHomePage">A value indicating whether to show the product on the home page</param>
            <param name="TemplateID">The template identifier</param>
            <param name="MetaKeywords">The meta keywords</param>
            <param name="MetaDescription">The meta description</param>
            <param name="MetaTitle">The meta title</param>
            <param name="SEName">The search-engine name</param>
            <param name="AllowCustomerReviews">A value indicating whether the product allows customer reviews</param>
            <param name="AllowCustomerRatings">A value indicating whether the product allows customer ratings</param>
            <param name="RatingSum">The rating sum</param>
            <param name="TotalRatingVotes">The total rating votes</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="CreatedOn">The date and time of product creation</param>
            <param name="UpdatedOn">The date and time of product update</param>
            <returns>Product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetProductsAlsoPurchasedByID(System.Int32)">
            <summary>
            Gets a list of products purchased by other customers who purchased the above
            </summary>
            <param name="ProductID">Product identifier</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetProductsAlsoPurchasedByID(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a list of products purchased by other customers who purchased the above
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="TotalRecords">Total records</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.SetProductRating(System.Int32,System.Int32)">
            <summary>
            Sets a product rating
            </summary>
            <param name="ProductID">Product identifer</param>
            <param name="Rating">Rating</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.ClearCompareProducts">
            <summary>
            Clears a "compare products" list
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetCompareProducts">
            <summary>
            Gets a "compare products" list
            </summary>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetCompareProductsIDs">
            <summary>
            Gets a "compare products" identifier list
            </summary>
            <returns>"compare products" identifier list</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.RemoveProductFromCompareList(System.Int32)">
            <summary>
            Removes a product from a "compare products" list
            </summary>
            <param name="ProductID">Product identifer</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.AddProductToCompareList(System.Int32)">
            <summary>
            Adds a product to a "compare products" list
            </summary>
            <param name="ProductID">Product identifer</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetRecentlyViewedProducts(System.Int32)">
            <summary>
            Gets a "recently viewed products" list
            </summary>
            <param name="Number">Number of products to load</param>
            <returns>"recently viewed products" list</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetRecentlyViewedProductsIDs">
            <summary>
            Gets a "recently viewed products" identifier list
            </summary>
            <returns>"recently viewed products" list</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetRecentlyViewedProductsIDs(System.Int32)">
            <summary>
            Gets a "recently viewed products" identifier list
            </summary>
            <param name="Number">Number of products to load</param>
            <returns>"recently viewed products" list</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.AddProductToRecentlyViewedList(System.Int32)">
            <summary>
            Adds a product to a recently viewed products list
            </summary>
            <param name="ProductID">Product identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetRecentlyAddedProducts(System.Int32)">
            <summary>
            Gets a recently added products list
            </summary>
            <param name="Number">Number of products to load</param>
            <returns>"recently added" product list</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.DirectAddToCartAllowed(System.Int32,System.Int32@)">
            <summary>
            Direct add to cart allowed
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="ProductVariantID">Default product variant identifier for adding to cart</param>
            <returns>A value indicating whether direct add to cart is allowed</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.DeleteProductPicture(System.Int32)">
            <summary>
            Deletes a product picture mapping
            </summary>
            <param name="ProductPictureID">Product picture mapping identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetProductPictureByID(System.Int32)">
            <summary>
            Gets a product picture mapping
            </summary>
            <param name="ProductPictureID">Product picture mapping identifier</param>
            <returns>Product picture mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.InsertProductPicture(System.Int32,System.Int32,System.Int32)">
            <summary>
            Inserts a product picture mapping
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="PictureID">Picture identifier</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product picture mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.UpdateProductPicture(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the product picture mapping
            </summary>
            <param name="ProductPictureID">Product picture mapping identifier</param>
            <param name="ProductID">Product identifier</param>
            <param name="PictureID">Picture identifier</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product picture mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetProductPicturesByProductID(System.Int32)">
            <summary>
            Gets all product picture mappings by product identifier
            </summary>
            <param name="ProductID">Product identifier</param>
            <returns>Product picture mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetProductReviewByID(System.Int32)">
            <summary>
            Gets a product review
            </summary>
            <param name="ProductReviewID">Product review identifier</param>
            <returns>Product review</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetProductReviewByProductID(System.Int32)">
            <summary>
            Gets a product review collection by product identifier
            </summary>
            <param name="ProductID">Product identifier</param>
            <returns>Product review collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.DeleteProductReview(System.Int32)">
            <summary>
            Deletes a product review
            </summary>
            <param name="ProductReviewID">Product review identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetAllProductReviews">
            <summary>
            Gets all product reviews
            </summary>
            <returns>Product review collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.InsertProductReview(System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.DateTime)">
            <summary>
            Inserts a product review
            </summary>
            <param name="ProductID">The product identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="Title">The review title</param>
            <param name="ReviewText">The review text</param>
            <param name="Rating">The review rating</param>
            <param name="HelpfulYesTotal">Review helpful votes total</param>
            <param name="HelpfulNoTotal">Review not helpful votes total</param>
            <param name="IsApproved">A value indicating whether the product review is approved</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Product review</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.InsertProductReview(System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.DateTime,System.Boolean)">
            <summary>
            Inserts a product review
            </summary>
            <param name="ProductID">The product identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="Title">The review title</param>
            <param name="ReviewText">The review text</param>
            <param name="Rating">The review rating</param>
            <param name="HelpfulYesTotal">Review helpful votes total</param>
            <param name="HelpfulNoTotal">Review not helpful votes total</param>
            <param name="IsApproved">A value indicating whether the product review is approved</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="notify">A value indicating whether to notify the store owner</param>
            <returns>Product review</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.UpdateProductReview(System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.DateTime)">
            <summary>
            Updates the product review
            </summary>
            <param name="ProductReviewID">The product review identifier</param>
            <param name="ProductID">The product identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="Title">The review title</param>
            <param name="ReviewText">The review text</param>
            <param name="Rating">The review rating</param>
            <param name="HelpfulYesTotal">Review helpful votes total</param>
            <param name="HelpfulNoTotal">Review not helpful votes total</param>
            <param name="IsApproved">A value indicating whether the product review is approved</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Product review</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.SetProductRatingHelpfulness(System.Int32,System.Boolean)">
            <summary>
            Sets a product rating helpfulness
            </summary>
            <param name="ProductReviewID">Product review identifer</param>
            <param name="WasHelpful">A value indicating whether the product review was helpful or not </param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetAllProductTypes">
            <summary>
            Gets all product types
            </summary>
            <returns>Product type collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetProductTypeByID(System.Int32)">
            <summary>
            Gets a product type
            </summary>
            <param name="ProductTypeID">Product type identifier</param>
            <returns>Product type</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.MarkProductVariantAsDeleted(System.Int32)">
            <summary>
            Marks a product variant as deleted
            </summary>
            <param name="ProductVariantID">Product variant identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.AdjustInventory(System.Int32,System.Boolean,System.Int32)">
            <summary>
            Adjusts inventory
            </summary>
            <param name="ProductVariantID">Product variant identifier</param>
            <param name="decrease">A value indicating whether to increase or descrease product variant stock quantity</param>
            <param name="Quantity">Quantity</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.RemoveProductVariantPicture(System.Int32)">
            <summary>
            Remove a product variant picture
            </summary>
            <param name="ProductVariantID">Product variant identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetLowStockProductVariants">
            <summary>
            Get low stock product variants
            </summary>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.RemoveProductVariantDownload(System.Int32)">
            <summary>
            Remove a product variant download
            </summary>
            <param name="ProductVariantID">Product variant identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.RemoveProductVariantSampleDownload(System.Int32)">
            <summary>
            Remove a product variant sample download
            </summary>
            <param name="ProductVariantID">Product variant identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetProductVariantByID(System.Int32)">
            <summary>
            Gets a product variant
            </summary>
            <param name="ProductVariantID">Product variant identifier</param>
            <returns>Product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.InsertProductVariant(System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Decimal,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Int32,NopSolutions.NopCommerce.BusinessLogic.Products.LowStockActivityEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a product variant
            </summary>
            <param name="ProductID">The product identifier</param>
            <param name="Name">The name</param>
            <param name="SKU">The SKU</param>
            <param name="Description">The description</param>
            <param name="AdminComment">The admin comment</param>
            <param name="ManufacturerPartNumber">The manufacturer part number</param>
            <param name="IsDownload">A value indicating whether the product variant is download</param>
            <param name="DownloadID">The download identifier</param>
            <param name="UnlimitedDownloads">The value indicating whether this downloadable product can be downloaded unlimited number of times</param>
            <param name="MaxNumberOfDownloads">The maximum number of downloads</param>
            <param name="HasSampleDownload">The value indicating whether the product variant has a sample download file</param>
            <param name="SampleDownloadID">The sample download identifier</param>
            <param name="IsShipEnabled">A value indicating whether the entity is ship enabled</param>
            <param name="IsFreeShipping">A value indicating whether the entity is free shipping</param>
            <param name="AdditionalShippingCharge">The additional shipping charge</param>
            <param name="IsTaxExempt">A value indicating whether the product variant is marked as tax exempt</param>
            <param name="TaxCategoryID">The tax category identifier</param>
            <param name="ManageInventory">The value indicating whether to manage inventory</param>
            <param name="StockQuantity">The stock quantity</param>
            <param name="MinStockQuantity">The minimum stock quantity</param>
            <param name="LowStockActivity">The low stock activity</param>
            <param name="NotifyAdminForQuantityBelow">The quantity when admin should be notified</param>
            <param name="OrderMinimumQuantity">The order minimum quantity</param>
            <param name="OrderMaximumQuantity">The order maximum quantity</param>
            <param name="WarehouseId">The warehouse identifier</param>
            <param name="DisableBuyButton">A value indicating whether to disable buy button</param>
            <param name="Price">The price</param>
            <param name="OldPrice">The old price</param>
            <param name="Weight">The weight</param>
            <param name="Length">The length</param>
            <param name="Width">The width</param>
            <param name="Height">The height</param>
            <param name="PictureID">The picture identifier</param>
            <param name="AvailableStartDateTime">The available start date and time</param>
            <param name="AvailableEndDateTime">The available end date and time</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.UpdateProductVariant(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Decimal,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Int32,NopSolutions.NopCommerce.BusinessLogic.Products.LowStockActivityEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the product variant
            </summary>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="ProductID">The product identifier</param>
            <param name="Name">The name</param>
            <param name="SKU">The SKU</param>
            <param name="Description">The description</param>
            <param name="AdminComment">The admin comment</param>
            <param name="ManufacturerPartNumber">The manufacturer part number</param>
            <param name="IsDownload">A value indicating whether the product variant is download</param>
            <param name="DownloadID">The download identifier</param>
            <param name="UnlimitedDownloads">The value indicating whether this downloadable product can be downloaded unlimited number of times</param>
            <param name="MaxNumberOfDownloads">The maximum number of downloads</param>
            <param name="HasSampleDownload">The value indicating whether the product variant has a sample download file</param>
            <param name="SampleDownloadID">The sample download identifier</param>
            <param name="IsShipEnabled">A value indicating whether the entity is ship enabled</param>
            <param name="IsFreeShipping">A value indicating whether the entity is free shipping</param>
            <param name="AdditionalShippingCharge">The additional shipping charge</param>
            <param name="IsTaxExempt">A value indicating whether the product variant is marked as tax exempt</param>
            <param name="TaxCategoryID">The tax category identifier</param>
            <param name="ManageInventory">The value indicating whether to manage inventory</param>
            <param name="StockQuantity">The stock quantity</param>
            <param name="MinStockQuantity">The minimum stock quantity</param>
            <param name="LowStockActivity">The low stock activity</param>
            <param name="NotifyAdminForQuantityBelow">The quantity when admin should be notified</param>
            <param name="OrderMinimumQuantity">The order minimum quantity</param>
            <param name="OrderMaximumQuantity">The order maximum quantity</param>
            <param name="WarehouseId">The warehouse identifier</param>
            <param name="DisableBuyButton">A value indicating whether to disable buy button</param>
            <param name="Price">The price</param>
            <param name="OldPrice">The old price</param>
            <param name="Weight">The weight</param>
            <param name="Length">The length</param>
            <param name="Width">The width</param>
            <param name="Height">The height</param>
            <param name="PictureID">The picture identifier</param>
            <param name="AvailableStartDateTime">The available start date and time</param>
            <param name="AvailableEndDateTime">The available end date and time</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetProductVariantsByProductID(System.Int32)">
            <summary>
            Gets product variants by product identifier
            </summary>
            <param name="ProductID">The product identifier</param>
            <returns>Product variant collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetProductVariantsByProductID(System.Int32,System.Boolean)">
            <summary>
            Gets product variants by product identifier
            </summary>
            <param name="ProductID">The product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product variant collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.DeleteRelatedProduct(System.Int32)">
            <summary>
            Deletes a related product
            </summary>
            <param name="RelatedProductID">Related product identifer</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetRelatedProductsByProductID1(System.Int32)">
            <summary>
            Gets a related product collection by product identifier
            </summary>
            <param name="ProductID1">The first product identifier</param>
            <returns>Related product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetRelatedProductByID(System.Int32)">
            <summary>
            Gets a related product
            </summary>
            <param name="RelatedProductID">Related product identifer</param>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.InsertRelatedProduct(System.Int32,System.Int32,System.Int32)">
            <summary>
            Inserts a related product
            </summary>
            <param name="ProductID1">The first product identifier</param>
            <param name="ProductID2">The second product identifier</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Related product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.UpdateRelatedProduct(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates a related product
            </summary>
            <param name="RelatedProductID">The related product identifier</param>
            <param name="ProductID1">The first product identifier</param>
            <param name="ProductID2">The second product identifier</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Related product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetProductVariantsByPricelistID(System.Int32)">
            <summary>
            Gets all product variants directly assigned to a pricelist
            </summary>
            <param name="PricelistID"></param>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.DeletePricelist(System.Int32)">
            <summary>
            Deletes a Pricelist
            </summary>
            <param name="PricelistID">The PricelistID of the item to be deleted</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetAllPricelists">
            <summary>
            Gets a collection of all available pricelists
            </summary>
            <returns>Collection of pricelists</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetPricelistByID(System.Int32)">
            <summary>
            Gets a Pricelist
            </summary>
            <param name="PricelistID">Pricelist identifier</param>
            <returns>Pricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetPricelistByGUID(System.String)">
            <summary>
            Gets a Pricelist
            </summary>
            <param name="PricelistGUID">Pricelist GUID</param>
            <returns>Pricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.InsertPricelist(NopSolutions.NopCommerce.BusinessLogic.Products.PriceListExportModeEnum,NopSolutions.NopCommerce.BusinessLogic.Products.PriceListExportTypeEnum,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,NopSolutions.NopCommerce.BusinessLogic.Products.PriceAdjustmentTypeEnum,System.Decimal,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Inserts a Pricelist
            </summary>
            <param name="ExportMode">Mode of list creation (Export all, assigned only, assigned only with special price)</param>
            <param name="ExportType">CSV or XML</param>
            <param name="AffiliateID">Affiliate connected to this pricelist (optional), links will be created with AffiliateID</param>
            <param name="DisplayName">Displayedname</param>
            <param name="ShortName">shortname to identify the pricelist</param>
            <param name="PricelistGuid">unique identifier to get pricelist "anonymous"</param>
            <param name="CacheTime">how long will the pricelist be in cached before new creation</param>
            <param name="FormatLocalization">what localization will be used (numeric formats, etc.) en-US, de-DE etc.</param>
            <param name="Description">Displayed description</param>
            <param name="AdminNotes">Admin can put some notes here, not displayed in public</param>
            <param name="Header">Headerline of the exported file (plain text)</param>
            <param name="Body">template for an exportet productvariant, uses delimiters and replacement strings</param>
            <param name="Footer">Footer line of the exportet file (plain text)</param>
            <param name="PriceAdjustmentType">type of price adjustment (if used) (relative or absolute)</param>
            <param name="PriceAdjustment">price will be adjusted by this amount (in accordance with PriceAdjustmentType)</param>
            <param name="OverrideIndivAdjustment">use individual adjustment, if available, or override</param>
            <param name="CreatedOn">when was this record originally created</param>
            <param name="UpdatedOn">last time this recordset was updated</param>
            <returns>Pricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.UpdatePricelist(System.Int32,NopSolutions.NopCommerce.BusinessLogic.Products.PriceListExportModeEnum,NopSolutions.NopCommerce.BusinessLogic.Products.PriceListExportTypeEnum,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,NopSolutions.NopCommerce.BusinessLogic.Products.PriceAdjustmentTypeEnum,System.Decimal,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Updates the Pricelist
            </summary>
            <param name="PricelistID">Unique Identifier</param>
            <param name="ExportMode">Mode of list creation (Export all, assigned only, assigned only with special price)</param>
            <param name="ExportType">CSV or XML</param>
            <param name="AffiliateID">Affiliate connected to this pricelist (optional), links will be created with AffiliateID</param>
            <param name="DisplayName">Displayedname</param>
            <param name="ShortName">shortname to identify the pricelist</param>
            <param name="PricelistGuid">unique identifier to get pricelist "anonymous"</param>
            <param name="CacheTime">how long will the pricelist be in cached before new creation</param>
            <param name="FormatLocalization">what localization will be used (numeric formats, etc.) en-US, de-DE etc.</param>
            <param name="Description">Displayed description</param>
            <param name="AdminNotes">Admin can put some notes here, not displayed in public</param>
            <param name="Header">Headerline of the exported file (plain text)</param>
            <param name="Body">template for an exportet productvariant, uses delimiters and replacement strings</param>
            <param name="Footer">Footer line of the exportet file (plain text)</param>
            <param name="PriceAdjustmentType">type of price adjustment (if used) (relative or absolute)</param>
            <param name="PriceAdjustment">price will be adjusted by this amount (in accordance with PriceAdjustmentType)</param>
            <param name="OverrideIndivAdjustment">use individual adjustment, if available, or override</param>
            <param name="CreatedOn">when was this record originally created</param>
            <param name="UpdatedOn">last time this recordset was updated</param>
            <returns>Pricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.DeleteProductVariantPricelist(System.Int32)">
            <summary>
            Deletes a ProductVariantPricelist
            </summary>
            <param name="ProductVariantPricelistID">ProductVariantPricelist identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetProductVariantPricelistByID(System.Int32)">
            <summary>
            Gets a ProductVariantPricelist
            </summary>
            <param name="ProductVariantPricelistID">ProductVariantPricelist identifier</param>
            <returns>ProductVariantPricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetProductVariantPricelist(System.Int32,System.Int32)">
            <summary>
            Gets ProductVariantPricelist
            </summary>
            <param name="ProductVariantID">ProductVariant identifier</param>
            <param name="PricelistID">Pricelist identifier</param>
            <returns>ProductVariantPricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.InsertProductVariantPricelist(System.Int32,System.Int32,NopSolutions.NopCommerce.BusinessLogic.Products.PriceAdjustmentTypeEnum,System.Decimal,System.DateTime)">
            <summary>
            Inserts a ProductVariantPricelist
            </summary>
            <param name="ProductVariantID">The product variant identifer</param>
            <param name="PricelistID">The pricelist identifier</param>
            <param name="PriceAdjustmentType">The type of price adjustment (if used) (relative or absolute)</param>
            <param name="PriceAdjustment">The price will be adjusted by this amount</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>ProductVariantPricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.UpdateProductVariantPricelist(System.Int32,System.Int32,System.Int32,NopSolutions.NopCommerce.BusinessLogic.Products.PriceAdjustmentTypeEnum,System.Decimal,System.DateTime)">
            <summary>
            Updates the ProductVariantPricelist
            </summary>
            <param name="ProductVariantPricelistID">The product variant pricelist identifier</param>
            <param name="ProductVariantID">The product variant identifer</param>
            <param name="PricelistID">The pricelist identifier</param>
            <param name="PriceAdjustmentType">The type of price adjustment (if used) (relative or absolute)</param>
            <param name="PriceAdjustment">The price will be adjusted by this amount</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>ProductVariantPricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetTierPriceByID(System.Int32)">
            <summary>
            Gets a tier price
            </summary>
            <param name="TierPriceID">Tier price identifier</param>
            <returns>Tier price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.GetTierPricesByProductVariantID(System.Int32)">
            <summary>
            Gets tier prices by product variant identifier
            </summary>
            <param name="ProductVariantID">Product variant identifier</param>
            <returns>Tier price collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.DeleteTierPrice(System.Int32)">
            <summary>
            Deletes a tier price
            </summary>
            <param name="TierPriceID">Tier price identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.InsertTierPrice(System.Int32,System.Int32,System.Decimal)">
            <summary>
            Inserts a tier price
            </summary>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="Quantity">The quantity</param>
            <param name="Price">The price</param>
            <returns>Tier price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.UpdateTierPrice(System.Int32,System.Int32,System.Int32,System.Decimal)">
            <summary>
            Updates the tier price
            </summary>
            <param name="TierPriceID">The tier price identifier</param>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="Quantity">The quantity</param>
            <param name="Price">The price</param>
            <returns>Tier price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.FormatProductReviewText(System.String)">
            <summary>
            Formats the text
            </summary>
            <param name="Text">Text</param>
            <returns>Formatted text</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.FormatEmailAFriendText(System.String)">
            <summary>
            Formats the email a friend text
            </summary>
            <param name="Text">Text</param>
            <returns>Formatted text</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.RecentlyViewedProductsEnabled">
            <summary>
            Gets or sets a value indicating whether "Recently viewed products" feature is enabled
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.RecentlyAddedProductsEnabled">
            <summary>
            Gets or sets a value indicating whether "Recently added products" feature is enabled
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.CompareProductsEnabled">
            <summary>
            Gets or sets a value indicating whether "Compare products" feature is enabled
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.ProductsAlsoPurchasedEnabled">
            <summary>
            Gets or sets "List of products purchased by other customers who purchased the above" option is enable
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.ProductsAlsoPurchasedNumber">
            <summary>
            Gets or sets a number of products also purchased by other customers to display
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductManager.NotifyAboutNewProductReviews">
            <summary>
            Gets or sets a value indicating whether to notify about new product reviews
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Utils.PDFHelper">
            <summary>
            Represents a PDF helper
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Utils.PDFHelper.PrintOrderToPDF(NopSolutions.NopCommerce.BusinessLogic.Orders.Order,System.Int32,System.String)">
            <summary>
            Print an order to PDF
            </summary>
            <param name="order">Order</param>
            <param name="LanguageID">Language identifier</param>
            <param name="FilePath">File path</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer">
            <summary>
            Represents a customer
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.#ctor">
            <summary>
            Creates a new instance of the Customer class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.CustomerID">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.CustomerGUID">
            <summary>
            Gets or sets the customer GUID
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.Email">
            <summary>
            Gets or sets the email
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.Username">
            <summary>
            Gets or sets the username
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.PasswordHash">
            <summary>
            Gets or sets the password hash
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.SaltKey">
            <summary>
            Gets or sets the salt key
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.AffiliateID">
            <summary>
            Gets or sets the affiliate identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.BillingAddressID">
            <summary>
            Gets or sets the billing address identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.ShippingAddressID">
            <summary>
            Gets or sets the shipping address identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.LastPaymentMethodID">
            <summary>
            Gets or sets the last payment method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.LastAppliedCouponCode">
            <summary>
            Gets or sets the last applied coupon code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.LanguageID">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.CurrencyID">
            <summary>
            Gets or sets the currency identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.TaxDisplayTypeID">
            <summary>
            Gets or sets the tax display type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.IsTaxExempt">
            <summary>
            Gets or sets a value indicating whether the customer is tax exempt
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.IsAdmin">
            <summary>
            Gets or sets a value indicating whether the customer is administrator
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.IsGuest">
            <summary>
            Gets or sets a value indicating whether the customer is guest
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.IsForumModerator">
            <summary>
            Gets or sets a value indicating whether the customer is forum moderator
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.TotalForumPosts">
            <summary>
            Gets or sets the forum post count
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.Signature">
            <summary>
            Gets or sets the signature
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.AdminComment">
            <summary>
            Gets or sets the admin comment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.Active">
            <summary>
            Gets or sets a value indicating whether the customer is active
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.Deleted">
            <summary>
            Gets or sets a value indicating whether the customer has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.RegistrationDate">
            <summary>
            Gets or sets the date and time of customer registration
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.TimeZoneID">
            <summary>
            Gets or sets the time zone identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.AvatarID">
            <summary>
            Gets or sets the avatar identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.Affiliate">
            <summary>
            Gets the last billing address
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.CustomerAttributes">
            <summary>
            Gets the customer attributes
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.CustomerRoles">
            <summary>
            Gets the customer roles
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.BillingAddress">
            <summary>
            Gets the last billing address
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.ShippingAddress">
            <summary>
            Gets the last shipping address
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.LastPaymentMethod">
            <summary>
            Gets the last payment method
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.Language">
            <summary>
            Gets the language
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.Currency">
            <summary>
            Gets the currency
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.BillingAddresses">
            <summary>
            Gets the billing addresses
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.ShippingAddresses">
            <summary>
            Gets the shipping addresses
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.Orders">
            <summary>
            Gets the orders
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.LastShippingOption">
            <summary>
            Gets or sets the last shipping option
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.TaxDisplayType">
            <summary>
            Gets the tax display type
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.Avatar">
            <summary>
            Gets the avatar
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.FullName">
            <summary>
            Gets the customer full name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.Gender">
            <summary>
            Gets or sets the gender
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.FirstName">
            <summary>
            Gets or sets the first name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.LastName">
            <summary>
            Gets or sets the last name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.DateOfBirth">
            <summary>
            Gets or sets the date of birth
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.Company">
            <summary>
            Gets or sets the company
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.StreetAddress">
            <summary>
            Gets or sets the street address
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.StreetAddress2">
            <summary>
            Gets or sets the street address 2
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.ZipPostalCode">
            <summary>
            Gets or sets the zip/postal code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.City">
            <summary>
            Gets or sets the city
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.PhoneNumber">
            <summary>
            Gets or sets the phone number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.FaxNumber">
            <summary>
            Gets or sets the fax number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.CountryID">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.StateProvinceID">
            <summary>
            Gets or sets the state/province identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.ReceiveNewsletter">
            <summary>
            Gets or sets the value indivating whether customer is agree to receive newsletters
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.PasswordRecoveryToken">
            <summary>
            Gets or sets the password recovery token
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer.AccountActivationToken">
            <summary>
            Gets or sets the account activation token
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightManager">
            <summary>
            "ShippingByWeight" manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightManager.GetByID(System.Int32)">
            <summary>
            Gets a ShippingByWeight
            </summary>
            <param name="ShippingByWeightID">ShippingByWeight identifier</param>
            <returns>ShippingByWeight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightManager.DeleteShippingByWeight(System.Int32)">
            <summary>
            Deletes a ShippingByWeight
            </summary>
            <param name="ShippingByWeightID">ShippingByWeight identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightManager.GetAll">
            <summary>
            Gets all ShippingByWeights
            </summary>
            <returns>ShippingByWeight collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightManager.InsertShippingByWeight(System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Inserts a ShippingByWeight
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="From">The "from" value</param>
            <param name="To">The "to" value</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="ShippingChargePercentage">The shipping charge percentage</param>
            <param name="ShippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByWeight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightManager.UpdateShippingByWeight(System.Int32,System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Updates the ShippingByWeight
            </summary>
            <param name="ShippingByWeightID">The ShippingByWeight identifier</param>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="From">The "from" value</param>
            <param name="To">The "to" value</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="ShippingChargePercentage">The shipping charge percentage</param>
            <param name="ShippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByWeight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightManager.GetAllByShippingMethodID(System.Int32)">
            <summary>
            Gets all ShippingByWeights by shipping method identifier
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <returns>ShippingByWeight collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeManager">
            <summary>
            Product attribute manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeManager.DeleteProductAttribute(System.Int32)">
            <summary>
            Deletes a product attribute
            </summary>
            <param name="ProductAttributeID">Product attribute identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeManager.GetAllProductAttributes">
            <summary>
            Gets all product attributes
            </summary>
            <returns>Product attribute collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeManager.GetProductAttributeByID(System.Int32)">
            <summary>
            Gets a product attribute 
            </summary>
            <param name="ProductAttributeID">Product attribute identifier</param>
            <returns>Product attribute </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeManager.InsertProductAttribute(System.String,System.String)">
            <summary>
            Inserts a product attribute
            </summary>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <returns>Product attribute </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeManager.UpdateProductAttribute(System.Int32,System.String,System.String)">
            <summary>
            Updates the product attribute
            </summary>
            <param name="ProductAttributeID">Product attribute identifier</param>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <returns>Product attribute </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeManager.DeleteProductVariantAttribute(System.Int32)">
            <summary>
            Deletes a product variant attribute mapping
            </summary>
            <param name="ProductVariantAttributeID">Product variant attribute mapping identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeManager.GetProductVariantAttributesByProductVariantID(System.Int32)">
            <summary>
            Gets product variant attribute mappings by product identifier
            </summary>
            <param name="ProductVariantID">The product variant identifier</param>
            <returns>Product variant attribute mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeManager.GetProductVariantAttributeByID(System.Int32)">
            <summary>
            Gets a product variant attribute mapping
            </summary>
            <param name="ProductVariantAttributeID">Product variant attribute mapping identifier</param>
            <returns>Product variant attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeManager.InsertProductVariantAttribute(System.Int32,System.Int32,System.String,System.Boolean,NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.AttributeControlTypeEnum,System.Int32)">
            <summary>
            Inserts a product variant attribute mapping
            </summary>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="ProductAttributeID">The product attribute identifier</param>
            <param name="TextPrompt">The text prompt</param>
            <param name="IsRequired">The value indicating whether the entity is required</param>
            <param name="AttributeControlType">The attribute control type</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product variant attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeManager.UpdateProductVariantAttribute(System.Int32,System.Int32,System.Int32,System.String,System.Boolean,NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.AttributeControlTypeEnum,System.Int32)">
            <summary>
            Updates the product variant attribute mapping
            </summary>
            <param name="ProductVariantAttributeID">The product variant attribute mapping identifier</param>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="ProductAttributeID">The product attribute identifier</param>
            <param name="TextPrompt">The text prompt</param>
            <param name="IsRequired">The value indicating whether the entity is required</param>
            <param name="AttributeControlType">The attribute control type</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product variant attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeManager.DeleteProductVariantAttributeValue(System.Int32)">
            <summary>
            Deletes a product variant attribute value
            </summary>
            <param name="ProductVariantAttributeValueID">Product variant attribute value identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeManager.GetProductVariantAttributeValues(System.Int32)">
            <summary>
            Gets product variant attribute values by product identifier
            </summary>
            <param name="ProductVariantAttributeID">The product variant attribute mapping identifier</param>
            <returns>Product variant attribute mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeManager.GetProductVariantAttributeValueByID(System.Int32)">
            <summary>
            Gets a product variant attribute value
            </summary>
            <param name="ProductVariantAttributeValueID">Product variant attribute value identifier</param>
            <returns>Product variant attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeManager.InsertProductVariantAttributeValue(System.Int32,System.String,System.Decimal,System.Decimal,System.Boolean,System.Int32)">
            <summary>
            Inserts a product variant attribute value
            </summary>
            <param name="ProductVariantAttributeID">The product variant attribute mapping identifier</param>
            <param name="Name">The product variant attribute name</param>
            <param name="PriceAdjustment">The price adjustment</param>
            <param name="WeightAdjustment">The weight adjustment</param>
            <param name="IsPreSelected">The value indicating whether the value is pre-selected</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product variant attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeManager.UpdateProductVariantAttributeValue(System.Int32,System.Int32,System.String,System.Decimal,System.Decimal,System.Boolean,System.Int32)">
            <summary>
            Updates the product variant attribute value
            </summary>
            <param name="ProductVariantAttributeValueID">The product variant attribute value identifier</param>
            <param name="ProductVariantAttributeID">The product variant attribute mapping identifier</param>
            <param name="Name">The product variant attribute name</param>
            <param name="PriceAdjustment">The price adjustment</param>
            <param name="WeightAdjustment">The weight adjustment</param>
            <param name="IsPreSelected">The value indicating whether the value is pre-selected</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product variant attribute value</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.RelatedProduct">
            <summary>
            Represents a related product
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.RelatedProduct.#ctor">
            <summary>
            Creates a new instance of the RelatedProduct class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.RelatedProduct.RelatedProductID">
            <summary>
            Gets or sets the related product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.RelatedProduct.ProductID1">
            <summary>
            Gets or sets the first product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.RelatedProduct.ProductID2">
            <summary>
            Gets or sets the second product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.RelatedProduct.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.RelatedProduct.Product1">
            <summary>
            Gets the first product
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.RelatedProduct.Product2">
            <summary>
            Gets the second product
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Measures.MeasureDimension">
            <summary>
            Represents a measure dimension
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Measures.MeasureDimension.#ctor">
            <summary>
            Creates a new instance of the MeasureDimension class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Measures.MeasureDimension.MeasureDimensionID">
            <summary>
            Gets or sets the measure dimension identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Measures.MeasureDimension.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Measures.MeasureDimension.SystemKeyword">
            <summary>
            Gets or sets the system keyword
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Measures.MeasureDimension.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttribute">
            <summary>
            Represents a product variant attribute mapping
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttribute.#ctor">
            <summary>
            Creates a new instance of the ProductVariantAttribute class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttribute.ProductVariantAttributeID">
            <summary>
            Gets or sets the product variant attribute mapping identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttribute.ProductVariantID">
            <summary>
            Gets or sets the product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttribute.ProductAttributeID">
            <summary>
            Gets or sets the product attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttribute.TextPrompt">
            <summary>
            Gets or sets a value a text prompt
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttribute.IsRequired">
            <summary>
            Gets or sets a value indicating whether the entity is required
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttribute.AttributeControlTypeID">
            <summary>
            Gets or sets the attribute control type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttribute.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttribute.ProductVariant">
            <summary>
            Gets the product variant
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttribute.ProductAttribute">
            <summary>
            Gets the product attribute
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttribute.ProductVariantAttributeValues">
            <summary>
            Gets the product variant attribute values
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttribute.AttributeControlType">
            <summary>
            Gets the attribute control type
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttribute.ShouldHaveValues">
            <summary>
            A value indicating whether this product variant attribute should have values
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Tasks.TaskThread">
            <summary>
            Represents task thread
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tasks.TaskThread.Dispose">
            <summary>
            Disposes the instance
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tasks.TaskThread.InitTimer">
            <summary>
            Inits a timer
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tasks.TaskThread.AddTask(NopSolutions.NopCommerce.BusinessLogic.Tasks.Task)">
            <summary>
            Adds a task to the thread
            </summary>
            <param name="task">The task to be added</param>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tasks.TaskThread.Seconds">
            <summary>
            Gets the interval in seconds at which to run the tasks
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tasks.TaskThread.Started">
            <summary>
            Get a datetime when thread has been started
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tasks.TaskThread.IsRunning">
            <summary>
            Get a value indicating whether thread is running
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tasks.TaskThread.Tasks">
            <summary>
            Get a list of tasks
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tasks.TaskThread.Interval">
            <summary>
            Gets the interval at which to run the tasks
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentStatus">
            <summary>
            Represents a payment status
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentStatus.#ctor">
            <summary>
            Creates a new instance of the PaymentStatus class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentStatus.PaymentStatusID">
            <summary>
            Gets or sets the payment status identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentStatus.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartManager">
            <summary>
            Shopping cart manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartManager.DeleteShoppingCartItem(System.Int32,System.Boolean)">
            <summary>
            Deletes a shopping cart item
            </summary>
            <param name="ShoppingCartItemID">The shopping cart item identifier</param>
            <param name="ResetCheckoutData">A value indicating whether to reset checkout data</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartManager.GetShoppingCartByCustomerSessionGUID(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartTypeEnum,System.Guid)">
            <summary>
            Gets a shopping cart by customer session GUID
            </summary>
            <param name="ShoppingCartType">Shopping cart type</param>
            <param name="CustomerSessionGUID">The customer session identifier</param>
            <returns>Cart</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartManager.GetShoppingCartItemByID(System.Int32)">
            <summary>
            Gets a shopping cart item
            </summary>
            <param name="ShoppingCartItemID">The shopping cart item identifier</param>
            <returns>Shopping cart item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartManager.InsertShoppingCartItem(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartTypeEnum,System.Guid,System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a shopping cart item
            </summary>
            <param name="ShoppingCartType">The shopping cart type</param>
            <param name="CustomerSessionGUID">The customer session identifier</param>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="AttributesXML">The product variant attributes</param>
            <param name="Quantity">The quantity</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Shopping cart item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartManager.UpdateShoppingCartItem(System.Int32,NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartTypeEnum,System.Guid,System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the shopping cart item
            </summary>
            <param name="ShoppingCartItemID">The shopping cart item identifier</param>
            <param name="ShoppingCartType">The shopping cart type</param>
            <param name="CustomerSessionGUID">The customer session identifier</param>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="AttributesXML">The product variant attributes</param>
            <param name="Quantity">The quantity</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Shopping cart item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartManager.GetCurrentShoppingCart(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartTypeEnum)">
            <summary>
            Gets current user shopping cart
            </summary>
            <param name="ShoppingCartType">Shopping cart type</param>
            <returns>Cart</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartManager.GetCustomerShoppingCart(System.Int32,NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartTypeEnum)">
            <summary>
            Gets shopping cart
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="ShoppingCartType">Shopping cart type</param>
            <returns>Cart</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartManager.GetShoppingCartTotal(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer)">
            <summary>
            Gets shopping cart total
            </summary>
            <param name="Cart">Cart</param>
            <param name="customer">Customer</param>
            <returns>Shopping cart total;Null if shopping cart total couldn't be calculated now</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartManager.GetShoppingCartTotal(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart,System.Int32,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer)">
            <summary>
            Gets shopping cart total
            </summary>
            <param name="Cart">Cart</param>
            <param name="PaymentMethodID">Payment method identifier</param>
            <param name="customer">Customer</param>
            <returns>Shopping cart total;Null if shopping cart total couldn't be calculated now</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartManager.GetShoppingCartSubTotal(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer)">
            <summary>
            Gets shopping cart subtotal
            </summary>
            <param name="Cart">Cart</param>
            <param name="customer">Customer</param>
            <returns>Shopping cart subtotal</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartManager.GetShoppingCartSubTotal(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.String@)">
            <summary>
            Gets shopping cart subtotal
            </summary>
            <param name="Cart">Cart</param>
            <param name="customer">Customer</param>
            <param name="Error">Error</param>
            <returns>Shopping cart subtotal</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartManager.GetShoppingCartSubTotal(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Decimal@)">
            <summary>
            Gets shopping cart subtotal
            </summary>
            <param name="Cart">Cart</param>
            <param name="customer">Customer</param>
            <param name="SubTotalDiscount">Subtotal discount</param>
            <returns>Shopping cart subtotal</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartManager.GetShoppingCartSubTotal(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Decimal@,System.String@)">
            <summary>
            Gets shopping cart subtotal
            </summary>
            <param name="Cart">Cart</param>
            <param name="customer">Customer</param>
            <param name="SubTotalDiscount">Subtotal discount</param>
            <param name="Error">Error</param>
            <returns>Shopping cart subtotal</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartManager.GetShoppingCartSubTotal(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Decimal@,System.Boolean)">
            <summary>
            Gets shopping cart subtotal
            </summary>
            <param name="Cart">Cart</param>
            <param name="customer">Customer</param>
            <param name="SubTotalDiscount">Subtotal discount</param>
            <param name="includingTax">A value indicating whether calculated price should include tax</param>
            <returns>Shopping cart subtotal</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartManager.GetShoppingCartSubTotal(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Decimal@,System.Boolean,System.String@)">
            <summary>
            Gets shopping cart subtotal
            </summary>
            <param name="Cart">Cart</param>
            <param name="customer">Customer</param>
            <param name="SubTotalDiscount">Subtotal discount</param>
            <param name="includingTax">A value indicating whether calculated price should include tax</param>
            <param name="Error">Error</param>
            <returns>Shopping cart subtotal</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartManager.GetOrderDiscount(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Decimal)">
            <summary>
            Gets an order discount
            </summary>
            <param name="customer">Customer</param>
            <param name="orderSubTotal">Order subtotal</param>
            <returns>Order discount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartManager.GetShoppingCartItemWarnings(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartTypeEnum,System.Int32,System.String,System.Int32)">
            <summary>
            Validates whether this shopping cart item is allowed
            </summary>
            <param name="ShoppingCartType">Shopping cart type</param>
            <param name="ProductVariantID">Product variant identifier</param>
            <param name="SelectedAttributes">Selected attributes</param>
            <param name="Quantity">Quantity</param>
            <returns>Warnings</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartManager.AddToCart(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartTypeEnum,System.Int32,System.String,System.Int32)">
            <summary>
            Add a product variant to shopping cart
            </summary>
            <param name="ShoppingCartType">Shopping cart type</param>
            <param name="ProductVariantID">Product variant identifier</param>
            <param name="SelectedAttributes">Selected attributes</param>
            <param name="Quantity">Quantity</param>
            <returns>Warnings</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartManager.UpdateCart(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Updates the shopping cart item
            </summary>
            <param name="ShoppingCartItemID">Shopping cart item identifier</param>
            <param name="NewQuantity">New shopping cart item quantity</param>
            <param name="ResetCheckoutData">A value indicating whether to reset checkout data</param>
            <returns>Warnings</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager">
            <summary>
            Order manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.SetOrderStatus(System.Int32,NopSolutions.NopCommerce.BusinessLogic.Orders.OrderStatusEnum,System.Boolean)">
            <summary>
            Sets an order status
            </summary>
            <param name="OrderID">Order identifier</param>
            <param name="OS">New order status</param>
            <param name="notifyCustomer">True to notify customer</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.CheckOrderStatus(System.Int32)">
            <summary>
            Checks order status
            </summary>
            <param name="OrderID">Order identifier</param>
            <returns>Validated order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.GetOrderByID(System.Int32)">
            <summary>
            Gets an order
            </summary>
            <param name="OrderID">The order identifier</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.MarkOrderAsDeleted(System.Int32)">
            <summary>
            Marks an order as deleted
            </summary>
            <param name="OrderID">The order identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.SearchOrders(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{NopSolutions.NopCommerce.BusinessLogic.Orders.OrderStatusEnum},System.Nullable{NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentStatusEnum},System.Nullable{NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingStatusEnum})">
            <summary>
            Search orders
            </summary>
            <param name="StartTime">Order start time; null to load all orders</param>
            <param name="EndTime">Order end time; null to load all orders</param>
            <param name="CustomerEmail">Customer email</param>
            <param name="OS">Order status; null to load all orders</param>
            <param name="PS">Order payment status; null to load all orders</param>
            <param name="SS">Order shippment status; null to load all orders</param>
            <returns>Order collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.LoadAllOrders">
            <summary>
            Load all orders
            </summary>
            <returns>Order collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.OrderProductVariantReport(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{NopSolutions.NopCommerce.BusinessLogic.Orders.OrderStatusEnum},System.Nullable{NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentStatusEnum})">
            <summary>
            Get order product variant sales report
            </summary>
            <param name="StartTime">Order start time; null to load all</param>
            <param name="EndTime">Order end time; null to load all</param>
            <param name="OS">Order status; null to load all orders</param>
            <param name="PS">Order payment status; null to load all orders</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.BestSellersReport(System.Int32,System.Int32,System.Int32)">
            <summary>
            Get the bests sellers report
            </summary>
            <param name="LastDays">Last number of days</param>
            <param name="RecordsToReturn">Number of products to return</param>
            <param name="OrderBy">1 - order by total count, 2 - Order by total amount</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.OrderAverageReport(NopSolutions.NopCommerce.BusinessLogic.Orders.OrderStatusEnum)">
            <summary>
            Get order average report
            </summary>
            <param name="OS">Order status; null to load all orders</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.GetOrdersByCustomerID(System.Int32)">
            <summary>
            Gets all orders by customer identifier
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <returns>Order collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.GetOrderByAuthorizationTransactionIDAndPaymentMethodID(System.String,System.Int32)">
            <summary>
            Gets an order by authorization transaction identifier
            </summary>
            <param name="AuthorizationTransactionID">Authorization transaction identifier</param>
            <param name="PaymentMethodID">Payment method identifier</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.GetOrdersByAffiliateID(System.Int32)">
            <summary>
            Gets all orders by affiliate identifier
            </summary>
            <param name="AffiliateID">Affiliate identifier</param>
            <returns>Order collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.InsertOrder(System.Guid,System.Int32,System.Int32,NopSolutions.NopCommerce.BusinessLogic.Tax.TaxDisplayTypeEnum,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.Decimal,System.Int32,NopSolutions.NopCommerce.BusinessLogic.Orders.OrderStatusEnum,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentStatusEnum,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingStatusEnum,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.Int32,System.Nullable{System.DateTime},System.Boolean,System.DateTime)">
            <summary>
            Inserts an order
            </summary>
            <param name="OrderGUID">The order identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="CustomerLanguageID">The customer language identifier</param>
            <param name="CustomerTaxDisplayType">The customer tax display type</param>
            <param name="OrderSubtotalInclTax">The order subtotal (incl tax)</param>
            <param name="OrderSubtotalExclTax">The order subtotal (excl tax)</param>
            <param name="OrderShippingInclTax">The order shipping (incl tax)</param>
            <param name="OrderShippingExclTax">The order shipping (excl tax)</param>
            <param name="PaymentMethodAdditionalFeeInclTax">The payment method additional fee (incl tax)</param>
            <param name="PaymentMethodAdditionalFeeExclTax">The payment method additional fee (excl tax)</param>
            <param name="OrderTax">The order tax</param>
            <param name="OrderTotal">The order total</param>
            <param name="OrderDiscount">The order discount</param>
            <param name="OrderSubtotalInclTaxInCustomerCurrency">The order subtotal incl tax (customer currency)</param>
            <param name="OrderSubtotalExclTaxInCustomerCurrency">The order subtotal excl tax (customer currency)</param>
            <param name="OrderShippingInclTaxInCustomerCurrency">The order shipping incl tax (customer currency)</param>
            <param name="OrderShippingExclTaxInCustomerCurrency">The order shipping excl tax (customer currency)</param>
            <param name="PaymentMethodAdditionalFeeInclTaxInCustomerCurrency">The payment method additional fee incl tax (customer currency)</param>
            <param name="PaymentMethodAdditionalFeeExclTaxInCustomerCurrency">The payment method additional fee excl tax (customer currency)</param>
            <param name="OrderTaxInCustomerCurrency">The order tax (customer currency)</param>
            <param name="OrderTotalInCustomerCurrency">The order total (customer currency)</param>
            <param name="CustomerCurrencyCode">The customer currency code</param>
            <param name="OrderWeight">The order weight</param>
            <param name="AffiliateID">The affiliate identifier</param>
            <param name="OrderStatus">The order status</param>
            <param name="AllowStoringCreditCardNumber">The value indicating whether storing of credit card number is allowed</param>
            <param name="CardType">The card type</param>
            <param name="CardName">The card name</param>
            <param name="CardNumber">The card number</param>
            <param name="MaskedCreditCardNumber">The masked credit card number</param>
            <param name="CardCVV2">The card CVV2</param>
            <param name="CardExpirationMonth">The card expiration month</param>
            <param name="CardExpirationYear">The card expiration year</param>
            <param name="PaymentMethodID">The payment method identifier</param>
            <param name="PaymentMethodName">The payment method name</param>
            <param name="AuthorizationTransactionID">The authorization transaction ID</param>
            <param name="AuthorizationTransactionCode">The authorization transaction code</param>
            <param name="AuthorizationTransactionResult">The authorization transaction result</param>
            <param name="CaptureTransactionID">The capture transaction ID</param>
            <param name="CaptureTransactionResult">The capture transaction result</param>
            <param name="PurchaseOrderNumber">The purchase order number</param>
            <param name="PaymentStatus">The payment status</param>
            <param name="BillingFirstName">The billing first name</param>
            <param name="BillingLastName">The billing last name</param>
            <param name="BillingPhoneNumber">he billing phone number</param>
            <param name="BillingEmail">The billing email</param>
            <param name="BillingFaxNumber">The billing fax number</param>
            <param name="BillingCompany">The billing company</param>
            <param name="BillingAddress1">The billing address 1</param>
            <param name="BillingAddress2">The billing address 2</param>
            <param name="BillingCity">The billing city</param>
            <param name="BillingStateProvince">The billing state/province</param>
            <param name="BillingStateProvinceID">The billing state/province identifier</param>
            <param name="BillingZipPostalCode">The billing zip/postal code</param>
            <param name="BillingCountry">The billing country</param>
            <param name="BillingCountryID">The billing country identifier</param>
            <param name="ShippingStatus">The shipping status</param>
            <param name="ShippingFirstName">The shipping first name</param>
            <param name="ShippingLastName">The shipping last name</param>
            <param name="ShippingPhoneNumber">The shipping phone number</param>
            <param name="ShippingEmail">The shipping email</param>
            <param name="ShippingFaxNumber">The shipping fax number</param>
            <param name="ShippingCompany">The shipping  company</param>
            <param name="ShippingAddress1">The shipping address 1</param>
            <param name="ShippingAddress2">The shipping address 2</param>
            <param name="ShippingCity">The shipping city</param>
            <param name="ShippingStateProvince">The shipping state/province</param>
            <param name="ShippingStateProvinceID">The shipping state/province identifier</param>
            <param name="ShippingZipPostalCode">The shipping zip/postal code</param>
            <param name="ShippingCountry">The shipping country</param>
            <param name="ShippingCountryID">The shipping country identifier</param>
            <param name="ShippingMethod">The shipping method</param>
            <param name="ShippingRateComputationMethodID">The shipping rate computation method identifier</param>
            <param name="ShippedDate">The shipped date and time</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="CreatedOn">The date and time of order creation</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.UpdateOrder(System.Int32,System.Guid,System.Int32,System.Int32,NopSolutions.NopCommerce.BusinessLogic.Tax.TaxDisplayTypeEnum,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.Decimal,System.Int32,NopSolutions.NopCommerce.BusinessLogic.Orders.OrderStatusEnum,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentStatusEnum,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingStatusEnum,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.Int32,System.Nullable{System.DateTime},System.Boolean,System.DateTime)">
            <summary>
            Updates the order
            </summary>
            <param name="OrderID">he order identifier</param>
            <param name="OrderGUID">The order identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="CustomerLanguageID">The customer language identifier</param>
            <param name="CustomerTaxDisplayType">The customer tax display type</param>
            <param name="OrderSubtotalInclTax">The order subtotal (incl tax)</param>
            <param name="OrderSubtotalExclTax">The order subtotal (excl tax)</param>
            <param name="OrderShippingInclTax">The order shipping (incl tax)</param>
            <param name="OrderShippingExclTax">The order shipping (excl tax)</param>
            <param name="PaymentMethodAdditionalFeeInclTax">The payment method additional fee (incl tax)</param>
            <param name="PaymentMethodAdditionalFeeExclTax">The payment method additional fee (excl tax)</param>
            <param name="OrderTax">The order tax</param>
            <param name="OrderTotal">The order total</param>
            <param name="OrderDiscount">The order discount</param>
            <param name="OrderSubtotalInclTaxInCustomerCurrency">The order subtotal incl tax (customer currency)</param>
            <param name="OrderSubtotalExclTaxInCustomerCurrency">The order subtotal excl tax (customer currency)</param>
            <param name="OrderShippingInclTaxInCustomerCurrency">The order shipping incl tax (customer currency)</param>
            <param name="OrderShippingExclTaxInCustomerCurrency">The order shipping excl tax (customer currency)</param>
            <param name="PaymentMethodAdditionalFeeInclTaxInCustomerCurrency">The payment method additional fee incl tax (customer currency)</param>
            <param name="PaymentMethodAdditionalFeeExclTaxInCustomerCurrency">The payment method additional fee excl tax (customer currency)</param>
            <param name="OrderTaxInCustomerCurrency">The order tax (customer currency)</param>
            <param name="OrderTotalInCustomerCurrency">The order total (customer currency)</param>
            <param name="CustomerCurrencyCode">The customer currency code</param>
            <param name="OrderWeight">The order weight</param>
            <param name="AffiliateID">The affiliate identifier</param>
            <param name="OrderStatus">The order status</param>
            <param name="AllowStoringCreditCardNumber">The value indicating whether storing of credit card number is allowed</param>
            <param name="CardType">The card type</param>
            <param name="CardName">The card name</param>
            <param name="CardNumber">The card number</param>
            <param name="MaskedCreditCardNumber">The masked credit card number</param>
            <param name="CardCVV2">The card CVV2</param>
            <param name="CardExpirationMonth">The card expiration month</param>
            <param name="CardExpirationYear">The card expiration year</param>
            <param name="PaymentMethodID">The payment method identifier</param>
            <param name="PaymentMethodName">The payment method name</param>
            <param name="AuthorizationTransactionID">The authorization transaction ID</param>
            <param name="AuthorizationTransactionCode">The authorization transaction code</param>
            <param name="AuthorizationTransactionResult">The authorization transaction result</param>
            <param name="CaptureTransactionID">The capture transaction ID</param>
            <param name="CaptureTransactionResult">The capture transaction result</param>
            <param name="PurchaseOrderNumber">The purchase order number</param>
            <param name="PaymentStatus">The payment status</param>
            <param name="BillingFirstName">The billing first name</param>
            <param name="BillingLastName">The billing last name</param>
            <param name="BillingPhoneNumber">he billing phone number</param>
            <param name="BillingEmail">The billing email</param>
            <param name="BillingFaxNumber">The billing fax number</param>
            <param name="BillingCompany">The billing company</param>
            <param name="BillingAddress1">The billing address 1</param>
            <param name="BillingAddress2">The billing address 2</param>
            <param name="BillingCity">The billing city</param>
            <param name="BillingStateProvince">The billing state/province</param>
            <param name="BillingStateProvinceID">The billing state/province identifier</param>
            <param name="BillingZipPostalCode">The billing zip/postal code</param>
            <param name="BillingCountry">The billing country</param>
            <param name="BillingCountryID">The billing country identifier</param>
            <param name="ShippingStatus">The shipping status</param>
            <param name="ShippingFirstName">The shipping first name</param>
            <param name="ShippingLastName">The shipping last name</param>
            <param name="ShippingPhoneNumber">The shipping phone number</param>
            <param name="ShippingEmail">The shipping email</param>
            <param name="ShippingFaxNumber">The shipping fax number</param>
            <param name="ShippingCompany">The shipping  company</param>
            <param name="ShippingAddress1">The shipping address 1</param>
            <param name="ShippingAddress2">The shipping address 2</param>
            <param name="ShippingCity">The shipping city</param>
            <param name="ShippingStateProvince">The shipping state/province</param>
            <param name="ShippingStateProvinceID">The shipping state/province identifier</param>
            <param name="ShippingZipPostalCode">The shipping zip/postal code</param>
            <param name="ShippingCountry">The shipping country</param>
            <param name="ShippingCountryID">The shipping country identifier</param>
            <param name="ShippingMethod">The shipping method</param>
            <param name="ShippingRateComputationMethodID">The shipping rate computation method identifier</param>
            <param name="ShippedDate">The shipped date and time</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="CreatedOn">The date and time of order creation</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.PlaceOrder(NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentInfo,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Int32@)">
            <summary>
            Places an order
            </summary>
            <param name="paymentInfo">Payment info</param>
            <param name="customer">Customer</param>
            <param name="OrderID">Order identifier</param>
            <returns>The error status, or String.Empty if no errors</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.PlaceOrder(NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentInfo,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Guid,System.Int32@)">
            <summary>
            Places an order
            </summary>
            <param name="paymentInfo">Payment info</param>
            <param name="customer">Customer</param>
            <param name="OrderGuid">Order GUID to use</param>
            <param name="OrderID">Order identifier</param>
            <returns>The error status, or String.Empty if no errors</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.CanShip(NopSolutions.NopCommerce.BusinessLogic.Orders.Order)">
            <summary>
            Gets a value indicating whether shipping is allowed
            </summary>
            <param name="order">Order</param>
            <returns>A value indicating whether shipping is allowed</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.Ship(System.Int32,System.Boolean)">
            <summary>
            Ships order
            </summary>
            <param name="OrderID">Order identifier</param>
            <param name="notifyCustomer">True to notify customer</param>
            <returns>Updated order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.CanCancelOrder(NopSolutions.NopCommerce.BusinessLogic.Orders.Order)">
            <summary>
            Gets a value indicating whether cancel is allowed
            </summary>
            <param name="order">Order</param>
            <returns>A value indicating whether cancel is allowed</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.CancelOrder(System.Int32,System.Boolean)">
            <summary>
            Cancels order
            </summary>
            <param name="OrderID">Order identifier</param>
            <param name="notifyCustomer">True to notify customer</param>
            <returns>Cancelled order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.CanCapture(NopSolutions.NopCommerce.BusinessLogic.Orders.Order)">
            <summary>
            Gets a value indicating whether capture from admin panel is allowed
            </summary>
            <param name="order">Order</param>
            <returns>A value indicating whether capture from admin panel is allowed</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.Capture(System.Int32,System.String@)">
            <summary>
            Captures order (from admin panel)
            </summary>
            <param name="OrderID">Order identifier</param>
            <param name="Error">Error</param>
            <returns>Captured order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.MarkAsAuthorized(System.Int32)">
            <summary>
            Marks order as authorized
            </summary>
            <param name="OrderID">Order identifier</param>
            <returns>Authorized order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.CanMarkOrderAsPaid(NopSolutions.NopCommerce.BusinessLogic.Orders.Order)">
            <summary>
            Gets a value indicating whether order can be marked as paid
            </summary>
            <param name="order">Order</param>
            <returns>A value indicating whether order can be marked as paid</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.MarkOrderAsPaid(System.Int32)">
            <summary>
            Marks order as paid
            </summary>
            <param name="OrderID">Order identifier</param>
            <returns>Updated order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.AreDownloadsAllowed(NopSolutions.NopCommerce.BusinessLogic.Orders.Order)">
            <summary>
            Gets a value indicating whether downloads are allowed
            </summary>
            <param name="order">Order to check</param>
            <returns>True if downloads are allowed; otherwise, false.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.GetOrderNoteByID(System.Int32)">
            <summary>
            Gets an order note
            </summary>
            <param name="OrderNoteID">Order note identifier</param>
            <returns>Order note</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.GetOrderNoteByOrderID(System.Int32)">
            <summary>
            Gets an order notes by order identifier
            </summary>
            <param name="OrderID">Order identifier</param>
            <returns>Order note collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.DeleteOrderNote(System.Int32)">
            <summary>
            Deletes an order note
            </summary>
            <param name="OrderNoteID">Order note identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.InsertOrderNote(System.Int32,System.String,System.DateTime)">
            <summary>
            Inserts an order note
            </summary>
            <param name="OrderID">The order identifier</param>
            <param name="Note">The note</param>
            <param name="CreatedOn">The date and time of order note creation</param>
            <returns>Order note</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.UpdateOrderNote(System.Int32,System.Int32,System.String,System.DateTime)">
            <summary>
            Updates the order note
            </summary>
            <param name="OrderNoteID">The order note identifier</param>
            <param name="OrderID">The order identifier</param>
            <param name="Note">The note</param>
            <param name="CreatedOn">The date and time of order note creation</param>
            <returns>Order note</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.GetOrderProductVariantByID(System.Int32)">
            <summary>
            Gets an order product variant
            </summary>
            <param name="OrderProductVariantID">Order product variant identifier</param>
            <returns>Order product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.GetOrderProductVariantsByOrderID(System.Int32)">
            <summary>
            Gets an order product variants by the order identifier
            </summary>
            <param name="OrderID">The order identifier</param>
            <returns>Order product variant collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.InsertOrderProductVariant(System.Int32,System.Int32,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.Int32,System.Decimal,System.Decimal,System.Int32)">
            <summary>
            Inserts a order product variant
            </summary>
            <param name="OrderID">The order identifier</param>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="UnitPriceInclTax">The unit price in primary store currency (incl tax)</param>
            <param name="UnitPriceExclTax">The unit price in primary store currency (excl tax)</param>
            <param name="PriceInclTax">The price in primary store currency (incl tax)</param>
            <param name="PriceExclTax">The price in primary store currency (excl tax)</param>
            <param name="UnitPriceInclTaxInCustomerCurrency">The unit price in primary store currency (incl tax)</param>
            <param name="UnitPriceExclTaxInCustomerCurrency">The unit price in customer currency (excl tax)</param>
            <param name="PriceInclTaxInCustomerCurrency">The price in primary store currency (incl tax)</param>
            <param name="PriceExclTaxInCustomerCurrency">The price in customer currency (excl tax)</param>
            <param name="AttributeDescription">The attribute description</param>
            <param name="Quantity">The quantity</param>
            <param name="DiscountAmountInclTax">The discount amount (incl tax)</param>
            <param name="DiscountAmountExclTax">The discount amount (excl tax)</param>
            <param name="DownloadCount">The download count</param>
            <returns>Order product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.UpdateOrderProductVariant(System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.Int32,System.Decimal,System.Decimal,System.Int32)">
            <summary>
            Updates the order product variant
            </summary>
            <param name="OrderProductVariantID">The order product variant identifier</param>
            <param name="OrderID">The order identifier</param>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="UnitPriceInclTax">The unit price in primary store currency (incl tax)</param>
            <param name="UnitPriceExclTax">The unit price in primary store currency (excl tax)</param>
            <param name="PriceInclTax">The price in primary store currency (incl tax)</param>
            <param name="PriceExclTax">The price in primary store currency (excl tax)</param>
            <param name="UnitPriceInclTaxInCustomerCurrency">The unit price in primary store currency (incl tax)</param>
            <param name="UnitPriceExclTaxInCustomerCurrency">The unit price in customer currency (excl tax)</param>
            <param name="PriceInclTaxInCustomerCurrency">The price in primary store currency (incl tax)</param>
            <param name="PriceExclTaxInCustomerCurrency">The price in customer currency (excl tax)</param>
            <param name="AttributeDescription">The attribute description</param>
            <param name="Quantity">The quantity</param>
            <param name="DiscountAmountInclTax">The discount amount (incl tax)</param>
            <param name="DiscountAmountExclTax">The discount amount (excl tax)</param>
            <param name="DownloadCount">The downloads count</param>
            <returns>Order product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.IncreaseOrderProductDownloadCount(System.Int32)">
            <summary>
            Increase an order product variant download count
            </summary>
            <param name="OrderProductVariantID">Order product variant identifier</param>
            <returns>Order product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.GetOrderStatusName(System.Int32)">
            <summary>
            Gets an order status full name
            </summary>
            <param name="OrderStatusID">Order status identifier</param>
            <returns>Order status name</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.GetOrderStatusByID(System.Int32)">
            <summary>
            Gets an order status by ID
            </summary>
            <param name="OrderStatusID">Order status identifier</param>
            <returns>Order status</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.GetAllOrderStatuses">
            <summary>
            Gets all order statuses
            </summary>
            <returns>Order status collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.FormatOrderNoteText(System.String)">
            <summary>
            Formats the order note text
            </summary>
            <param name="Text">Text</param>
            <returns>Formatted text</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.GetOrderReport(System.Nullable{NopSolutions.NopCommerce.BusinessLogic.Orders.OrderStatusEnum},System.Nullable{NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentStatusEnum},System.Nullable{NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingStatusEnum})">
            <summary>
            Gets an order report
            </summary>
            <param name="OS">Order status; null to load all orders</param>
            <param name="PS">Order payment status; null to load all orders</param>
            <param name="SS">Order shippment status; null to load all orders</param>
            <returns>IDataReader</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Directory.LanguageManager">
            <summary>
            Language manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.LanguageManager.DeleteLanguage(System.Int32)">
            <summary>
            Deletes a language
            </summary>
            <param name="LanguageID">Language identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.LanguageManager.GetAllLanguages">
            <summary>
            Gets all languages
            </summary>
            <returns>Language collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.LanguageManager.GetAllLanguages(System.Boolean)">
            <summary>
            Gets all languages
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Language collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.LanguageManager.GetLanguageByID(System.Int32)">
            <summary>
            Gets a language
            </summary>
            <param name="LanguageID">Language identifier</param>
            <returns>Language</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.LanguageManager.InsertLanguage(System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Inserts a language
            </summary>
            <param name="Name">The name</param>
            <param name="LanguageCulture">The language culture</param>
            <param name="Published">A value indicating whether the language is published</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Language</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.LanguageManager.UpdateLanguage(System.Int32,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Updates a language
            </summary>
            <param name="LanguageID">Language identifier</param>
            <param name="Name">The name</param>
            <param name="LanguageCulture">The language culture</param>
            <param name="Published">A value indicating whether the language is published</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Language</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.LanguageManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager">
            <summary>
            Customer manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.DeleteAddress(System.Int32)">
            <summary>
            Deletes an address by address identifier 
            </summary>
            <param name="AddressID">Address identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.GetAddressByID(System.Int32)">
            <summary>
            Gets an address by address identifier
            </summary>
            <param name="AddressID">Address identifier</param>
            <returns>Address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.GetAddressesByCustomerID(System.Int32,System.Boolean)">
            <summary>
            Gets a collection of addresses by customer identifier
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="GetBillingAddresses">Gets or sets a value indicating whether the addresses are billing or shipping</param>
            <returns>A collection of addresses</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.InsertAddress(System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts an address
            </summary>
            <param name="CustomerID">The customer identifier</param>
            <param name="IsBillingAddress">A value indicating whether the address is billing or shipping</param>
            <param name="FirstName">The first name</param>
            <param name="LastName">The last name</param>
            <param name="PhoneNumber">The phone number</param>
            <param name="Email">The email</param>
            <param name="FaxNumber">The fax number</param>
            <param name="Company">The company</param>
            <param name="Address1">The address 1</param>
            <param name="Address2">The address 2</param>
            <param name="City">The city</param>
            <param name="StateProvinceID">The state/province identifier</param>
            <param name="ZipPostalCode">The zip/postal code</param>
            <param name="CountryID">The country identifier</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>An address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.UpdateAddress(System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the address
            </summary>
            <param name="AddressID">The address identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="IsBillingAddress">A value indicating whether the address is billing or shipping</param>
            <param name="FirstName">The first name</param>
            <param name="LastName">The last name</param>
            <param name="PhoneNumber">The phone number</param>
            <param name="Email">The email</param>
            <param name="FaxNumber">The fax number</param>
            <param name="Company">The company</param>
            <param name="Address1">The address 1</param>
            <param name="Address2">The address 2</param>
            <param name="City">The city</param>
            <param name="StateProvinceID">The state/province identifier</param>
            <param name="ZipPostalCode">The zip/postal code</param>
            <param name="CountryID">The country identifier</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>An address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.CanUseAddressAsBillingAddress(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address)">
            <summary>
            Gets a value indicating whether address can be used as billing address
            </summary>
            <param name="address">Address to validate</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.CanUseAddressAsShippingAddress(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address)">
            <summary>
            Gets a value indicating whether address can be used as shipping address
            </summary>
            <param name="address">Address to validate</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.ResetCheckoutData(System.Int32,System.Boolean)">
            <summary>
            Reset data required for checkout
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="ClearCouponCode">A value indicating whether to clear coupon code</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.SetDefaultBillingAddress(System.Int32,System.Int32)">
            <summary>
            Sets a default billing address
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="BillingAddressID">Billing address identifier</param>
            <returns>Customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.SetDefaultShippingAddress(System.Int32,System.Int32)">
            <summary>
            Sets a default shipping address
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="ShippingAddressID">Shipping address identifier</param>
            <returns>Customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.SetLastPaymentMethodID(System.Int32,System.Int32)">
            <summary>
            Sets a customer payment method
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="PaymentMethodID">Payment method identifier</param>
            <returns>Customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.SetTimeZoneID(System.Int32,System.String)">
            <summary>
            Sets a customer time zone
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="TimeZoneID">Time zone identifier</param>
            <returns>Customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.SetEmail(System.Int32,System.String)">
            <summary>
            Sets a customer email
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="NewEmail">New email</param>
            <returns>Customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.SetCustomerSignature(System.Int32,System.String)">
            <summary>
            Sets a customer sugnature
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="Signature">Signature</param>
            <returns>Customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.SetAffiliate(System.Int32,System.Int32)">
            <summary>
            Sets a customer's affiliate
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="AffiliateID">Affiliate identifier</param>
            <returns>Customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.SetCustomerAvatarID(System.Int32,System.Int32)">
            <summary>
            Removes customer avatar
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="AvatarID">Customer avatar identifier</param>
            <returns>Customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.ApplyCouponCode(System.String)">
            <summary>
            Applies a coupon code to a current customer
            </summary>
            <param name="CouponCode">Coupon code</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.ApplyCouponCode(System.Int32,System.String)">
            <summary>
            Applies a coupon code
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="CouponCode">Coupon code</param>
            <returns>Customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.GetAllCustomers">
            <summary>
            Gets all customers
            </summary>
            <returns>Customer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.GetAllCustomers(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all customers
            </summary>
            <param name="RegistrationFrom">Customer registration from; null to load all customers</param>
            <param name="RegistrationTo">Customer registration to; null to load all customers</param>
            <param name="Email">Customer Email</param>
            <param name="Username">Customer username</param>
            <param name="DontLoadGuestCustomers">A value indicating whether to don't load guest customers</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="TotalRecords">Total records</param>
            <returns>Customer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.GetAllCustomersForNewsLetters">
            <summary>
            Gets all customers for newsletters
            </summary>
            <returns>Customer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.GetAffiliatedCustomers(System.Int32)">
            <summary>
            Gets all customers by affiliate identifier
            </summary>
            <param name="AffiliateID">Affiliate identifier</param>
            <returns>Customer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.GetCustomersByCustomerRoleID(System.Int32)">
            <summary>
            Gets all customers by customer role id
            </summary>
            <param name="CustomerRoleID">Customer role identifier</param>
            <returns>Customer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.MarkCustomerAsDeleted(System.Int32)">
            <summary>
            Marks customer as deleted
            </summary>
            <param name="CustomerID">Customer identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.GetCustomerByEmail(System.String)">
            <summary>
            Gets a customer by email
            </summary>
            <param name="Email">Customer Email</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.GetCustomerByUsername(System.String)">
            <summary>
            Gets a customer by email
            </summary>
            <param name="Username">Customer username</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.GetCustomerByID(System.Int32)">
            <summary>
            Gets a customer
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.GetCustomerByGUID(System.Guid)">
            <summary>
            Gets a customer by GUID
            </summary>
            <param name="CustomerGUID">Customer GUID</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.AddCustomer(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Web.Security.MembershipCreateStatus@)">
            <summary>
            Adds a customer
            </summary>
            <param name="Email">The email</param>
            <param name="Username">The username</param>
            <param name="Password">The password</param>
            <param name="IsAdmin">A value indicating whether the customer is administrator</param>
            <param name="IsGuest">A value indicating whether the customer is guest</param>
            <param name="Active">A value indicating whether the customer is active</param>
            <param name="status">Status</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.AddCustomer(System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Web.Security.MembershipCreateStatus@)">
            <summary>
            Adds a customer
            </summary>
            <param name="Email">The email</param>
            <param name="Username">The username</param>
            <param name="Password">The password</param>
            <param name="AffiliateID">The affiliate identifier</param>
            <param name="IsAdmin">A value indicating whether the customer is administrator</param>
            <param name="IsGuest">A value indicating whether the customer is guest</param>
            <param name="Active">A value indicating whether the customer is active</param>
            <param name="status">Status</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.AddCustomer(System.Guid,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,NopSolutions.NopCommerce.BusinessLogic.Tax.TaxDisplayTypeEnum,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.DateTime,System.String,System.Int32,System.Web.Security.MembershipCreateStatus@)">
            <summary>
            Adds a customer
            </summary>
            <param name="CustomerGUID">The customer identifier</param>
            <param name="Email">The email</param>
            <param name="Username">The username</param>
            <param name="Password">The password</param>
            <param name="AffiliateID">The affiliate identifier</param>
            <param name="BillingAddressID">The billing address identifier</param>
            <param name="ShippingAddressID">The shipping address identifier</param>
            <param name="LastPaymentMethodID">The last payment method identifier</param>
            <param name="LastAppliedCouponCode">The last applied coupon code</param>
            <param name="LanguageID">The language identifier</param>
            <param name="CurrencyID">The currency identifier</param>
            <param name="TaxDisplayType">The tax display type</param>
            <param name="IsTaxExempt">A value indicating whether the customer is tax exempt</param>
            <param name="IsAdmin">A value indicating whether the customer is administrator</param>
            <param name="IsGuest">A value indicating whether the customer is guest</param>
            <param name="IsForumModerator">A value indicating whether the customer is forum moderator</param>
            <param name="TotalForumPosts">A forum post count</param>
            <param name="Signature">Signature</param>
            <param name="AdminComment">Admin comment</param>
            <param name="Active">A value indicating whether the customer is active</param>
            <param name="Deleted">A value indicating whether the customer has been deleted</param>
            <param name="RegistrationDate">The date and time of customer registration</param>
            <param name="TimeZoneID">The time zone identifier</param>
            <param name="AvatarID">The avatar identifier</param>
            <param name="status">Status</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.AddCustomerForced(System.Guid,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,NopSolutions.NopCommerce.BusinessLogic.Tax.TaxDisplayTypeEnum,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.DateTime,System.String,System.Int32)">
            <summary>
            Adds a customer withour any validations, welcome messages
            </summary>
            <param name="CustomerGUID">The customer identifier</param>
            <param name="Email">The email</param>
            <param name="Username">The username</param>
            <param name="PasswordHash">The password hash</param>
            <param name="SaltKey">The salk key</param>
            <param name="AffiliateID">The affiliate identifier</param>
            <param name="BillingAddressID">The billing address identifier</param>
            <param name="ShippingAddressID">The shipping address identifier</param>
            <param name="LastPaymentMethodID">The last payment method identifier</param>
            <param name="LastAppliedCouponCode">The last applied coupon code</param>
            <param name="LanguageID">The language identifier</param>
            <param name="CurrencyID">The currency identifier</param>
            <param name="TaxDisplayType">The tax display type</param>
            <param name="IsTaxExempt">A value indicating whether the customer is tax exempt</param>
            <param name="IsAdmin">A value indicating whether the customer is administrator</param>
            <param name="IsGuest">A value indicating whether the customer is guest</param>
            <param name="IsForumModerator">A value indicating whether the customer is forum moderator</param>
            <param name="TotalForumPosts">A forum post count</param>
            <param name="Signature">Signature</param>
            <param name="AdminComment">Admin comment</param>
            <param name="Active">A value indicating whether the customer is active</param>
            <param name="Deleted">A value indicating whether the customer has been deleted</param>
            <param name="RegistrationDate">The date and time of customer registration</param>
            <param name="TimeZoneID">The time zone identifier</param>
            <param name="AvatarID">The avatar identifier</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.UpdateCustomer(System.Int32,System.Guid,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,NopSolutions.NopCommerce.BusinessLogic.Tax.TaxDisplayTypeEnum,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.DateTime,System.String,System.Int32)">
            <summary>
            Updates the customer
            </summary>
            <param name="CustomerID">The customer identifier</param>
            <param name="CustomerGUID">The customer identifier</param>
            <param name="Email">The email</param>
            <param name="Username">The username</param>
            <param name="PasswordHash">The password hash</param>
            <param name="SaltKey">The salk key</param>
            <param name="AffiliateID">The affiliate identifier</param>
            <param name="BillingAddressID">The billing address identifier</param>
            <param name="ShippingAddressID">The shipping address identifier</param>
            <param name="LastPaymentMethodID">The last payment method identifier</param>
            <param name="LastAppliedCouponCode">The last applied coupon code</param>
            <param name="LanguageID">The language identifier</param>
            <param name="CurrencyID">The currency identifier</param>
            <param name="TaxDisplayType">The tax display type</param>
            <param name="IsTaxExempt">A value indicating whether the customer is tax exempt</param>
            <param name="IsAdmin">A value indicating whether the customer is administrator</param>
            <param name="IsGuest">A value indicating whether the customer is guest</param>
            <param name="IsForumModerator">A value indicating whether the customer is forum moderator</param>
            <param name="TotalForumPosts">A forum post count</param>
            <param name="Signature">Signature</param>
            <param name="AdminComment">Admin comment</param>
            <param name="Active">A value indicating whether the customer is active</param>
            <param name="Deleted">A value indicating whether the customer has been deleted</param>
            <param name="RegistrationDate">The date and time of customer registration</param>
            <param name="TimeZoneID">The time zone identifier</param>
            <param name="AvatarID">The avatar identifier</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.ModifyPassword(System.String,System.String,System.String)">
            <summary>
            Modifies password
            </summary>
            <param name="Email">Customer email</param>
            <param name="Oldpassword">Old password</param>
            <param name="Password">Password</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.ModifyPassword(System.String,System.String)">
            <summary>
            Modifies password
            </summary>
            <param name="Email">Customer email</param>
            <param name="NewPassword">New password</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.Activate(System.Guid)">
            <summary>
            Activates a customer
            </summary>
            <param name="CustomerGUID">Customer identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.Activate(System.Int32)">
            <summary>
            Activates a customer
            </summary>
            <param name="CustomerID">Customer identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.Activate(System.Int32,System.Boolean)">
            <summary>
            Activates a customer
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="SendCustomerWelcomeMessage">A value indivating whether to send customer welcome message</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.Deactivate(System.Guid)">
            <summary>
            Deactivates a customer
            </summary>
            <param name="CustomerGUID">Customer identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.Deactivate(System.Int32)">
            <summary>
            Deactivates a customer
            </summary>
            <param name="CustomerID">Customer identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.Login(System.String,System.String)">
            <summary>
            Login a customer
            </summary>
            <param name="Email">A customer email</param>
            <param name="Password">Password</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.Logout">
            <summary>
            Logout customer
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.CreatePasswordHash(System.String,System.String)">
            <summary>
            Creates a password hash
            </summary>
            <param name="Password">Password</param>
            <param name="Salt">Salt</param>
            <returns>Password hash</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.CreateSalt(System.Int32)">
            <summary>
            Creates a salt
            </summary>
            <param name="size">A salt size</param>
            <returns>A salt</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.DeleteCustomerAttribute(System.Int32)">
            <summary>
            Deletes a customer attribute
            </summary>
            <param name="CustomerAttributeID">Customer attribute identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.GetCustomerAttributeByID(System.Int32)">
            <summary>
            Gets a customer attribute
            </summary>
            <param name="CustomerAttributeID">Customer attribute identifier</param>
            <returns>A customer attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.GetCustomerAttributesByCustomerID(System.Int32)">
            <summary>
            Gets a collection of customer attributes by customer identifier
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <returns>Customer attributes</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.InsertCustomerAttribute(System.Int32,System.String,System.String)">
            <summary>
            Inserts a customer attribute
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="Key">An attribute key</param>
            <param name="Value">An attribute value</param>
            <returns>A customer attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.UpdateCustomerAttribute(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Updates the customer attribute
            </summary>
            <param name="CustomerAttributeID">Customer attribute identifier</param>
            <param name="CustomerID">Customer identifier</param>
            <param name="Key">An attribute key</param>
            <param name="Value">An attribute value</param>
            <returns>A customer attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.MarkCustomerRoleAsDeleted(System.Int32)">
            <summary>
            Marks customer role as deleted
            </summary>
            <param name="CustomerRoleID">Customer role identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.GetCustomerRoleByID(System.Int32)">
            <summary>
            Gets a customer role
            </summary>
            <param name="CustomerRoleID">Customer role identifier</param>
            <returns>Customer role</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.GetAllCustomerRoles">
            <summary>
            Gets all customer roles
            </summary>
            <returns>Customer role collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.GetCustomerRolesByCustomerID(System.Int32)">
            <summary>
            Gets customer roles by customer identifier
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <returns>Customer role collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.InsertCustomerRole(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Inserts a customer role
            </summary>
            <param name="Name">The customer role name</param>
            <param name="FreeShipping">A value indicating whether the customer role is marked as free shiping</param>
            <param name="TaxExempt">A value indicating whether the customer role is marked as tax exempt</param>
            <param name="Active">A value indicating whether the customer role is active</param>
            <param name="Deleted">A value indicating whether the customer role has been deleted</param>
            <returns>Customer role</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.UpdateCustomerRole(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Updates the customer role
            </summary>
            <param name="CustomerRoleID">The customer role identifier</param>
            <param name="Name">The customer role name</param>
            <param name="FreeShipping">A value indicating whether the customer role is marked as free shiping</param>
            <param name="TaxExempt">A value indicating whether the customer role is marked as tax exempt</param>
            <param name="Active">A value indicating whether the customer role is active</param>
            <param name="Deleted">A value indicating whether the customer role has been deleted</param>
            <returns>Customer role</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.AddCustomerToRole(System.Int32,System.Int32)">
            <summary>
            Adds a customer to role
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="CustomerRoleID">Customer role identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.RemoveCustomerFromRole(System.Int32,System.Int32)">
            <summary>
            Removes a customer from role
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="CustomerRoleID">Customer role identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.AddDiscountToCustomerRole(System.Int32,System.Int32)">
            <summary>
            Adds a discount to a customer role
            </summary>
            <param name="CustomerRoleID">Customer role identifier</param>
            <param name="DiscountID">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.RemoveDiscountFromCustomerRole(System.Int32,System.Int32)">
            <summary>
            Removes a discount from a customer role
            </summary>
            <param name="CustomerRoleID">Customer role identifier</param>
            <param name="DiscountID">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.GetCustomerRolesByDiscountID(System.Int32)">
            <summary>
            Gets a customer roles assigned to discount
            </summary>
            <param name="DiscountID">Discount identifier</param>
            <returns>Customer roles</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.GetCustomerSessionByGUID(System.Guid)">
            <summary>
            Gets a customer session
            </summary>
            <param name="CustomerSessionGUID">Customer session GUID</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.GetCustomerSessionByCustomerID(System.Int32)">
            <summary>
            Gets a customer session by customer identifier
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.DeleteCustomerSession(System.Guid)">
            <summary>
            Deletes a customer session
            </summary>
            <param name="CustomerSessionGUID">Customer session GUID</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.GetAllCustomerSessions">
            <summary>
            Gets all customer sessions
            </summary>
            <returns>Customer session collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.SaveCustomerSession(System.Guid,System.Int32,System.DateTime,System.Boolean)">
            <summary>
            Saves a customer session to the data storage if it exists or creates new one
            </summary>
            <param name="CustomerSessionGUID">Customer session GUID</param>
            <param name="CustomerID">Customer identifier</param>
            <param name="LastAccessed">The last accessed date and time</param>
            <param name="IsExpired">A value indicating whether the customer session is expired</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.InsertCustomerSession(System.Guid,System.Int32,System.DateTime,System.Boolean)">
            <summary>
            Inserts a customer session
            </summary>
            <param name="CustomerSessionGUID">Customer session GUID</param>
            <param name="CustomerID">Customer identifier</param>
            <param name="LastAccessed">The last accessed date and time</param>
            <param name="IsExpired">A value indicating whether the customer session is expired</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.UpdateCustomerSession(System.Guid,System.Int32,System.DateTime,System.Boolean)">
            <summary>
            Updates the customer session
            </summary>
            <param name="CustomerSessionGUID">Customer session GUID</param>
            <param name="CustomerID">Customer identifier</param>
            <param name="LastAccessed">The last accessed date and time</param>
            <param name="IsExpired">A value indicating whether the customer session is expired</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.FormatUserName(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer)">
            <summary>
            Formats customer name
            </summary>
            <param name="customer">Customer</param>
            <returns>Name</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.GetRegisteredCustomersReport(System.Int32)">
            <summary>
            Gets a report of customers registered in the last days
            </summary>
            <param name="days">Customers registered in the last days</param>
            <returns>Int</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.AnonymousCheckoutAllowed">
            <summary>
            Gets or sets a value indicating whether anonymous checkout allowed
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.RegistrationEmailValidation">
            <summary>
            Gets or sets a value indicating whether email validation is required during customer registration
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.UsernamesEnabled">
            <summary>
            Gets or sets a value indicating whether usernames are used instead of emails
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.CustomerNameFormatting">
            <summary>
            Customer name formatting
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.AllowCustomersToUploadAvatars">
            <summary>
            Gets or sets a value indicating whether customers are allowed to upload avatars.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.DefaultAvatarEnabled">
            <summary>
            Gets or sets a value indicating whether to display default user avatar.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.ShowCustomersLocation">
            <summary>
            Gets or sets a value indicating whether customers location is shown
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.ShowCustomersJoinDate">
            <summary>
            Gets or sets a value indicating whether to show customers join date
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.AllowViewingProfiles">
            <summary>
            Gets or sets a value indicating whether customers are allowed to view profiles of other customers
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.NewCustomerRegistrationDisabled">
            <summary>
            Gets or sets a value indicating whether new customer registration is not allowed
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerManager.AllowNavigationOnlyRegisteredCustomers">
            <summary>
            Gets or sets a value indicating whether to allow navigation only for registered users.
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxRate">
            <summary>
            Represents a tax rate
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxRate.#ctor">
            <summary>
            Creates a new instance of the TaxRate class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxRate.TaxRateID">
            <summary>
            Gets or sets the tax rate identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxRate.TaxCategoryID">
            <summary>
            Gets or sets the tax category identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxRate.CountryID">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxRate.StateProvinceID">
            <summary>
            Gets or sets the state/province identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxRate.Zip">
            <summary>
            Gets or sets the zip
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxRate.Percentage">
            <summary>
            Gets or sets the percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxRate.TaxCategory">
            <summary>
            Gets the tax category
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxRate.Country">
            <summary>
            Gets the country
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxRate.StateProvince">
            <summary>
            Gets the state/province
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Categories.ProductCategoryCollection">
            <summary>
            Represents a ProductCategory collection
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Categories.ProductCategoryCollection.FindProductCategory(System.Int32,System.Int32)">
            <summary>
            Returns a ProductCategory that has the specified values
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="CategoryID">Category identifier</param>
            <returns>A ProductCategory that has the specified values; otherwise null</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollAnswerCollection">
            <summary>
            Represents a poll answer collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogCommentCollection">
            <summary>
            Represents a blog comment collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Audit.SearchLog">
            <summary>
            Represents a search log
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Audit.SearchLog.#ctor">
            <summary>
            Creates a new instance of the SearchLog class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Audit.SearchLog.SearchLogID">
            <summary>
            Gets or sets the search log identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Audit.SearchLog.SearchTerm">
            <summary>
            Gets or sets the search term
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Audit.SearchLog.CustomerID">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Audit.SearchLog.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Audit.SearchLog.Customer">
            <summary>
            Gets the customer
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingStatusCollection">
            <summary>
            Represents a shipping status collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderStatusCollection">
            <summary>
            Represents an order status collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.PriceListExportTypeEnum">
            <summary>
            Represents the supported export types
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Products.PriceListExportTypeEnum.Csv">
            <summary>
            CSV (Text)
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeHelper">
            <summary>
            Product attribute helper
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeHelper.ParseProductVariantAttributeIDs(System.String)">
            <summary>
            Gets selected product variant attribute identifiers
            </summary>
            <param name="Attributes">Attributes</param>
            <returns>Selected product variant attribute identifiers</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeHelper.ParseProductVariantAttributes(System.String)">
            <summary>
            Gets selected product variant attributes
            </summary>
            <param name="Attributes">Attributes</param>
            <returns>Selected product variant attributes</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeHelper.ParseProductVariantAttributeValues(System.String)">
            <summary>
            Get product variant attribute values
            </summary>
            <param name="Attributes">Attributes</param>
            <returns>Product variant attribute values</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeHelper.ParseValues(System.String,System.Int32)">
            <summary>
            Gets selected product variant attribute value
            </summary>
            <param name="Attributes">Attributes</param>
            <param name="ProductVariantAttributeID">Product variant attribute identifier</param>
            <returns>Product variant attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeHelper.AddAttribute(System.String,NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttribute,System.String)">
            <summary>
            Adds an attribute
            </summary>
            <param name="Attributes">Attributes</param>
            <param name="pva">Product variant attribute</param>
            <param name="value">Value</param>
            <returns>Attributes</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeHelper.FormatAttributes(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,System.String)">
            <summary>
            Formats attributes
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="Attributes">Attributes</param>
            <returns>Attributes</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeHelper.FormatAttributes(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,System.String,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.String)">
            <summary>
            Formats attributes
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="Attributes">Attributes</param>
            <param name="customer">Customer</param>
            <param name="Serapator">Serapator</param>
            <returns>Attributes</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeHelper.FormatAttributes(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,System.String,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.String,System.Boolean)">
            <summary>
            Formats attributes
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="Attributes">Attributes</param>
            <param name="customer">Customer</param>
            <param name="Serapator">Serapator</param>
            <param name="HTMLEncode">A value indicating whether to encode (HTML) values</param>
            <returns>Attributes</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderAverageReportLine">
            <summary>
            Represents an order average report line
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderAverageReportLine.#ctor">
            <summary>
            Creates a new instance of the OrderAverageReportLine class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderAverageReportLine.OrderStatus">
            <summary>
            Gets or sets the order status
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderAverageReportLine.SumTodayOrders">
            <summary>
            Gets or sets the sum today total
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderAverageReportLine.CountTodayOrders">
            <summary>
            Gets or sets the today count
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderAverageReportLine.SumThisWeekOrders">
            <summary>
            Gets or sets the sum this week total
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderAverageReportLine.CountThisWeekOrders">
            <summary>
            Gets or sets the this week count
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderAverageReportLine.SumThisMonthOrders">
            <summary>
            Gets or sets the sum this month total
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderAverageReportLine.CountThisMonthOrders">
            <summary>
            Gets or sets the this month count
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderAverageReportLine.SumThisYearOrders">
            <summary>
            Gets or sets the sum this year total
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderAverageReportLine.CountThisYearOrders">
            <summary>
            Gets or sets the this year count
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderAverageReportLine.SumAllTimeOrders">
            <summary>
            Gets or sets the sum all time total
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderAverageReportLine.CountAllTimeOrders">
            <summary>
            Gets or sets the all time count
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic">
            <summary>
            Represents a forum topic
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic.#ctor">
            <summary>
            Creates a new instance of the ForumTopic class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic.ForumTopicID">
            <summary>
            Gets or sets the forum topic identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic.ForumID">
            <summary>
            Gets or sets the forum identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic.UserID">
            <summary>
            Gets or sets the user identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic.TopicTypeID">
            <summary>
            Gets or sets the topic type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic.Subject">
            <summary>
            Gets or sets the subject
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic.NumPosts">
            <summary>
            Gets or sets the number of posts
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic.Views">
            <summary>
            Gets or sets the number of views
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic.LastPostID">
            <summary>
            Gets or sets the last post identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic.LastPostUserID">
            <summary>
            Gets or sets the last post user identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic.LastPostTime">
            <summary>
            Gets or sets the last post date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic.NumReplies">
            <summary>
            Gets the number of replies
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic.Forum">
            <summary>
            Gets the forum
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic.User">
            <summary>
            Gets the user
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic.TopicType">
            <summary>
            Gets the log type
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic.FirstPost">
            <summary>
            Gets the first post
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic.LastPost">
            <summary>
            Gets the last post
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic.LastPostUser">
            <summary>
            Gets the last post user
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager">
            <summary>
            Tax manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.IsFreeTax(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer)">
            <summary>
            Gets a value indicating whether tax is free
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="customer">Customer</param>
            <returns>A value indicating whether tax is free</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.CreateCalculateTaxRequest(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,System.Int32,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer)">
            <summary>
            Create request for tax calculation
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="TaxClassID">Tax class identifier</param>
            <param name="customer">Customer</param>
            <returns>Package for tax calculation</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.CalculatePrice(System.Decimal,System.Decimal,System.Boolean)">
            <summary>
            Calculated price
            </summary>
            <param name="price">Price</param>
            <param name="percent">Percent</param>
            <param name="increase">Increase</param>
            <returns>New price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.GetTaxTotal(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.String@)">
            <summary>
            Gets tax
            </summary>
            <param name="Cart">Shopping cart</param>
            <param name="customer">Customer</param>
            <param name="Error">Error</param>
            <returns>Tax total</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.GetTaxTotal(NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCart,System.Int32,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.String@)">
            <summary>
            Gets tax
            </summary>
            <param name="Cart">Shopping cart</param>
            <param name="PaymentMethodID">Payment method identifier</param>
            <param name="customer">Customer</param>
            <param name="Error">Error</param>
            <returns>Tax total</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.GetTaxRate(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.String@)">
            <summary>
            Gets tax rate
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="customer">Customer</param>
            <param name="Error">Error</param>
            <returns>Tax rate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.GetTaxRate(System.Int32,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.String@)">
            <summary>
            Gets tax rate
            </summary>
            <param name="TaxClassID">Tax class identifier</param>
            <param name="customer">Customer</param>
            <param name="Error">Error</param>
            <returns>Tax rate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.GetTaxRate(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,System.Int32,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.String@)">
            <summary>
            Gets tax rate
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="TaxClassID">Tax class identifier</param>
            <param name="customer">Customer</param>
            <param name="Error">Error</param>
            <returns>Tax rate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.GetPrice(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,System.Decimal)">
            <summary>
            Gets price
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="price">Price</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.GetPrice(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,System.Decimal,System.String@)">
            <summary>
            Gets price
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="price">Price</param>
            <param name="Error">Error</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.GetPrice(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,System.Decimal,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer)">
            <summary>
            Gets price
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="price">Price</param>
            <param name="customer">Customer</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.GetPrice(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,System.Decimal,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.String@)">
            <summary>
            Gets price
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="price">Price</param>
            <param name="customer">Customer</param>
            <param name="Error">Error</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.GetPrice(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,System.Decimal,System.Boolean,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer)">
            <summary>
            Gets price
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="price">Price</param>
            <param name="includingTax">A value indicating whether calculated price should include tax</param>
            <param name="customer">Customer</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.GetPrice(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,System.Decimal,System.Boolean,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.String@)">
            <summary>
            Gets price
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="price">Price</param>
            <param name="includingTax">A value indicating whether calculated price should include tax</param>
            <param name="customer">Customer</param>
            <param name="Error">Error</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.GetPrice(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,System.Int32,System.Decimal,System.Boolean,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Boolean)">
            <summary>
            Gets price
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="TaxClassID">Tax class identifier</param>
            <param name="price">Price</param>
            <param name="includingTax">A value indicating whether calculated price should include tax</param>
            <param name="customer">Customer</param>
            <param name="priceIncludesTax">A value indicating whether price already includes tax</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.GetPrice(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,System.Int32,System.Decimal,System.Boolean,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Boolean,System.String@)">
            <summary>
            Gets price
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="TaxClassID">Tax class identifier</param>
            <param name="price">Price</param>
            <param name="includingTax">A value indicating whether calculated price should include tax</param>
            <param name="customer">Customer</param>
            <param name="priceIncludesTax">A value indicating whether price already includes tax</param>
            <param name="Error">Error</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.GetShippingPrice(System.Decimal,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer)">
            <summary>
            Gets shipping price
            </summary>
            <param name="price">Price</param>
            <param name="customer">Customer</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.GetShippingPrice(System.Decimal,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.String@)">
            <summary>
            Gets shipping price
            </summary>
            <param name="price">Price</param>
            <param name="customer">Customer</param>
            <param name="Error">Error</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.GetShippingPrice(System.Decimal,System.Boolean,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer)">
            <summary>
            Gets shipping price
            </summary>
            <param name="price">Price</param>
            <param name="includingTax">A value indicating whether calculated price should include tax</param>
            <param name="customer">Customer</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.GetShippingPrice(System.Decimal,System.Boolean,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.String@)">
            <summary>
            Gets shipping price
            </summary>
            <param name="price">Price</param>
            <param name="includingTax">A value indicating whether calculated price should include tax</param>
            <param name="customer">Customer</param>
            <param name="Error">Error</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.GetPaymentMethodAdditionalFee(System.Decimal,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer)">
            <summary>
            Gets payment method additional handling fee
            </summary>
            <param name="price">Price</param>
            <param name="customer">Customer</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.GetPaymentMethodAdditionalFee(System.Decimal,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.String@)">
            <summary>
            Gets payment method additional handling fee
            </summary>
            <param name="price">Price</param>
            <param name="customer">Customer</param>
            <param name="Error">Error</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.GetPaymentMethodAdditionalFee(System.Decimal,System.Boolean,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer)">
            <summary>
            Gets payment method additional handling fee
            </summary>
            <param name="price">Price</param>
            <param name="includingTax">A value indicating whether calculated price should include tax</param>
            <param name="customer">Customer</param>
            <returns>Price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.GetPaymentMethodAdditionalFee(System.Decimal,System.Boolean,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.String@)">
            <summary>
            Gets payment method additional handling fee
            </summary>
            <param name="price">Price</param>
            <param name="includingTax">A value indicating whether calculated price should include tax</param>
            <param name="customer">Customer</param>
            <param name="Error">Error</param>
            <returns>Price</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.TaxBasedOn">
            <summary>
            Tax based on
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.TaxDisplayType">
            <summary>
            Tax display type
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.ActiveTaxProvider">
            <summary>
            Gets or sets an active shipping rate computation method
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.DefaultTaxAddress">
            <summary>
            Gets or sets a default tax address
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.DisplayTaxSuffix">
            <summary>
            Gets or sets a value indicating whether to display tax suffix
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.PricesIncludeTax">
            <summary>
            Gets or sets a value indicating whether prices incude tax
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.AllowCustomersToSelectTaxDisplayType">
            <summary>
            Gets or sets a value indicating whether customers are allowed to select tax display type
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.HideZeroTax">
            <summary>
            Gets or sets a value indicating whether to hide zero tax
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.HideTaxInOrderSummary">
            <summary>
            Gets or sets a value indicating whether to hide tax in order summary when prices are shown tax inclusive
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.ShippingIsTaxable">
            <summary>
            Gets or sets a value indicating whether shipping price is taxable
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.ShippingPriceIncludesTax">
            <summary>
            Gets or sets a value indicating whether shipping price incudes tax
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.ShippingTaxClassID">
            <summary>
            Gets or sets a value indicating the shipping tax class identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.PaymentMethodAdditionalFeeIsTaxable">
            <summary>
            Gets or sets a value indicating whether payment method additional fee is taxable
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.PaymentMethodAdditionalFeeIncludesTax">
            <summary>
            Gets or sets a value indicating whether payment method additional fee incudes tax
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxManager.PaymentMethodAdditionalFeeTaxClassID">
            <summary>
            Gets or sets a value indicating the payment method additional fee tax class identifier
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingRateComputationMethodManager">
            <summary>
            Shipping rate computation method manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingRateComputationMethodManager.DeleteShippingRateComputationMethod(System.Int32)">
            <summary>
            Deletes a shipping rate computation method
            </summary>
            <param name="ShippingRateComputationMethodID">Shipping rate computation method identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingRateComputationMethodManager.GetShippingRateComputationMethodByID(System.Int32)">
            <summary>
            Gets a shipping rate computation method
            </summary>
            <param name="ShippingRateComputationMethodID">Shipping rate computation method identifier</param>
            <returns>Shipping rate computation method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingRateComputationMethodManager.GetAllShippingRateComputationMethods">
            <summary>
            Gets all shipping rate computation methods
            </summary>
            <returns>Shipping rate computation method collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingRateComputationMethodManager.InsertShippingRateComputationMethod(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Inserts a shipping rate computation method
            </summary>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="ConfigureTemplatePath">The configure template path</param>
            <param name="ClassName">The class name</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Shipping rate computation method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingRateComputationMethodManager.UpdateShippingRateComputationMethod(System.Int32,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Updates the shipping rate computation method
            </summary>
            <param name="ShippingRateComputationMethodID">The shipping rate computation method identifier</param>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="ConfigureTemplatePath">The configure template path</param>
            <param name="ClassName">The class name</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Shipping rate computation method</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingRateComputationMethodManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem">
            <summary>
            Represents a shopping cart item
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem.#ctor">
            <summary>
            Creates a new instance of the shopping cart class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem.ShoppingCartItemID">
            <summary>
            Gets or sets the shopping cart item identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem.ShoppingCartTypeID">
            <summary>
            Gets or sets the shopping cart type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem.CustomerSessionGUID">
            <summary>
            Gets or sets the customer session identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem.ProductVariantID">
            <summary>
            Gets or sets the product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem.AttributesXML">
            <summary>
            Gets or sets the product variant attribute
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem.Quantity">
            <summary>
            Gets or sets the quantity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem.ShoppingCartType">
            <summary>
            Gets the log type
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem.ProductVariant">
            <summary>
            Gets the product variant
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem.TotalWeigth">
            <summary>
            Gets the total weight
            </summary> 
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem.IsFreeShipping">
            <summary>
            Gets a value indicating whether the shopping cart item is free shipping
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem.IsShipEnabled">
            <summary>
            Gets a value indicating whether the shopping cart item is ship enabled
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem.AdditionalShippingCharge">
            <summary>
            Gets the additional shipping charge
            </summary> 
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem.IsTaxExempt">
            <summary>
            Gets a value indicating whether the shopping cart item is tax exempt
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.ShoppingCartItem.CustomerSession">
            <summary>
            Gets a customer session of cart item
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsComment">
            <summary>
            Represents a news comment
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsComment.#ctor">
            <summary>
            Creates a new instance of the NewsComment class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsComment.NewsCommentID">
            <summary>
            Gets or sets the news comment identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsComment.NewsID">
            <summary>
            Gets or sets the news identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsComment.CustomerID">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsComment.Title">
            <summary>
            Gets or sets the title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsComment.Comment">
            <summary>
            Gets or sets the comment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsComment.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsComment.News">
            <summary>
            Gets the news
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsComment.Customer">
            <summary>
            Gets the customer
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Audit.Log">
            <summary>
            Represents a log record
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Audit.Log.#ctor">
            <summary>
            Creates a new instance of the Log class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Audit.Log.LogID">
            <summary>
            Gets or sets the log identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Audit.Log.LogTypeID">
            <summary>
            Gets or sets the log type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Audit.Log.Severity">
            <summary>
            Gets or sets the severity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Audit.Log.Message">
            <summary>
            Gets or sets the short message
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Audit.Log.Exception">
            <summary>
            Gets or sets the full exception
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Audit.Log.IPAddress">
            <summary>
            Gets or sets the IP address
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Audit.Log.CustomerID">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Audit.Log.PageURL">
            <summary>
            Gets or sets the page URL
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Audit.Log.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Audit.Log.Customer">
            <summary>
            Gets the customer
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Audit.Log.LogType">
            <summary>
            Gets the log type
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Audit.SearchLogManager">
            <summary>
            Search log manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Audit.SearchLogManager.SearchTermReport(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32)">
            <summary>
            Get search term stats
            </summary>
            <param name="StartTime">Start time; null to load all</param>
            <param name="EndTime">End time; null to load all</param>
            <param name="Count">Item count. 0 if you want to get all items</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Audit.SearchLogManager.GetAllSearchLogs">
            <summary>
            Gets all search log items
            </summary>
            <returns>Search log collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Audit.SearchLogManager.GetSearchLogByID(System.Int32)">
            <summary>
            Gets a search log item
            </summary>
            <param name="SearchLogID">The search log item identifier</param>
            <returns>Search log item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Audit.SearchLogManager.InsertSearchLog(System.String,System.Int32,System.DateTime)">
            <summary>
            Inserts a search log item
            </summary>
            <param name="SearchTerm">The search term</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Search log item</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.LowStockActivityEnum">
            <summary>
            Represents a low stock activity (need to be synchronize with [Nop_LowStockActivity] table
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Products.LowStockActivityEnum.Nothing">
            <summary>
            Nothing
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Products.LowStockActivityEnum.DisableBuyButton">
            <summary>
            Disable buy button
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Products.LowStockActivityEnum.Unpublish">
            <summary>
            Unpublish
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ProductManufacturerCollection">
            <summary>
            Represents a ProductManufacturer collection
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ProductManufacturerCollection.FindProductManufacturer(System.Int32,System.Int32)">
            <summary>
            Finds a ProductManufacturer item by specified identifiers
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="ManufacturerID">Manufactureridentifier</param>
            <returns>Found item instance</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.RelatedProductCollection">
            <summary>
            Represents a related product collection
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.RelatedProductCollection.FindRelatedProduct(System.Int32,System.Int32)">
            <summary>
            Finds a related product item by specified identifiers
            </summary>
            <param name="ProductID1">The first product identifier</param>
            <param name="ProductID2">The second product identifier</param>
            <returns>Found item instance</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Measures.MeasureWeightCollection">
            <summary>
            Represents a measure weight collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Measures.MeasureWeight">
            <summary>
            Represents a measure weight
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Measures.MeasureWeight.#ctor">
            <summary>
            Creates a new instance of the MeasureWeight class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Measures.MeasureWeight.MeasureWeightID">
            <summary>
            Gets or sets the measure weight identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Measures.MeasureWeight.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Measures.MeasureWeight.SystemKeyword">
            <summary>
            Gets or sets the system keyword
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Measures.MeasureWeight.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxDisplayTypeEnum">
            <summary>
            Represents the tax display type enumeration
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxDisplayTypeEnum.IncludingTax">
            <summary>
            Including tax
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxDisplayTypeEnum.ExcludingTax">
            <summary>
            Excluding tax
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountRequirementEnum">
            <summary>
            Represents a discount requirement (need to be synchronize with [Nop_DiscountRequirement] table
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountRequirementEnum.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountRequirementEnum.MustBeAssignedToCustomerRole">
            <summary>
            Must be assigned to customer role
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.PriceRange">
            <summary>
            Represents a price range
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.PriceRange.#ctor">
            <summary>
            Creates a new instance of the PriceRange class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.PriceRange.From">
            <summary>
            From
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.PriceRange.To">
            <summary>
            To
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.LocalizedTopicCollection">
            <summary>
            Represents a localized topic collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentStatusEnum">
            <summary>
            Represents a payment status enumeration (need to be synchronize with [Nop_PaymentStatus] table)
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentStatusEnum.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentStatusEnum.Authorized">
            <summary>
            Authorized
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentStatusEnum.Paid">
            <summary>
            Paid
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant">
            <summary>
            Represents a product variant
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.#ctor">
            <summary>
            Creates a new instance of the ProductVariant class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.ProductVariantID">
            <summary>
            Gets or sets the product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.ProductID">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.SKU">
            <summary>
            Gets or sets the SKU
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.AdminComment">
            <summary>
            Gets or sets the admin comment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.ManufacturerPartNumber">
            <summary>
            Gets or sets the manufacturer part number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.IsDownload">
            <summary>
            Gets or sets a value indicating whether the product variant is download
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.DownloadID">
            <summary>
            Gets or sets the download identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.UnlimitedDownloads">
            <summary>
            Gets or sets a value indicating whether this downloadable product can be downloaded unlimited number of times
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.MaxNumberOfDownloads">
            <summary>
            Gets or sets the maximum number of downloads
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.HasSampleDownload">
            <summary>
            Gets or sets a value indicating whether the product variant has a sample download file
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.SampleDownloadID">
            <summary>
            Gets or sets the sample download identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.IsShipEnabled">
            <summary>
            Gets or sets a value indicating whether the entity is ship enabled
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.IsFreeShipping">
            <summary>
            Gets or sets a value indicating whether the entity is free shipping
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.AdditionalShippingCharge">
            <summary>
            Gets or sets the additional shipping charge
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.IsTaxExempt">
            <summary>
            Gets or sets a value indicating whether the product variant is marked as tax exempt
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.TaxCategoryID">
            <summary>
            Gets or sets the tax category identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.ManageInventory">
            <summary>
            Gets or sets a value indicating whether to manage inventory
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.StockQuantity">
            <summary>
            Gets or sets the stock quantity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.MinStockQuantity">
            <summary>
            Gets or sets the minimum stock quantity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.LowStockActivityID">
            <summary>
            Gets or sets the low stock activity identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.NotifyAdminForQuantityBelow">
            <summary>
            Gets or sets the quantity when admin should be notified
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.OrderMinimumQuantity">
            <summary>
            Gets or sets the order minimum quantity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.OrderMaximumQuantity">
            <summary>
            Gets or sets the order maximum quantity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.WarehouseId">
            <summary>
            Gets or sets the warehouse identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.DisableBuyButton">
            <summary>
            Gets or sets a value indicating whether to disable buy button
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.Price">
            <summary>
            Gets or sets the price
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.OldPrice">
            <summary>
            Gets or sets the old price
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.Weight">
            <summary>
            Gets or sets the weight
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.Length">
            <summary>
            Gets or sets the length
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.Width">
            <summary>
            Gets or sets the width
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.Height">
            <summary>
            Gets or sets the height
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.PictureID">
            <summary>
            Gets or sets the picture identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.AvailableStartDateTime">
            <summary>
            Gets or sets the available start date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.AvailableEndDateTime">
            <summary>
            Gets or sets the shipped end date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.Warehouse">
            <summary>
            Gets the warehouse
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.LowStockActivity">
            <summary>
            Gets the log type
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.TaxCategory">
            <summary>
            Gets the tax category
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.Product">
            <summary>
            Gets the product
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.AllDiscounts">
            <summary>
            Gets the discounts of the product variant
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.FullProductName">
            <summary>
            Gets the full product name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.Picture">
            <summary>
            Gets the picture
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.Download">
            <summary>
            Gets the download
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.SampleDownload">
            <summary>
            Gets the sample download
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.ProductVariantAttributes">
            <summary>
            Gets the product variant attributes
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant.TierPrices">
            <summary>
            Gets the tier prices of the product variant
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.ProductType">
            <summary>
            Represents a product type
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductType.#ctor">
            <summary>
            Creates a new instance of the ProductType class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductType.ProductTypeID">
            <summary>
            Gets or sets the product type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductType.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductType.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductType.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductType.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Orders.Order">
            <summary>
            Represents an order
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.#ctor">
            <summary>
            Creates a new instance of the Order class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.OrderID">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.OrderGUID">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.CustomerID">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.CustomerLanguageID">
            <summary>
            Gets or sets the customer language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.CustomerTaxDisplayTypeID">
            <summary>
            Gets or sets the customer tax display type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.OrderSubtotalInclTax">
            <summary>
            Gets or sets the order subtotal (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.OrderSubtotalExclTax">
            <summary>
            Gets or sets the order subtotal (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.OrderShippingInclTax">
            <summary>
            Gets or sets the order shipping (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.OrderShippingExclTax">
            <summary>
            Gets or sets the order shipping (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.PaymentMethodAdditionalFeeInclTax">
            <summary>
            Gets or sets the payment method additional fee (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.PaymentMethodAdditionalFeeExclTax">
            <summary>
            Gets or sets the payment method additional fee (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.OrderTax">
            <summary>
            Gets or sets the order tax
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.OrderTotal">
            <summary>
            Gets or sets the order total
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.OrderDiscount">
            <summary>
            Gets or sets the order discount
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.OrderSubtotalInclTaxInCustomerCurrency">
            <summary>
            Gets or sets the order subtotal incl tax (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.OrderSubtotalExclTaxInCustomerCurrency">
            <summary>
            Gets or sets the order subtotal excl tax (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.OrderShippingInclTaxInCustomerCurrency">
            <summary>
            Gets or sets the order shipping incl tax (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.OrderShippingExclTaxInCustomerCurrency">
            <summary>
            Gets or sets the order shipping excl tax (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.PaymentMethodAdditionalFeeInclTaxInCustomerCurrency">
            <summary>
            Gets or sets the payment method additional fee incl tax (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.PaymentMethodAdditionalFeeExclTaxInCustomerCurrency">
            <summary>
            Gets or sets the payment method additional fee excl tax (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.OrderTaxInCustomerCurrency">
            <summary>
            Gets or sets the order tax (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.OrderTotalInCustomerCurrency">
            <summary>
            Gets or sets the order total (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.CustomerCurrencyCode">
            <summary>
            Gets or sets the customer currency code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.OrderWeight">
            <summary>
            Gets or sets the order weight
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.AffiliateID">
            <summary>
            Gets or sets the affiliate identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.OrderStatusID">
            <summary>
            Gets or sets an order status identifer
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.AllowStoringCreditCardNumber">
            <summary>
            Gets or sets a value indicating whether storing of credit card number is allowed
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.CardType">
            <summary>
            Gets or sets the card type
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.CardName">
            <summary>
            Gets or sets the card name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.CardNumber">
            <summary>
            Gets or sets the card number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.MaskedCreditCardNumber">
            <summary>
            Gets or sets the masked credit card number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.CardCVV2">
            <summary>
            Gets or sets the card CVV2
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.CardExpirationMonth">
            <summary>
            Gets or sets the card expiration month
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.CardExpirationYear">
            <summary>
            Gets or sets the card expiration year
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.PaymentMethodID">
            <summary>
            Gets or sets the payment method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.PaymentMethodName">
            <summary>
            Gets or sets the payment method name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.AuthorizationTransactionID">
            <summary>
            Gets or sets the authorization transaction ID
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.AuthorizationTransactionCode">
            <summary>
            Gets or sets the authorization transaction code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.AuthorizationTransactionResult">
            <summary>
            Gets or sets the authorization transaction result
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.CaptureTransactionID">
            <summary>
            Gets or sets the capture transaction ID
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.CaptureTransactionResult">
            <summary>
            Gets or sets the capture transaction result
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.PurchaseOrderNumber">
            <summary>
            Gets or sets the purchase order number (used for "Purchase Order" payment method)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.PaymentStatusID">
            <summary>
            Gets or sets the payment status identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.BillingFirstName">
            <summary>
            Gets or sets the billing first name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.BillingLastName">
            <summary>
            Gets or sets the billing last name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.BillingPhoneNumber">
            <summary>
            Gets or sets the billing phone number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.BillingEmail">
            <summary>
            Gets or sets the billing email
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.BillingFaxNumber">
            <summary>
            Gets or sets the billing fax number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.BillingCompany">
            <summary>
            Gets or sets the billing company
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.BillingAddress1">
            <summary>
            Gets or sets the billing address 1
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.BillingAddress2">
            <summary>
            Gets or sets the billing address 2
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.BillingCity">
            <summary>
            Gets or sets the billing city
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.BillingStateProvince">
            <summary>
            Gets or sets the billing state/province
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.BillingStateProvinceID">
            <summary>
            Gets or sets the billing state/province identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.BillingZipPostalCode">
            <summary>
            Gets or sets the billing zip/postal code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.BillingCountry">
            <summary>
            Gets or sets the billing country
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.BillingCountryID">
            <summary>
            Gets or sets the billing country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.ShippingStatusID">
            <summary>
            Gets or sets the shipping status identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.ShippingFirstName">
            <summary>
            Gets or sets the shipping first name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.ShippingLastName">
            <summary>
            Gets or sets the shipping last name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.ShippingPhoneNumber">
            <summary>
            Gets or sets the shipping phone number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.ShippingEmail">
            <summary>
            Gets or sets the shipping email
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.ShippingFaxNumber">
            <summary>
            Gets or sets the shipping fax number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.ShippingCompany">
            <summary>
            Gets or sets the shipping  company
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.ShippingAddress1">
            <summary>
            Gets or sets the shipping address 1
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.ShippingAddress2">
            <summary>
            Gets or sets the shipping address 2
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.ShippingCity">
            <summary>
            Gets or sets the shipping city
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.ShippingStateProvince">
            <summary>
            Gets or sets the shipping state/province
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.ShippingStateProvinceID">
            <summary>
            Gets or sets the shipping state/province identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.ShippingZipPostalCode">
            <summary>
            Gets or sets the shipping zip/postal code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.ShippingCountry">
            <summary>
            Gets or sets the shipping country
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.ShippingCountryID">
            <summary>
            Gets or sets the shipping identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.ShippingMethod">
            <summary>
            Gets or sets the shipping method
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.ShippingRateComputationMethodID">
            <summary>
            Gets or sets the shipping rate computation method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.ShippedDate">
            <summary>
            Gets or sets the shipped date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.CreatedOn">
            <summary>
            Gets or sets the date and time of order creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.Customer">
            <summary>
            Gets the customer
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.CustomerTaxDisplayType">
            <summary>
            Gets or sets the customer tax display type
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.Affiliate">
            <summary>
            Gets the affiliate
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.OrderProductVariants">
            <summary>
            Gets the order product variants
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.OrderNotes">
            <summary>
            Gets the order notes
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.OrderStatus">
            <summary>
            Gets or sets the order status
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.PaymentStatus">
            <summary>
            Gets or sets the payment status
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.ShippingStatus">
            <summary>
            Gets or sets the shipping status
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.BillingFullName">
            <summary>
            Gets the billing full name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.Order.ShippingFullName">
            <summary>
            Gets the shipping full name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingStatusManager">
            <summary>
            Shipping status manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingStatusManager.GetShippingStatusName(System.Int32)">
            <summary>
            Gets a shipping status full name
            </summary>
            <param name="ShippingStatusID">Shipping status identifier</param>
            <returns>Shipping status name</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingStatusManager.GetShippingStatusByID(System.Int32)">
            <summary>
            Gets a shipping status by ID
            </summary>
            <param name="ShippingStatusID">Shipping status identifier</param>
            <returns>Shipping status</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingStatusManager.GetAllShippingStatuses">
            <summary>
            Gets all shipping statuses
            </summary>
            <returns>Shipping status collection</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingStatusManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogComment">
            <summary>
            Represents a blog comment
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogComment.#ctor">
            <summary>
            Creates a new instance of the BlogComment class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogComment.BlogCommentID">
            <summary>
            Gets or sets the blog comment identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogComment.BlogPostID">
            <summary>
            Gets or sets the blog post identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogComment.CustomerID">
            <summary>
            Gets or sets the customer identifier who commented the blog post
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogComment.CommentText">
            <summary>
            Gets or sets the comment text
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogComment.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogComment.Customer">
            <summary>
            Gets the customer who commented the blog post
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogComment.BlogPost">
            <summary>
            Gets the blog comment collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariantPricelist">
            <summary>
            Represents a product variant pricelist
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariantPricelist.#ctor">
            <summary>
            Creates a new instance of the ProductVariantPricelist class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariantPricelist.ProductVariantPricelistID">
            <summary>
            Gets or sets the product variant pricelist identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariantPricelist.ProductVariantID">
            <summary>
            Gets or sets the product variant identifer
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariantPricelist.PricelistID">
            <summary>
            Gets or sets the pricelist identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariantPricelist.PriceAdjustmentTypeID">
            <summary>
            Gets or sets the type of price adjustment (if used) (relative or absolute)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariantPricelist.PriceAdjustment">
            <summary>
            Gets or sets the price will be adjusted by this amount (in accordance with PriceAdjustmentType)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariantPricelist.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariantPricelist.ProductVariant">
            <summary>
            Gets the product variant
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariantPricelist.Pricelist">
            <summary>
            Gets the pricelist
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariantPricelist.PriceAdjustmentType">
            <summary>
            Gets the log type
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.NopContext">
            <summary>
            Represents a NopContext
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.NopContext.#ctor">
            <summary>
            Creates a new instance of the NopContext class
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.NopContext.SaveSessionToDatabase">
            <summary>
            Save customer session to data source
            </summary>
            <returns>Saved customer ssion</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.NopContext.GetSession(System.Boolean)">
            <summary>
            Gets customer session
            </summary>
            <param name="createInDatabase">Create session in database if no one exists</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.NopContext.GetSession(System.Boolean,System.Nullable{System.Guid})">
            <summary>
            Gets customer session
            </summary>
            <param name="createInDatabase">Create session in database if no one exists</param>
            <param name="sessionId">Session identifier</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.NopContext.SessionSaveToClient">
            <summary>
            Saves current session to client
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.NopContext.ResetSession">
            <summary>
            Reset customer session
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.NopContext.SetCookie(System.Web.HttpApplication,System.String,System.String)">
            <summary>
            Sets cookie
            </summary>
            <param name="application">Application</param>
            <param name="key">Key</param>
            <param name="val">Value</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.NopContext.SetCulture(System.Globalization.CultureInfo)">
            <summary>
            Sets the CultureInfo 
            </summary>
            <param name="culture">Culture</param>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.NopContext.Current">
            <summary>
            Gets an instance of the NopContext, which can be used to retrieve information about current context.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.NopContext.IsAdmin">
            <summary>
            Gets or sets a value indicating whether the context is running in admin-mode
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.NopContext.Item(System.String)">
            <summary>
            Gets or sets an object item in the context by the specified key.
            </summary>
            <param name="key">The key of the value to get.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.NopContext.Session">
            <summary>
            Gets or sets the current session
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.NopContext.User">
            <summary>
            Gets or sets the current user
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.NopContext.WorkingCurrency">
            <summary>
            Get or set current user working currency
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.NopContext.WorkingLanguage">
            <summary>
            Get or set current user working language
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.NopContext.TaxDisplayType">
            <summary>
            Get or set current tax display type
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.NopContext.LastProductPageVisited">
            <summary>
            
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsManager">
            <summary>
            News manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsManager.GetNewsByID(System.Int32)">
            <summary>
            Gets a news
            </summary>
            <param name="NewsID">The news identifier</param>
            <returns>News</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsManager.DeleteNews(System.Int32)">
            <summary>
            Deletes a news
            </summary>
            <param name="NewsID">The news identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsManager.GetNews(System.Int32,System.Int32)">
            <summary>
            Gets news item collection
            </summary>
            <param name="LanguageID">Language identifier. 0 if you want to get all news</param>
            <param name="NewsCount">News item count. 0 if you want to get all news</param>
            <returns>News item collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsManager.GetAllNews(System.Int32)">
            <summary>
            Gets all news
            </summary>
            <param name="LanguageID">Language identifier. 0 if you want to get all news</param>
            <returns>News item collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsManager.InsertNews(System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Inserts a news item
            </summary>
            <param name="LanguageID">The language identifier</param>
            <param name="Title">The news title</param>
            <param name="Short">The short text</param>
            <param name="Full">The full text</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="AllowComments">A value indicating whether the entity allows comments</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>News item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsManager.UpdateNews(System.Int32,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Updates the news item
            </summary>
            <param name="NewsID">The news identifier</param>
            <param name="LanguageID">The language identifier</param>
            <param name="Title">The news title</param>
            <param name="Short">The short text</param>
            <param name="Full">The full text</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="AllowComments">A value indicating whether the entity allows comments</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>News item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsManager.GetNewsCommentByID(System.Int32)">
            <summary>
            Gets a news comment
            </summary>
            <param name="NewsCommentID">News comment identifer</param>
            <returns>News comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsManager.GetNewsCommentsByNewsID(System.Int32)">
            <summary>
            Gets a news comment collection by news identifier
            </summary>
            <param name="NewsID">The news identifier</param>
            <returns>News comment collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsManager.DeleteNewsComment(System.Int32)">
            <summary>
            Deletes a news comment
            </summary>
            <param name="NewsCommentID">The news comment identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsManager.GetAllNewsComments">
            <summary>
            Gets all news comments
            </summary>
            <returns>News comment collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsManager.InsertNewsComment(System.Int32,System.Int32,System.String,System.String,System.DateTime)">
            <summary>
            Inserts a news comment
            </summary>
            <param name="NewsID">The news identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="Title">The title</param>
            <param name="Comment">The comment</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>News comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsManager.InsertNewsComment(System.Int32,System.Int32,System.String,System.String,System.DateTime,System.Boolean)">
            <summary>
            Inserts a news comment
            </summary>
            <param name="NewsID">The news identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="Title">The title</param>
            <param name="Comment">The comment</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="notify">A value indicating whether to notify the store owner</param>
            <returns>News comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsManager.UpdateNewsComment(System.Int32,System.Int32,System.Int32,System.String,System.String,System.DateTime)">
            <summary>
            Updates the news comment
            </summary>
            <param name="NewsCommentID">The news comment identifier</param>
            <param name="NewsID">The news identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="Title">The title</param>
            <param name="Comment">The comment</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>News comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsManager.FormatCommentText(System.String)">
            <summary>
            Formats the text
            </summary>
            <param name="Text">Text</param>
            <returns>Formatted text</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsManager.NewsEnabled">
            <summary>
            Gets or sets a value indicating whether news are enabled
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsManager.AllowNotRegisteredUsersToLeaveComments">
            <summary>
            Gets or sets a value indicating whether not registered user can leave comments
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsManager.NotifyAboutNewNewsComments">
            <summary>
            Gets or sets a value indicating whether to notify about new news comments
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsManager.ShowNewsOnMainPage">
            <summary>
            Gets or sets a value indicating whether to show news on the main page
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsManager.MainPageNewsCount">
            <summary>
            Gets or sets a value indicating news count displayed on the main page
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Directory.CurrencyManager">
            <summary>
            Currency manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.CurrencyManager.GetCurrencyLiveRates(System.String,System.DateTime@,System.Data.DataTable@)">
            <summary>
            Gets currency live rates
            </summary>
            <param name="ExchangeRateCurrencyCode">Exchange rate currency code</param>
            <param name="UpdateDate">Update date</param>
            <param name="Rates">Currency rates table</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.CurrencyManager.DeleteCurrency(System.Int32)">
            <summary>
            Deletes currency
            </summary>
            <param name="CurrencyID">Currency identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.CurrencyManager.GetCurrencyByID(System.Int32)">
            <summary>
            Gets a currency
            </summary>
            <param name="CurrencyID">Currency identifier</param>
            <returns>Currency</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.CurrencyManager.GetCurrencyByCode(System.String)">
            <summary>
            Gets a currency by code
            </summary>
            <param name="CurrencyCode">Currency code</param>
            <returns>Currency</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.CurrencyManager.GetAllCurrencies">
            <summary>
            Gets all currencies
            </summary>
            <returns>Currency collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.CurrencyManager.InsertCurrency(System.String,System.String,System.Decimal,System.String,System.String,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a currency
            </summary>
            <param name="Name">The name</param>
            <param name="CurrencyCode">The currency code</param>
            <param name="Rate">The rate</param>
            <param name="DisplayLocale">The display locale</param>
            <param name="CustomFormatting">The custom formatting</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>A currency</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.CurrencyManager.UpdateCurrency(System.Int32,System.String,System.String,System.Decimal,System.String,System.String,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the currency
            </summary>
            <param name="CurrencyID">Currency identifier</param>
            <param name="Name">The name</param>
            <param name="CurrencyCode">The currency code</param>
            <param name="Rate">The rate</param>
            <param name="DisplayLocale">The display locale</param>
            <param name="CustomFormatting">The custom formatting</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>A currency</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.CurrencyManager.ConvertCurrency(System.Decimal,NopSolutions.NopCommerce.BusinessLogic.Directory.Currency,NopSolutions.NopCommerce.BusinessLogic.Directory.Currency)">
            <summary>
            Converts currency
            </summary>
            <param name="Amount">Amount</param>
            <param name="SourceCurrencyCode">Source currency code</param>
            <param name="TargetCurrencyCode">Target currency code</param>
            <returns>Converted value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.CurrencyManager.ConvertToPrimaryExchangeRateCurrency(System.Decimal,NopSolutions.NopCommerce.BusinessLogic.Directory.Currency)">
            <summary>
            Converts to primary exchange rate currency 
            </summary>
            <param name="Amount">Amount</param>
            <param name="SourceCurrencyCode">Source currency code</param>
            <returns>Converted value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.CurrencyManager.ConvertFromPrimaryExchangeRateCurrency(System.Decimal,NopSolutions.NopCommerce.BusinessLogic.Directory.Currency)">
            <summary>
            Converts from primary exchange rate currency
            </summary>
            <param name="Amount">Amount</param>
            <param name="TargetCurrencyCode">Target currency code</param>
            <returns>Converted value</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.CurrencyManager.PrimaryStoreCurrency">
            <summary>
            Gets or sets a primary store currency
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.CurrencyManager.PrimaryExchangeRateCurrency">
            <summary>
            Gets or sets a primary exchange rate currency
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.CurrencyManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxCategory">
            <summary>
            Represents a tax category
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxCategory.#ctor">
            <summary>
            Creates a new instance of the TaxCategory class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxCategory.TaxCategoryID">
            <summary>
            Gets or sets the tax category identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxCategory.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxCategory.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxCategory.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxCategory.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderProductVariantCollection">
            <summary>
            Represents an order product variant collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Templates.ManufacturerTemplate">
            <summary>
            Represents a manufacturer template
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Templates.ManufacturerTemplate.#ctor">
            <summary>
            Creates a new instance of the ManufacturerTemplate class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Templates.ManufacturerTemplate.ManufacturerTemplateID">
            <summary>
            Gets or sets the manufacturer template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Templates.ManufacturerTemplate.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Templates.ManufacturerTemplate.TemplatePath">
            <summary>
            Gets or sets the template path
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Templates.ManufacturerTemplate.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Templates.ManufacturerTemplate.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Templates.ManufacturerTemplate.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.Discount">
            <summary>
            Represents a discount
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.Discount.#ctor">
            <summary>
            Creates a new instance of the Discount class
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.Discount.IsActive">
            <summary>
            Gets a value indicating whether the discount is active now
            </summary>
            <returns>A value indicating whether the discount is active now</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.Discount.IsActive(System.String)">
            <summary>
            Gets a value indicating whether the discount is active now
            </summary>
            <param name="CouponCodeToValidate">Coupon code to validate</param>
            <returns>A value indicating whether the discount is active now</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.Discount.GetDiscountAmount(System.Decimal)">
            <summary>
            Gets the discount amount for the specified value
            </summary>
            <param name="price">Price</param>
            <returns>The discount amount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.Discount.CheckCustomerRoleRequirement(System.Int32)">
            <summary>
            Checks customer role requirement for customer
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <returns></returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.Discount.DiscountID">
            <summary>
            Gets or sets the discount identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.Discount.DiscountTypeID">
            <summary>
            Gets or sets the discount type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.Discount.DiscountRequirementID">
            <summary>
            Gets or sets the discount requirement identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.Discount.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.Discount.UsePercentage">
            <summary>
            Gets or sets a value indicating whether to use percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.Discount.DiscountPercentage">
            <summary>
            Gets or sets the discount percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.Discount.DiscountAmount">
            <summary>
            Gets or sets the discount amount
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.Discount.StartDate">
            <summary>
            Gets or sets the discount start date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.Discount.EndDate">
            <summary>
            Gets or sets the discount end date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.Discount.RequiresCouponCode">
            <summary>
            Gets or sets a value indicating whether discount requires coupon code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.Discount.CouponCode">
            <summary>
            Gets or sets the coupon code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.Discount.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.Discount.DiscountType">
            <summary>
            Gets or sets the discount type
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.Discount.DiscountRequirement">
            <summary>
            Gets or sets the discount requirement
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.Discount.CustomerRoles">
            <summary>
            Gets the customer role assigned to discount
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerSession">
            <summary>
            Represents a customer session
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerSession.#ctor">
            <summary>
            Creates a new instance of the CustomerSession class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerSession.CustomerSessionGUID">
            <summary>
            Gets or sets the customer session identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerSession.CustomerID">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerSession.LastAccessed">
            <summary>
            Gets or sets the last accessed date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerSession.IsExpired">
            <summary>
            Gets or sets a value indicating whether the customer session is expired
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerSession.Customer">
            <summary>
            Gets or sets the customer
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerCollection">
            <summary>
            Represents a customer collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Categories.Category">
            <summary>
            Represents a category
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.#ctor">
            <summary>
            Creates a new instance of the Category class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.CategoryID">
            <summary>
            Gets or sets the category identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.TemplateID">
            <summary>
            Gets or sets the template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.MetaKeywords">
            <summary>
            Gets or sets the meta keywords
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.MetaDescription">
            <summary>
            Gets or sets the meta description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.MetaTitle">
            <summary>
            Gets or sets the meta title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.SEName">
            <summary>
            Gets or sets the search-engine name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.ParentCategoryID">
            <summary>
            Gets or sets the parent category identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.PictureID">
            <summary>
            Gets or sets the picture identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.PageSize">
            <summary>
            Gets or sets the page size
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.PriceRanges">
            <summary>
            Gets or sets the available price ranges
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.ParentCategory">
            <summary>
            Gets the parent category
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.CategoryTemplate">
            <summary>
            Gets the category template
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.ProductCategories">
            <summary>
            Gets the products
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.Picture">
            <summary>
            Gets the picture
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.Discounts">
            <summary>
            Gets the discounts of the category
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Categories.Category.FeaturedProducts">
            <summary>
            Gets the featured products of the category
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.Affiliate">
            <summary>
            Represents an affiliate
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.Affiliate.#ctor">
            <summary>
            Creates a new instance of the Affiliate class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.Affiliate.AffiliateID">
            <summary>
            Gets or sets the affiliate identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.Affiliate.FirstName">
            <summary>
            Gets or sets the first name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.Affiliate.LastName">
            <summary>
            Gets or sets the last name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.Affiliate.MiddleName">
            <summary>
            Gets or sets the middle name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.Affiliate.PhoneNumber">
            <summary>
            Gets or sets the phone number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.Affiliate.Email">
            <summary>
            Gets or sets the email
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.Affiliate.FaxNumber">
            <summary>
            Gets or sets the fax number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.Affiliate.Company">
            <summary>
            Gets or sets the company
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.Affiliate.Address1">
            <summary>
            Gets or sets the address 1
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.Affiliate.Address2">
            <summary>
            Gets or sets the address 2
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.Affiliate.City">
            <summary>
            Gets or sets the city
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.Affiliate.StateProvince">
            <summary>
            Gets or sets the state/province
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.Affiliate.ZipPostalCode">
            <summary>
            Gets or sets the zip/postal code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.Affiliate.CountryID">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.Affiliate.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.Affiliate.Active">
            <summary>
            Gets or sets a value indicating whether the entity is active
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.Affiliate.Country">
            <summary>
            Gets the country
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.Affiliate.FullName">
            <summary>
            Gets the affiliate full name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingOption">
            <summary>
            Represents a shipping option
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingOption.Rate">
            <summary>
            Gets or sets a shipping rate
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingOption.Name">
            <summary>
            Gets or sets a shipping option name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingOption.Description">
            <summary>
            Gets or sets a shipping option description
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Media.PictureManager">
            <summary>
            Picture manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.PictureManager.getImageCodeInfo(System.String)">
            <summary>
            Returns the first ImageCodeInfo instance with the specified mime type. Some people try to get the ImageCodeInfo instance by index - sounds rather fragile to me.
            </summary>
            <param name="mimeType"></param>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.PictureManager.GetPictureUrl(System.Int32)">
            <summary>
            Get a picture URL
            </summary>
            <param name="imageId">Picture identifier</param>
            <returns>Picture URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.PictureManager.GetPictureUrl(NopSolutions.NopCommerce.BusinessLogic.Media.Picture)">
            <summary>
            Get a picture URL
            </summary>
            <param name="picture">Picture instance</param>
            <returns>Picture URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.PictureManager.GetPictureUrl(System.Int32,System.Int32)">
            <summary>
            Get a picture URL
            </summary>
            <param name="imageId">Picture identifier</param>
            <param name="TargetSize">The target picture size (longest side)</param>
            <returns>Picture URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.PictureManager.GetPictureUrl(NopSolutions.NopCommerce.BusinessLogic.Media.Picture,System.Int32)">
            <summary>
            Get a picture URL
            </summary>
            <param name="picture">Picture instance</param>
            <param name="TargetSize">The target picture size (longest side)</param>
            <returns>Picture URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.PictureManager.GetPictureUrl(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Get a picture URL
            </summary>
            <param name="imageId">Picture identifier</param>
            <param name="TargetSize">The target picture size (longest side)</param>
            <param name="showDefaultPicture">A value indicating whether the default picture is shown</param>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.PictureManager.GetDefaultPictureUrl(System.Int32)">
            <summary>
            Gets the default picture URL
            </summary>
            <param name="TargetSize">The target picture size (longest side)</param>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.PictureManager.GetDefaultPictureUrl(NopSolutions.NopCommerce.BusinessLogic.Media.PictureTypeEnum,System.Int32)">
            <summary>
            Gets the default picture URL
            </summary>
            <param name="DefaultPictureType">Default picture type</param>
            <param name="TargetSize">The target picture size (longest side)</param>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.PictureManager.GetPictureUrl(NopSolutions.NopCommerce.BusinessLogic.Media.Picture,System.Int32,System.Boolean)">
            <summary>
            Get a picture URL
            </summary>
            <param name="picture">Picture instance</param>
            <param name="TargetSize">The target picture size (longest side)</param>
            <param name="showDefaultPicture">A value indicating whether the default picture is shown</param>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.PictureManager.CalculateDimensions(System.Drawing.Size,System.Int32)">
            <summary>
            Calculates picture dimensions whilst maintaining aspect
            </summary>
            <param name="OriginalSize">The original picture size</param>
            <param name="TargetSize">The target picture size (longest side)</param>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.PictureManager.GetPictureByID(System.Int32)">
            <summary>
            Gets a picture
            </summary>
            <param name="PictureID">Picture identifier</param>
            <returns>Picture</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.PictureManager.DeletePicture(System.Int32)">
            <summary>
            Deletes a picture
            </summary>
            <param name="PictureID">Picture identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.PictureManager.ValidatePicture(System.Byte[])">
            <summary>
            Validates input picture dimensions
            </summary>
            <param name="PictureBinary">PictureBinary</param>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.PictureManager.InsertPicture(System.Byte[],System.String,System.Boolean)">
            <summary>
            Inserts a picture
            </summary>
            <param name="PictureBinary">The picture binary</param>
            <param name="Extension">The picture extension</param>
            <param name="IsNew">A value indicating whether the picture is new</param>
            <returns>Picture</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.PictureManager.UpdatePicture(System.Int32,System.Byte[],System.String,System.Boolean)">
            <summary>
            Updates the picture
            </summary>
            <param name="PictureID">The picture identifier</param>
            <param name="PictureBinary">The picture binary</param>
            <param name="Extension">The picture extension</param>
            <param name="IsNew">A value indicating whether the picture is new</param>
            <returns>Picture</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Media.PictureManager.GetPictureBits(System.IO.Stream,System.Int32)">
            <summary>
            Gets the picture binary array
            </summary>
            <param name="fs">File stream</param>
            <param name="size">Picture size</param>
            <returns>Picture binary array</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Media.PictureManager.ImageQuality">
            <summary>
            Gets an image quality
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Media.PictureManager.LocalThumbImagePath">
            <summary>
            Gets a local thumb image path
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Media.PictureManager.LocalImagePath">
            <summary>
            Gets the local image path
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager">
            <summary>
            Specification attribute manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.DBMapping(NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeCollection)">
            <summary>
            Maps a DBSpecificationAttributeCollection to a SpecificationAttributeCollection
            </summary>
            <param name="dbCollection">DBSpecificationAttributeCollection</param>
            <returns>SpecificationAttributeCollection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.DBMapping(NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttribute)">
            <summary>
            Maps a DBSpecificationAttribute to a SpecificationAttribute
            </summary>
            <param name="dbItem">DBSpecificationAttribute</param>
            <returns>SpecificationAttribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.DBMapping(NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionCollection)">
            <summary>
            Maps a DBSpecificationAttributeOptionCollection to a SpecificationAttributeOptionCollections
            </summary>
            <param name="dbCollection">DBSpecificationAttributeOptionCollection</param>
            <returns>SpecificationAttributeOptionCollection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.DBMapping(NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOption)">
            <summary>
            Maps a DBSpecificationAttributeOption to a SpecificationAttributeOption
            </summary>
            <param name="dbItem">DBSpecificationAttributeOption</param>
            <returns>SpecificationAttributeOption</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.DBMapping(NopSolutions.NopCommerce.DataAccess.Products.Specs.DBProductSpecificationAttributeCollection)">
            <summary>
            Maps a DBProductSpecificationAttributeCollection to a ProductSpecificationAttributeCollection
            </summary>
            <param name="dbCollection">DBProductSpecificationAttributeCollection</param>
            <returns>ProductSpecificationAttributeCollection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.DBMapping(NopSolutions.NopCommerce.DataAccess.Products.Specs.DBProductSpecificationAttribute)">
            <summary>
            Maps a DBProductSpecificationAttribute to a ProductSpecificationAttribute
            </summary>
            <param name="dbItem">DBProductSpecificationAttribute</param>
            <returns>ProductSpecificationAttribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.DBMapping(NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionFilter)">
            <summary>
            Maps a DBSpecificationAttributeOptionFilter to a SpecificationAttributeOptionFilter
            </summary>
            <param name="dbItem">DBSpecificationAttributeOptionFilter</param>
            <returns>SpecificationAttributeOptionFilter</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.DBMapping(NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionFilterCollection)">
            <summary>
            Maps a DBSpecificationAttributeOptionFilterCollection to a SpecificationAttributeOptionFilterCollection
            </summary>
            <param name="dbCol">DBSpecificationAttributeOptionFilterCollection</param>
            <returns>SpecificationAttributeOptionFilterCollection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.GetSpecificationAttributeByID(System.Int32)">
            <summary>
            Gets a specification attribute
            </summary>
            <param name="SpecificationAttributeID">The specification attribute identifier</param>
            <returns>Specification attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.GetSpecificationAttributes">
            <summary>
            Gets specification attribute collection
            </summary>
            <returns>Specification attribute collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.DeleteSpecificationAttribute(System.Int32)">
            <summary>
            Deletes a specification attribute
            </summary>
            <param name="SpecificationAttributeID">The specification attribute identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.InsertSpecificationAttribute(System.String,System.Int32)">
            <summary>
            Inserts a specification attribute
            </summary>
            <param name="name">The name</param>
            <param name="displayOrder">Display order</param>
            <returns>Specification attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.UpdateSpecificationAttribute(System.Int32,System.String,System.Int32)">
            <summary>
            Updates the specification attribute
            </summary>
            <param name="specificationAttributeID">The specification attribute identifier</param>
            <param name="name">The name</param>
            <param name="displayOrder">Display order</param>
            <returns>Specification attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.GetSpecificationAttributeOptionByID(System.Int32)">
            <summary>
            Gets a specification attribute option
            </summary>
            <param name="SpecificationAttributeOptionID">The specification attribute option identifier</param>
            <returns>Specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.GetSpecificationAttributeOptionsBySpecificationAttribute(System.Int32)">
            <summary>
            Gets a specification attribute option by specification attribute id
            </summary>
            <param name="specificationAttributeID">The specification attribute identifier</param>
            <returns>Specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.GetSpecificationAttributeOptions">
            <summary>
            Gets specification attribute option collection
            </summary>
            <returns>Specification attribute option collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.DeleteSpecificationAttributeOption(System.Int32)">
            <summary>
            Deletes a specification attribute option
            </summary>
            <param name="specificationAttributeOptionID">The specification attribute option identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.InsertSpecificationAttributeOption(System.Int32,System.String,System.Int32)">
            <summary>
            Inserts a specification attribute option
            </summary>
            <param name="name">The name</param>
            <param name="displayOrder">Display order</param>
            <returns>Specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.UpdateSpecificationAttributeOptions(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Updates the specification attribute
            </summary>
            <param name="specificationAttributeOptionID">The specification attribute option identifier</param>
            <param name="specificationAttributeID">The specification attribute identifier</param>
            <param name="name">The name</param>
            <param name="displayOrder">Display order</param>
            <returns>Specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.DeleteProductSpecificationAttribute(System.Int32)">
            <summary>
            Deletes a product specification attribute mapping
            </summary>
            <param name="ProductSpecificationAttributeID">Product specification attribute identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.GetProductSpecificationAttributesByProductID(System.Int32)">
            <summary>
            Gets a product specification attribute mapping collection
            </summary>
            <param name="ProductID">Product identifier</param>
            <returns>Product specification attribute mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.GetProductSpecificationAttributesByProductID(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Gets a product specification attribute mapping collection
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="AllowFiltering">0 to load attributes with AllowFiltering set to false, 0 to load attributes with AllowFiltering set to true, null to load all attributes</param>
            <param name="ShowOnProductPage">0 to load attributes with ShowOnProductPage set to false, 0 to load attributes with ShowOnProductPage set to true, null to load all attributes</param>
            <returns>Product specification attribute mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.GetProductSpecificationAttributeByID(System.Int32)">
            <summary>
            Gets a product specification attribute mapping 
            </summary>
            <param name="ProductSpecificationAttributeID">Product specification attribute mapping identifier</param>
            <returns>Product specification attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.GetSpecificationAttributeOptionFilter(System.Int32)">
            <summary>
            Gets a filtered product specification attribute mapping collection by category id
            </summary>
            <param name="categoryID">Product category identifier</param>
            <returns>Product specification attribute mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.InsertProductSpecificationAttribute(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Inserts a product specification attribute mapping
            </summary>
            <param name="productID">Product identifier</param>
            <param name="specificationAttributeOptionID">Specification attribute option identifier</param>
            <param name="allowFiltering">Allow product filtering by this attribute</param>
            <param name="showOnProductPage">Show the attribute on the product page</param>
            <param name="displayOrder">The display order</param>
            <returns>Product specification attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.UpdateProductSpecificationAttribute(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Updates the product specification attribute mapping
            </summary>
            <param name="productSpecificationAttributeID">product specification attribute mapping identifier</param>
            <param name="productID">Product identifier</param>
            <param name="specificationAttributeOptionID">Specification attribute identifier</param>
            <param name="allowFiltering">Allow product filtering by this attribute</param>
            <param name="showOnProductPage">Show the attribute on the product page</param>
            <param name="displayOrder">The display order</param>
            <returns>Product specification attribute mapping</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.SpecificationAttributeManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightAndCountryManager">
            <summary>
            "ShippingByWeightAndCountry" manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightAndCountryManager.GetByID(System.Int32)">
            <summary>
            Gets a ShippingByWeightAndCountry
            </summary>
            <param name="ShippingByWeightAndCountryID">ShippingByWeightAndCountry identifier</param>
            <returns>ShippingByWeightAndCountry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightAndCountryManager.DeleteShippingByWeightAndCountry(System.Int32)">
            <summary>
            Deletes a ShippingByWeightAndCountry
            </summary>
            <param name="ShippingByWeightAndCountryID">ShippingByWeightAndCountry identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightAndCountryManager.GetAll">
            <summary>
            Gets all ShippingByWeightAndCountrys
            </summary>
            <returns>ShippingByWeightAndCountry collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightAndCountryManager.InsertShippingByWeightAndCountry(System.Int32,System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Inserts a ShippingByWeightAndCountry
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="CountryID">The country identifier</param>
            <param name="From">The "from" value</param>
            <param name="To">The "to" value</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="ShippingChargePercentage">The shipping charge percentage</param>
            <param name="ShippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByWeightAndCountry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightAndCountryManager.UpdateShippingByWeightAndCountry(System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Updates the ShippingByWeightAndCountry
            </summary>
            <param name="ShippingByWeightAndCountryID">The ShippingByWeightAndCountry identifier</param>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="CountryID">The country identifier</param>
            <param name="From">The "from" value</param>
            <param name="To">The "to" value</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="ShippingChargePercentage">The shipping charge percentage</param>
            <param name="ShippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByWeightAndCountry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightAndCountryManager.GetAllByShippingMethodIDAndCountryID(System.Int32,System.Int32)">
            <summary>
            Gets all ShippingByWeightAndCountrys by shipping method identifier
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="CountryID">The country identifier</param>
            <returns>ShippingByWeightAndCountry collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.ProductPictureCollection">
            <summary>
            Represents a product picture collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.TopicCollection">
            <summary>
            Represents a topic collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Tax.ITaxProvider">
            <summary>
            Provides an interface for creating tax providers
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.ITaxProvider.GetTaxRate(NopSolutions.NopCommerce.BusinessLogic.Tax.CalculateTaxRequest,System.String@)">
            <summary>
            Gets tax rate
            </summary>
            <param name="calculateTaxRequest">Tax calculation request</param>
            <param name="Error">Error</param>
            <returns>Tax</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Localization.LocalizationManager">
            <summary>
            Provides information about localization
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Localization.LocalizationManager.GetCurrencyString(System.Decimal)">
            <summary>
            Gets currency string
            </summary>
            <param name="Amount">Amount</param>
            <returns>Currency string without exchange rate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Localization.LocalizationManager.GetCurrencyString(System.Decimal,System.Boolean,NopSolutions.NopCommerce.BusinessLogic.Directory.Currency)">
            <summary>
            Gets currency string
            </summary>
            <param name="Amount">Amount</param>
            <param name="ShowCurrency">A value indicating whether to show a currency</param>
            <param name="TargetCurrency">Target currency</param>
            <returns>Currency string without exchange rate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Localization.LocalizationManager.GetLocaleResourceString(System.String)">
            <summary>
            Gets a resource string based on the specified ResourceKey property.
            </summary>
            <param name="ResourceKey">A string representing a ResourceKey.</param>
            <returns>A string representing the requested resource string.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Localization.LocalizationManager.GetLocaleResourceString(System.String,System.Int32)">
            <summary>
            Gets a resource string based on the specified ResourceKey property.
            </summary>
            <param name="ResourceKey">A string representing a ResourceKey.</param>
            <param name="LanguageID">Language identifier</param>
            <returns>A string representing the requested resource string.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Localization.LocalizationManager.GetLocaleResourceString(System.String,System.Int32,System.Boolean)">
            <summary>
            Gets a resource string based on the specified ResourceKey property.
            </summary>
            <param name="ResourceKey">A string representing a ResourceKey.</param>
            <param name="LanguageID">Language identifier</param>
            <param name="LogIfNotFound">A value indicating whether to log error if locale string resource is not found</param>
            <returns>A string representing the requested resource string.</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Localization.LocalizationManager.DefaultAdminLanguage">
            <summary>
            Gets or sets the default admin language
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.AffiliateManager">
            <summary>
            Affiliate manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.AffiliateManager.GetAffiliateByID(System.Int32)">
            <summary>
            Gets an affiliate by affiliate identifier
            </summary>
            <param name="AffiliateID">Affiliate identifier</param>
            <returns>Affiliate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.AffiliateManager.MarkAffiliateAsDeleted(System.Int32)">
            <summary>
            Marks affiliate as deleted 
            </summary>
            <param name="AffiliateID">Affiliate identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.AffiliateManager.GetAllAffiliates">
            <summary>
            Gets all affiliates
            </summary>
            <returns>Affiliate collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.AffiliateManager.InsertAffiliate(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Inserts an affiliate
            </summary>
            <param name="FirstName">The first name</param>
            <param name="LastName">The last name</param>
            <param name="MiddleName">The middle name</param>
            <param name="PhoneNumber">The phone number</param>
            <param name="Email">The email</param>
            <param name="FaxNumber">The fax number</param>
            <param name="Company">The company</param>
            <param name="Address1">The address 1</param>
            <param name="Address2">The address 2</param>
            <param name="City">The city</param>
            <param name="StateProvince">The state/province</param>
            <param name="ZipPostalCode">The zip/postal code</param>
            <param name="CountryID">The country identifier</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="Active">A value indicating whether the entity is active</param>
            <returns>An affiliate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.AffiliateManager.UpdateAffiliate(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Updates the affiliate
            </summary>
            <param name="AffiliateID">The affiliate identifier</param>
            <param name="FirstName">The first name</param>
            <param name="LastName">The last name</param>
            <param name="MiddleName">The middle name</param>
            <param name="PhoneNumber">The phone number</param>
            <param name="Email">The email</param>
            <param name="FaxNumber">The fax number</param>
            <param name="Company">The company</param>
            <param name="Address1">The address 1</param>
            <param name="Address2">The address 2</param>
            <param name="City">The city</param>
            <param name="StateProvince">The state/province</param>
            <param name="ZipPostalCode">The zip/postal code</param>
            <param name="CountryID">The country identifier</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="Active">A value indicating whether the entity is active</param>
            <returns>An affiliate</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Directory.Country">
            <summary>
            Represents a country
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.Country.#ctor">
            <summary>
            Creates a new instance of the Country class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Country.CountryID">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Country.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Country.AllowsRegistration">
            <summary>
            Gets or sets a value indicating whether registration is allowed to this country
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Country.AllowsBilling">
            <summary>
            Gets or sets a value indicating whether billing is allowed to this country
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Country.AllowsShipping">
            <summary>
            Gets or sets a value indicating whether shipping is allowed to this country
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Country.TwoLetterISOCode">
            <summary>
            Gets or sets the two letter ISO code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Country.ThreeLetterISOCode">
            <summary>
            Gets or sets the three letter ISO code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Country.NumericISOCode">
            <summary>
            Gets or sets the numeric ISO code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Country.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Country.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.Country.StateProvinces">
            <summary>
            Gets the state/provinces
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogManager">
            <summary>
            Blog post manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogManager.DeleteBlogPost(System.Int32)">
            <summary>
            Deletes an blog post
            </summary>
            <param name="BlogPostID">Blog post identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogManager.GetBlogPostByID(System.Int32)">
            <summary>
            Gets an blog post
            </summary>
            <param name="BlogPostID">Blog post identifier</param>
            <returns>Blog post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogManager.GetAllBlogPosts(System.Int32)">
            <summary>
            Gets all blog posts
            </summary>
            <param name="LanguageID">Language identifier. 0 if you want to get all news</param>
            <returns>Blog posts</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogManager.InsertBlogPost(System.Int32,System.String,System.String,System.Boolean,System.Int32,System.DateTime)">
            <summary>
            Inserts an blog post
            </summary>
            <param name="LanguageID">The language identifier</param>
            <param name="BlogPostTitle">The blog post title</param>
            <param name="BlogPostBody">The blog post title</param>
            <param name="BlogPostAllowComments">A value indicating whether the blog post comments are allowed</param>
            <param name="CreatedByID">The user identifier who created the blog post</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Blog post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogManager.UpdateBlogPost(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.DateTime)">
            <summary>
            Updates the blog post
            </summary>
            <param name="LanguageID">The language identifier</param>
            <param name="BlogPostID">Blog post identifier</param>
            <param name="BlogPostTitle">The blog post title</param>
            <param name="BlogPostBody">The blog post title</param>
            <param name="BlogPostAllowComments">A value indicating whether the blog post comments are allowed</param>
            <param name="CreatedByID">The user identifier who created the blog post</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Blog post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogManager.DeleteBlogComment(System.Int32)">
            <summary>
            Deletes an blog comment
            </summary>
            <param name="BlogCommentID">Blog comment identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogManager.GetBlogCommentByID(System.Int32)">
            <summary>
            Gets an blog comment
            </summary>
            <param name="BlogCommentID">Blog comment identifier</param>
            <returns>An blog comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogManager.GetBlogCommentsByBlogPostID(System.Int32)">
            <summary>
            Gets a collection of blog comments by blog post identifier
            </summary>
            <param name="BlogPostID">Blog post identifier</param>
            <returns>A collection of blog comments</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogManager.GetAllBlogComments">
            <summary>
            Gets all blog comments
            </summary>
            <returns>Blog comments</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogManager.InsertBlogComment(System.Int32,System.Int32,System.String,System.DateTime)">
            <summary>
            Inserts an blog comment
            </summary>
            <param name="BlogPostID">The blog post identifier</param>
            <param name="CustomerID">The customer identifier who commented the blog post</param>
            <param name="CommentText">The comment text</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Blog comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogManager.InsertBlogComment(System.Int32,System.Int32,System.String,System.DateTime,System.Boolean)">
            <summary>
            Inserts an blog comment
            </summary>
            <param name="BlogPostID">The blog post identifier</param>
            <param name="CustomerID">The customer identifier who commented the blog post</param>
            <param name="CommentText">The comment text</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="notify">A value indicating whether to notify the store owner</param>
            <returns>Blog comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogManager.UpdateBlogComment(System.Int32,System.Int32,System.Int32,System.String,System.DateTime)">
            <summary>
            Updates the blog comment
            </summary>
            <param name="BlogCommentID">The blog comment identifier</param>
            <param name="BlogPostID">The blog post identifier</param>
            <param name="CustomerID">The customer identifier who commented the blog post</param>
            <param name="CommentText">The comment text</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Blog comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogManager.FormatCommentText(System.String)">
            <summary>
            Formats the text
            </summary>
            <param name="Text">Text</param>
            <returns>Formatted text</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogManager.BlogEnabled">
            <summary>
            Gets or sets a value indicating whether blog is enabled
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogManager.AllowNotRegisteredUsersToLeaveComments">
            <summary>
            Gets or sets a value indicating whether not registered user can leave comments
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogManager.NotifyAboutNewBlogComments">
            <summary>
            Gets or sets a value indicating whether to notify about new blog comments
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.ProductReviewCollection">
            <summary>
            Represents a product review collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerRoleCollection">
            <summary>
            Represents a customer role collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductAttributeCollection">
            <summary>
            Represents a product attribute collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Promo.Campaigns.CampaignCollection">
            <summary>
            Represents a campaign collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttributeValue">
            <summary>
            Represents a product variant attribute value
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttributeValue.#ctor">
            <summary>
            Creates a new instance of the ProductVariantAttributeValue class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttributeValue.ProductVariantAttributeValueID">
            <summary>
            Gets or sets the product variant attribute value identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttributeValue.ProductVariantAttributeID">
            <summary>
            Gets or sets the product variant attribute mapping identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttributeValue.Name">
            <summary>
            Gets or sets the product variant attribute name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttributeValue.PriceAdjustment">
            <summary>
            Gets or sets the price adjustment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttributeValue.WeightAdjustment">
            <summary>
            Gets or sets the weight adjustment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttributeValue.IsPreSelected">
            <summary>
            Gets or sets a value indicating whether the value is pre-selected
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttributeValue.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.ProductVariantAttributeValue.ProductVariantAttribute">
            <summary>
            Gets the product variant attribute
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Security.BannedIpAddress">
            <summary>
            Network IP address implementation
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Security.BannedIpAddress.#ctor">
            <summary>
            Default constructor. Creates a new instance of IpAddress
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Security.BannedIpAddress.BannedIpAddressID">
            <summary>
            Gets or sets the IpAddress unique identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Security.BannedIpAddress.Address">
            <summary>
            Gets or sets a banned IP address
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Security.BannedIpAddress.Comment">
            <summary>
            Gets or sets a comment why the IP was banned
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Security.BannedIpAddress.CreatedOn">
            <summary>
            Gets or sets when the IP address record was banned
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Security.BannedIpAddress.UpdatedOn">
            <summary>
            Gets or sets when the banned IP address record was last updated
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderStatusEnum">
            <summary>
            Represents an order status enumeration (need to be synchronize with [Nop_OrderStatus] table)
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderStatusEnum.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderStatusEnum.Processing">
            <summary>
            Processing
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderStatusEnum.Complete">
            <summary>
            Complete
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderStatusEnum.Cancelled">
            <summary>
            Cancelled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.PriceAdjustmentTypeEnum">
            <summary>
            Represents the types of price adjustments can be made (absolute adjustment, relative adjustment, absolute price)
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Products.PriceAdjustmentTypeEnum.RelativeAdjustment">
            <summary>
            Provided adjustment must be between 0 and 100, price will be calculated ((100 - x) / 100) * price
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Products.PriceAdjustmentTypeEnum.AbsoluteAdjustment">
            <summary>
            Provided adjustment can be any positive decimal value, price will be calculated price - adjustment (result must be >= 0)
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Products.PriceAdjustmentTypeEnum.AbsolutePrice">
            <summary>
            Provided value is an absolute price, price will not be calculated
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.LocalizedTopic">
            <summary>
            Represents a localized topic
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.LocalizedTopic.#ctor">
            <summary>
            Creates a new instance of the LocalizedTopic class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.LocalizedTopic.TopicLocalizedID">
            <summary>
            Gets or sets the localized topic identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.LocalizedTopic.TopicID">
            <summary>
            Gets or sets the topic identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.LocalizedTopic.LanguageID">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.LocalizedTopic.Title">
            <summary>
            Gets or sets the title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.LocalizedTopic.Body">
            <summary>
            Gets or sets the body
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.LocalizedTopic.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.LocalizedTopic.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.LocalizedTopic.Language">
            <summary>
            Gets the language
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Topics.LocalizedTopic.Topic">
            <summary>
            Gets the topic
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Localization.NopResourceExpressionBuilder">
            <summary>
            Represents a resource expression builder
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Localization.NopResourceExpressionBuilder.#ctor">
            <summary>
            Creates a new instance of the NopResourceExpressionBuilder class
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Localization.NopResourceExpressionBuilder.GetVal(System.String)">
            <summary>
            Gets value
            </summary>
            <param name="resourceKey">Resource key</param>
            <returns>Resource value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Localization.NopResourceExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)">
            <summary>
            Returns a code expression to evaluate during page execution.
            </summary>
            <param name="entry">The property name of the object.</param>
            <param name="parsedData">The parsed value of the expression.</param>
            <param name="context">Properties for the control or page.</param>
            <returns>A CodeExpression that invokes a method.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Localization.NopResourceExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)">
            <summary>
            Returns an object that represents the parsed expression. 
            </summary>
            <param name="expression">The value of the declarative expression.</param>
            <param name="propertyType">The type of the property bound to by the expression.</param>
            <param name="context">Contextual information for the evaluation of the expression.</param>
            <returns>An Object that represents the parsed expression</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Localization.NopResourceExpressionBuilder.SupportsEvaluate">
            <summary>
            Returns a value indicating whether the current ExpressionBuilder object supports no-compile pages. 
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Caching.ClearCacheTask">
            <summary>
            Clear cache schedueled task implementation
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Caching.ClearCacheTask.Execute(System.Xml.XmlNode)">
            <summary>
            Executes the clear cache task
            </summary>
            <param name="node">XML node that represents a task description</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumSubscription">
            <summary>
            Represents a forum subscription item
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumSubscription.#ctor">
            <summary>
            Creates a new instance of the ForumSubscription class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumSubscription.ForumSubscriptionID">
            <summary>
            Gets or sets the forum subscription identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumSubscription.SubscriptionGUID">
            <summary>
            Gets or sets the forum subscription identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumSubscription.UserID">
            <summary>
            Gets or sets the user identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumSubscription.ForumID">
            <summary>
            Gets or sets the forum identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumSubscription.TopicID">
            <summary>
            Gets or sets the topic identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumSubscription.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumSubscription.User">
            <summary>
            Gets the user
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumSubscription.Forum">
            <summary>
            Gets the forum
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumSubscription.Topic">
            <summary>
            Gets the topic
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper">
            <summary>
            Represents a SEO helper
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.RenderMetaTag(System.Web.UI.Page,System.String,System.String,System.Boolean)">
            <summary>
            Renders page meta tag
            </summary>
            <param name="page">Page instance</param>
            <param name="name">Meta name</param>
            <param name="content">Content</param>
            <param name="OverwriteExisting">Overwrite existing content if exists</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.RenderTitle(System.Web.UI.Page,System.String,System.Boolean)">
            <summary>
            Renders page title
            </summary>
            <param name="page">Page instance</param>
            <param name="title">Page title</param>
            <param name="OverwriteExisting">Overwrite existing content if exists</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.RenderTitle(System.Web.UI.Page,System.String,System.Boolean,System.Boolean)">
            <summary>
            Renders page title
            </summary>
            <param name="page">Page instance</param>
            <param name="title">Page title</param>
            <param name="IncludeStoreNameInTitle">Include store name in title</param>
            <param name="OverwriteExisting">Overwrite existing content if exists</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.RenderHeaderRSSLink(System.Web.UI.Page,System.String,System.String)">
            <summary>
            Renders an RSS link to the page
            </summary>
            <param name="page">Page instance</param>
            <param name="title">RSS Title</param>
            <param name="href">Path to the RSS feed</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetSEName(System.String)">
            <summary>
            Get SE name
            </summary>
            <param name="name">Name</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetProductURL(System.Int32)">
            <summary>
            Gets product URL
            </summary>
            <param name="ProductID">Product identifier</param>
            <returns>Product URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetProductURL(NopSolutions.NopCommerce.BusinessLogic.Products.Product)">
            <summary>
            Gets product URL
            </summary>
            <param name="product">Product</param>
            <returns>Product URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetProductEmailAFriendURL(System.Int32)">
            <summary>
            Gets product email a friend URL
            </summary>
            <param name="ProductID">Product identifier</param>
            <returns>Product email a friend URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetManufacturerURL(System.Int32)">
            <summary>
            Gets manufacturer URL
            </summary>
            <param name="ManufacturerID">Manufacturer identifier</param>
            <returns>Manufacturer URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetManufacturerURL(NopSolutions.NopCommerce.BusinessLogic.Manufacturers.Manufacturer)">
            <summary>
            Gets manufacturer URL
            </summary>
            <param name="manufacturer">Manufacturer</param>
            <returns>Manufacturer URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetCategoryURL(System.Int32)">
            <summary>
            Gets category URL
            </summary>
            <param name="CategoryID">Category identifier</param>
            <returns>Category URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetCategoryURL(NopSolutions.NopCommerce.BusinessLogic.Categories.Category)">
            <summary>
            Gets category URL
            </summary>
            <param name="category">Category</param>
            <returns>Category URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetBlogPostURL(System.Int32)">
            <summary>
            Gets blog post URL
            </summary>
            <param name="BlogPostID">Blog post identifier</param>
            <returns>Blog post URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetBlogPostURL(NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogPost)">
            <summary>
            Gets blog post URL
            </summary>
            <param name="blogPost">Blog post</param>
            <returns>Blog post URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetNewsURL(System.Int32)">
            <summary>
            Gets news URL
            </summary>
            <param name="NewsID">News identifier</param>
            <returns>News URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetNewsURL(NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.News)">
            <summary>
            Gets news URL
            </summary>
            <param name="news">News item</param>
            <returns>News URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetNewsRssURL">
            <summary>
            Gets news Rss URL
            </summary>
            <returns>News Rss URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetNewsRssURL(System.Int32)">
            <summary>
            Gets news Rss URL
            </summary>
            <param name="LanguageID">Language identifier</param>
            <returns>News Rss URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetBlogRssURL">
            <summary>
            Gets blog Rss URL
            </summary>
            <returns>Blog Rss URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetBlogRssURL(System.Int32)">
            <summary>
            Gets blog Rss URL
            </summary>
            <param name="LanguageID">Language identifier</param>
            <returns>Blog Rss URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetForumMainURL">
            <summary>
            Gets forum URL
            </summary>
            <returns>Forum URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetForumGroupURL(System.Int32)">
            <summary>
            Gets forum group URL
            </summary>
            <param name="ForumGroupID">Forum group identifier</param>
            <returns>Forum group URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetForumGroupURL(NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumGroup)">
            <summary>
            Gets forum group URL
            </summary>
            <param name="forumGroup">Forum group</param>
            <returns>Forum group URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetForumURL(System.Int32)">
            <summary>
            Gets forum URL
            </summary>
            <param name="ForumID">Forum identifier</param>
            <returns>Forum URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetForumURL(NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum)">
            <summary>
            Gets forum URL
            </summary>
            <param name="forum">Forum</param>
            <returns>Forum URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetMoveForumTopicURL(NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic)">
            <summary>
            Gets move topic URL
            </summary>
            <param name="forumTopic">Forum topic</param>
            <returns>Forum URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetForumSearchURL(System.String)">
            <summary>
            Gets forum search URL
            </summary>
            <param name="ForumID">Forum identifier</param>
            <returns>Forum URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetForumTopicURL(System.Int32)">
            <summary>
            Gets forum topic URL
            </summary>
            <param name="TopicID">Forum topic identifier</param>
            <returns>Forum topic URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetForumTopicURL(System.Int32,System.String,System.Nullable{System.Int32})">
            <summary>
            Gets forum topic URL
            </summary>
            <param name="TopicID">Forum topic identifier</param>
            <param name="QueryStringProperty">Query string property</param>
            <param name="PageIndex">Page index</param>
            <returns>Forum topic URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetForumTopicURL(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets forum topic URL
            </summary>
            <param name="TopicID">Forum topic identifier</param>
            <param name="QueryStringProperty">Query string property</param>
            <param name="PageIndex">Page index</param>
            <param name="PostID">Post identifier (anchor)</param>
            <returns>Forum topic URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetNewForumTopicURL(System.Int32)">
            <summary>
            Gets new forum topic URL
            </summary>
            <param name="ForumID">Forum identifier</param>
            <returns>New forum topic URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetEditForumTopicURL(System.Int32)">
            <summary>
            Gets edit topic URL
            </summary>
            <param name="TopicID">Forum post identifier</param>
            <returns>Edit forum post URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetNewForumPostURL(System.Int32)">
            <summary>
            Gets new forum post URL
            </summary>
            <param name="TopicID">Forum topic identifier</param>
            <returns>New forum post URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetEditForumPostURL(System.Int32)">
            <summary>
            Gets edit post URL
            </summary>
            <param name="ForumPostID">Forum post identifier</param>
            <returns>Edit forum post URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetUserProfileURL(System.Int32)">
            <summary>
            Gets forum user profile URL
            </summary>
            <param name="UserID">User identifier</param>
            <returns>Forum topic URL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.SEO.SEOHelper.GetTopicUrl(System.Int32,System.String)">
            <summary>
            Gets Topic page URL
            </summary>
            <param name="TopicID">Topic identifier</param>
            <param name="Title">Localized topic title</param>
            <returns>Topic page URL</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxRateManager">
            <summary>
            Tax rate manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxRateManager.DeleteTaxRate(System.Int32)">
            <summary>
            Deletes a tax rate
            </summary>
            <param name="TaxRateID">Tax rate identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxRateManager.GetTaxRateByID(System.Int32)">
            <summary>
            Gets a tax rate
            </summary>
            <param name="TaxRateID">Tax rate identifier</param>
            <returns>Tax rate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxRateManager.GetAllTaxRates">
            <summary>
            Gets all tax rates
            </summary>
            <returns>Tax rate collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxRateManager.GetAllTaxRates(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Gets all tax rates by params
            </summary>
            <param name="TaxCategoryID">The tax category identifier</param>
            <param name="CountryID">The country identifier</param>
            <param name="StateProvinceID">The state/province identifier</param>
            <param name="Zip">The zip</param>
            <returns>Tax rate collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxRateManager.InsertTaxRate(System.Int32,System.Int32,System.Int32,System.String,System.Decimal)">
            <summary>
            Inserts a tax rate
            </summary>
            <param name="TaxCategoryID">The tax category identifier</param>
            <param name="CountryID">The country identifier</param>
            <param name="StateProvinceID">The state/province identifier</param>
            <param name="Zip">The zip</param>
            <param name="Percentage">The percentage</param>
            <returns>Tax rate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxRateManager.UpdateTaxRate(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Decimal)">
            <summary>
            Updates the tax rate
            </summary>
            <param name="TaxRateID">The tax rate identifier</param>
            <param name="TaxCategoryID">The tax category identifier</param>
            <param name="CountryID">The country identifier</param>
            <param name="StateProvinceID">The state/province identifier</param>
            <param name="Zip">The zip</param>
            <param name="Percentage">The percentage</param>
            <returns>Tax rate</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxRateManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ManufacturerManager">
            <summary>
            Manufacturer manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ManufacturerManager.MarkManufacturerAsDeleted(System.Int32)">
            <summary>
            Marks a manufacturer as deleted
            </summary>
            <param name="ManufacturerID">Manufacturer identifer</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ManufacturerManager.RemoveManufacturerPicture(System.Int32)">
            <summary>
            Removes a manufacturer picture
            </summary>
            <param name="ManufacturerID">Manufacturer identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ManufacturerManager.GetAllManufacturers">
            <summary>
            Gets all manufacturers
            </summary>
            <returns>Manufacturer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ManufacturerManager.GetAllManufacturers(System.Boolean)">
            <summary>
            Gets all manufacturers
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Manufacturer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ManufacturerManager.GetManufacturerByID(System.Int32)">
            <summary>
            Gets a manufacturer
            </summary>
            <param name="ManufacturerID">Manufacturer identifier</param>
            <returns>Manufacturer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ManufacturerManager.InsertManufacturer(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a manufacturer
            </summary>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="TemplateID">The template identifier</param>
            <param name="MetaKeywords">The meta keywords</param>
            <param name="MetaDescription">The meta description</param>
            <param name="MetaTitle">The meta title</param>
            <param name="SEName">The search-engine name</param>
            <param name="PictureID">The parent picture identifier</param>
            <param name="PageSize">The page size</param>
            <param name="PriceRanges">The price ranges</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Manufacturer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ManufacturerManager.UpdateManufacturer(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the manufacturer
            </summary>
            <param name="ManufacturerID">Manufacturer identifier</param>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="TemplateID">The template identifier</param>
            <param name="MetaKeywords">The meta keywords</param>
            <param name="MetaDescription">The meta description</param>
            <param name="MetaTitle">The meta title</param>
            <param name="SEName">The search-engine name</param>
            <param name="PictureID">The parent picture identifier</param>
            <param name="PageSize">The page size</param>
            <param name="PriceRanges">The price ranges</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Manufacturer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ManufacturerManager.DeleteProductManufacturer(System.Int32)">
            <summary>
            Deletes a product manufacturer mapping
            </summary>
            <param name="ProductManufacturerID">Product manufacturer mapping identifer</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ManufacturerManager.GetProductManufacturersByManufacturerID(System.Int32)">
            <summary>
            Gets product category manufacturer collection
            </summary>
            <param name="ManufacturerID">Manufacturer identifier</param>
            <returns>Product category manufacturer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ManufacturerManager.GetProductManufacturersByProductID(System.Int32)">
            <summary>
            Gets a product manufacturer mapping collection
            </summary>
            <param name="ProductID">Product identifier</param>
            <returns>Product manufacturer mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ManufacturerManager.GetProductManufacturerByID(System.Int32)">
            <summary>
            Gets a product manufacturer mapping 
            </summary>
            <param name="ProductManufacturerID">Product manufacturer mapping identifier</param>
            <returns>Product manufacturer mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ManufacturerManager.InsertProductManufacturer(System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Inserts a product manufacturer mapping
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="ManufacturerID">Manufacturer identifier</param>
            <param name="IsFeaturedProduct">A value indicating whether the product is featured</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product manufacturer mapping </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ManufacturerManager.UpdateProductManufacturer(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Updates the product manufacturer mapping
            </summary>
            <param name="ProductManufacturerID">Product manufacturer mapping identifier</param>
            <param name="ProductID">Product identifier</param>
            <param name="ManufacturerID">Manufacturer identifier</param>
            <param name="IsFeaturedProduct">A value indicating whether the product is featured</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product manufacturer mapping </returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ManufacturerManager.ManufacturersCacheEnabled">
            <summary>
            Gets a value indicating whether manufacturers cache is enabled
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ManufacturerManager.MappingsCacheEnabled">
            <summary>
            Gets a value indicating whether mappings cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountManager">
            <summary>
            Discount manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountManager.GetPreferredDiscount(NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountCollection,System.Decimal)">
            <summary>
            Gets a preferred discount
            </summary>
            <param name="Discounts">Discounts to analyze</param>
            <param name="Amount">Amount</param>
            <returns>Preferred discount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountManager.GetDiscountByID(System.Int32)">
            <summary>
            Gets a discount
            </summary>
            <param name="DiscountID">Discount identifier</param>
            <returns>Discount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountManager.MarkDiscountAsDeleted(System.Int32)">
            <summary>
            Marks discount as deleted
            </summary>
            <param name="DiscountID">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountManager.HasDiscountsWithCouponCode">
            <summary>
            Get a value indicating whether discounts that require coupon code exist
            </summary>
            <returns>A value indicating whether discounts that require coupon code exist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountManager.GetAllDiscounts(System.Nullable{NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountTypeEnum})">
            <summary>
            Gets all discounts
            </summary>
            <param name="DiscountType">Discount type; null to load all discount</param>
            <returns>Discount collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountManager.InsertDiscount(NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountTypeEnum,NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountRequirementEnum,System.String,System.Boolean,System.Decimal,System.Decimal,System.DateTime,System.DateTime,System.Boolean,System.String,System.Boolean)">
            <summary>
            Inserts a discount
            </summary>
            <param name="DiscountType">The discount type</param>
            <param name="DiscountRequirement">The discount requirement</param>
            <param name="Name">The name</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="DiscountPercentage">The discount percentage</param>
            <param name="DiscountAmount">The discount amount</param>
            <param name="StartDate">The discount start date and time</param>
            <param name="EndDate">The discount end date and time</param>
            <param name="RequiresCouponCode">The value indicating whether discount requires coupon code</param>
            <param name="CouponCode">The coupon code</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <returns>Discount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountManager.UpdateDiscount(System.Int32,NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountTypeEnum,NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountRequirementEnum,System.String,System.Boolean,System.Decimal,System.Decimal,System.DateTime,System.DateTime,System.Boolean,System.String,System.Boolean)">
            <summary>
            Updates the discount
            </summary>
            <param name="DiscountID">Discount identifier</param>
            <param name="DiscountType">The discount type</param>
            <param name="DiscountRequirement">The discount requirement</param>
            <param name="Name">The name</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="DiscountPercentage">The discount percentage</param>
            <param name="DiscountAmount">The discount amount</param>
            <param name="StartDate">The discount start date and time</param>
            <param name="EndDate">The discount end date and time</param>
            <param name="RequiresCouponCode">The value indicating whether discount requires coupon code</param>
            <param name="CouponCode">The coupon code</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <returns>Discount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountManager.AddDiscountToProductVariant(System.Int32,System.Int32)">
            <summary>
            Adds a discount to a product variant
            </summary>
            <param name="ProductVariantID">Product variant identifier</param>
            <param name="DiscountID">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountManager.RemoveDiscountFromProductVariant(System.Int32,System.Int32)">
            <summary>
            Removes a discount from a product variant
            </summary>
            <param name="ProductVariantID">Product variant identifier</param>
            <param name="DiscountID">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountManager.GetDiscountsByProductVariantID(System.Int32)">
            <summary>
            Gets a discount collection of a product variant
            </summary>
            <param name="ProductVariantID">Product variant identifier</param>
            <returns>Discount collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountManager.AddDiscountToCategory(System.Int32,System.Int32)">
            <summary>
            Adds a discount to a category
            </summary>
            <param name="CategoryID">Category identifier</param>
            <param name="DiscountID">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountManager.RemoveDiscountFromCategory(System.Int32,System.Int32)">
            <summary>
            Removes a discount from a category
            </summary>
            <param name="CategoryID">Category identifier</param>
            <param name="DiscountID">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountManager.GetDiscountsByCategoryID(System.Int32)">
            <summary>
            Gets a discount collection of a category
            </summary>
            <param name="CategoryID">Category identifier</param>
            <returns>Discount collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountManager.GetAllDiscountRequirements">
            <summary>
            Gets all discount requirements
            </summary>
            <returns>Discount requirement collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountManager.GetAllDiscountTypes">
            <summary>
            Gets all discount types
            </summary>
            <returns>Discount type collection</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Warehouses.Warehouse">
            <summary>
            Represents an warehouse
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Warehouses.Warehouse.#ctor">
            <summary>
            Creates a new instance of the Warehouse class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Warehouses.Warehouse.WarehouseID">
            <summary>
            Gets or sets the warehouse identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Warehouses.Warehouse.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Warehouses.Warehouse.PhoneNumber">
            <summary>
            Gets or sets the phone number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Warehouses.Warehouse.Email">
            <summary>
            Gets or sets the email
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Warehouses.Warehouse.FaxNumber">
            <summary>
            Gets or sets the fax number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Warehouses.Warehouse.Address1">
            <summary>
            Gets or sets the address 1
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Warehouses.Warehouse.Address2">
            <summary>
            Gets or sets the address 2
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Warehouses.Warehouse.City">
            <summary>
            Gets or sets the city
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Warehouses.Warehouse.StateProvince">
            <summary>
            Gets or sets the state/province
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Warehouses.Warehouse.ZipPostalCode">
            <summary>
            Gets or sets the zip/postal code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Warehouses.Warehouse.CountryID">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Warehouses.Warehouse.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Warehouses.Warehouse.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Warehouses.Warehouse.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Warehouses.Warehouse.Country">
            <summary>
            Gets the country
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxRateCollection">
            <summary>
            Represents a tax rate collection
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxRateCollection.FindTaxRates(System.Int32,System.Int32)">
            <summary>
            Find records
            </summary>
            <param name="CountryID">Country identifier</param>
            <param name="TaxCategoryID">Tax category identifier</param>
            <returns>Tax rates</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Directory.StateProvinceCollection">
            <summary>
            Represents a state/province collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingMethod">
            <summary>
            Represents a shipping method
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingMethod.#ctor">
            <summary>
            Creates a new instance of the ShippingMethod class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingMethod.ShippingMethodID">
            <summary>
            Gets or sets the shipping method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingMethod.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingMethod.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingMethod.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsCommentCollection">
            <summary>
            Represents a news comment collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Directory.LanguageCollection">
            <summary>
            Represents a language collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Promo.Affiliates.AffiliateCollection">
            <summary>
            Represents an affiliate collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExportManager">
            <summary>
            Export manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExportManager.ExportCustomersToXML(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerCollection)">
            <summary>
            Export customer list to xml
            </summary>
            <param name="customers">Customers</param>
            <returns>Result in XML format</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExportManager.ExportCustomersToXLS(System.String,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerCollection)">
            <summary>
            Export customer list to XLS
            </summary>
            <param name="FilePath">File path to use</param>
            <param name="customers">Customers</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExportManager.ExportManufacturersToXML(NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ManufacturerCollection)">
            <summary>
            Export manufacturer list to xml
            </summary>
            <returns>Result in XML format</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExportManager.ExportCategoriesToXML">
            <summary>
            Export category list to xml
            </summary>
            <returns>Result in XML format</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExportManager.ExportProductsToXML(NopSolutions.NopCommerce.BusinessLogic.Products.ProductCollection)">
            <summary>
            Export product list to xml
            </summary>
            <param name="products">Products</param>
            <returns>Result in XML format</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExportManager.ExportProductsToXLS(System.String,NopSolutions.NopCommerce.BusinessLogic.Products.ProductCollection)">
            <summary>
            Export products to XLS
            </summary>
            <param name="FilePath">File path to use</param>
            <param name="products">Products</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExportManager.ExportOrdersToXML(NopSolutions.NopCommerce.BusinessLogic.Orders.OrderCollection)">
            <summary>
            Export order list to xml
            </summary>
            <param name="orders">Orders</param>
            <returns>Result in XML format</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExportManager.ExportOrdersToXLS(System.String,NopSolutions.NopCommerce.BusinessLogic.Orders.OrderCollection)">
            <summary>
            Export orders to XLS
            </summary>
            <param name="FilePath">File path to use</param>
            <param name="orders">Orders</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.ExportImport.ExportManager.ExportMessageTokensToXML">
            <summary>
            Export message tokens to xml
            </summary>
            <returns>Result in XML format</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollManager">
            <summary>
            Poll manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollManager.GetPollByID(System.Int32)">
            <summary>
            Gets a poll
            </summary>
            <param name="PollID">The poll identifier</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollManager.GetPollBySystemKeyword(System.String)">
            <summary>
            Gets a poll
            </summary>
            <param name="SystemKeyword">The poll system keyword</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollManager.GetPolls(System.Int32,System.Int32)">
            <summary>
            Gets poll collection
            </summary>
            <param name="LanguageID">Language identifier. 0 if you want to get all news</param>
            <param name="PollCount">Poll count to load. 0 if you want to get all polls</param>
            <returns>Poll collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollManager.DeletePoll(System.Int32)">
            <summary>
            Deletes a poll
            </summary>
            <param name="PollID">The poll identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollManager.GetAllPolls(System.Int32)">
            <summary>
            Gets all polls
            </summary>
            <param name="LanguageID">Language identifier. 0 if you want to get all news</param>
            <returns>Poll collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollManager.InsertPoll(System.Int32,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Inserts a poll
            </summary>
            <param name="LanguageID">The language identifier</param>
            <param name="Name">The name</param>
            <param name="SystemKeyword">The system keyword</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollManager.UpdatePoll(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Updates the poll
            </summary>
            <param name="PollID">The poll identifier</param>
            <param name="LanguageID">The language identifier</param>
            <param name="Name">The name</param>
            <param name="SystemKeyword">The system keyword</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollManager.PollVotingRecordExists(System.Int32,System.Int32)">
            <summary>
            Is voting record already exists
            </summary>
            <param name="PollID">Poll identifier</param>
            <param name="CustomerID">Customer identifier</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollManager.GetPollAnswerByID(System.Int32)">
            <summary>
            Gets a poll answer
            </summary>
            <param name="PollAnswerID">Poll answer identifier</param>
            <returns>Poll answer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollManager.GetPollAnswersByPollID(System.Int32)">
            <summary>
            Gets a poll answers by poll identifier
            </summary>
            <param name="PollID">Poll identifier</param>
            <returns>Poll answer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollManager.DeletePollAnswer(System.Int32)">
            <summary>
            Deletes a poll answer
            </summary>
            <param name="PollAnswerID">Poll answer identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollManager.InsertPollAnswer(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Inserts a poll answer
            </summary>
            <param name="PollID">The poll identifier</param>
            <param name="Name">The poll answer name</param>
            <param name="Count">The current count</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Poll answer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollManager.UpdatePoll(System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Updates the poll answer
            </summary>
            <param name="PollAnswerID">The poll answer identifier</param>
            <param name="PollID">The poll identifier</param>
            <param name="Name">The poll answer name</param>
            <param name="Count">The current count</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Poll answer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollManager.CreatePollVotingRecord(System.Int32,System.Int32)">
            <summary>
            Creates a poll voting record
            </summary>
            <param name="PollAnswerID">The poll answer identifier</param>
            <param name="CustomerID">Customer identifer</param>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightCollection">
            <summary>
            Represents a ShippingByWeight collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.PollCollection">
            <summary>
            Represents a poll collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightAndCountry">
            <summary>
            Represents a ShippingByWeightAndCountry
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightAndCountry.#ctor">
            <summary>
            Creates a new instance of the ShippingByWeightAndCountry class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightAndCountry.ShippingByWeightAndCountryID">
            <summary>
            Gets or sets the ShippingByWeightAndCountry identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightAndCountry.ShippingMethodID">
            <summary>
            Gets or sets the shipping method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightAndCountry.CountryID">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightAndCountry.From">
            <summary>
            Gets or sets the "from" value
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightAndCountry.To">
            <summary>
            Gets or sets the "to" value
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightAndCountry.UsePercentage">
            <summary>
            Gets or sets a value indicating whether to use percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightAndCountry.ShippingChargePercentage">
            <summary>
            Gets or sets the shipping charge percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightAndCountry.ShippingChargeAmount">
            <summary>
            Gets or sets the shipping charge amount
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightAndCountry.ShippingMethod">
            <summary>
            Gets the shipping method
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingByWeightAndCountry.Country">
            <summary>
            Gets the country
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.AttributeControlTypeEnum">
            <summary>
            Represents an attribute control type
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.AttributeControlTypeEnum.DropdownList">
            <summary>
            Dropdown list
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.AttributeControlTypeEnum.RadioList">
            <summary>
            Radio list
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.AttributeControlTypeEnum.Checkboxes">
            <summary>
            Checkboxes
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Products.Attributes.AttributeControlTypeEnum.TextBox">
            <summary>
            TextBox
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Messages.LocalizedMessageTemplate">
            <summary>
            Represents a localized message template
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.LocalizedMessageTemplate.#ctor">
            <summary>
            Creates a new instance of the LocalizedMessageTemplate class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.LocalizedMessageTemplate.MessageTemplateLocalizedID">
            <summary>
            Gets or sets the localized message template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.LocalizedMessageTemplate.MessageTemplateID">
            <summary>
            Gets or sets the message template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.LocalizedMessageTemplate.LanguageID">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.LocalizedMessageTemplate.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.LocalizedMessageTemplate.Subject">
            <summary>
            Gets or sets the subject
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.LocalizedMessageTemplate.Body">
            <summary>
            Gets or sets the body
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.LocalizedMessageTemplate.Language">
            <summary>
            Gets the language
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.LocalizedMessageTemplate.MessageTemplate">
            <summary>
            Gets the message template
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Installation.InstallerHelper">
            <summary>
            Represents an installer helper
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Installation.InstallerHelper.ConnectionStringIsSet">
            <summary>
            Checks if the connection string is set
            </summary>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Installation.InstallerHelper.InstallRedirect">
            <summary>
            Redirects user to the installation page
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Installation.InstallerHelper.TestConnection(System.Boolean,System.String,System.String,System.String,System.String)">
            <summary>
            Tests the given connection parameters
            </summary>
            <param name="trustedConnection">Avalue that indicates whether User ID and Password are specified in the connection (when false) or whether the current Windows account credentials are used for authentication (when true)</param>
            <param name="serverName">The name or network address of the instance of SQL Server to connect to</param>
            <param name="databaseName">The name of the database associated with the connection</param>
            <param name="userName">The user ID to be used when connecting to SQL Server</param>
            <param name="password">The password for the SQL Server account</param>
            <returns>Returns true if an attempt to open the database by using the connection succeeds.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Installation.InstallerHelper.GetCurrentVersion(System.String)">
            <summary>
            Gets a current version of installed application
            </summary>
            <param name="connectionString">Connection string</param>
            <returns>Current version</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Installation.InstallerHelper.SetCurrentVersion(System.String,System.String)">
            <summary>
            Sets a version of installed application
            </summary>
            <param name="connectionString">Connection string</param>
            <param name="Version">Version</param>
            <returns>Error</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Installation.InstallerHelper.CreateDatabase(System.String,System.String)">
            <summary>
            Creates a database on the server.
            </summary>
            <param name="DatabaseName">Database name</param>
            <param name="connectionString">Connection string</param>
            <returns>Error</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Installation.InstallerHelper.DatabaseExists(System.Boolean,System.String,System.String,System.String,System.String)">
            <summary>
            Checks if the specified database exists, returns true if database exists
            </summary>
            <param name="trustedConnection">A value that indicates whether User ID and Password are specified in the connection (when false) or whether the current Windows account credentials are used for authentication (when true)</param>
            <param name="serverName">The name or network address of the instance of SQL Server to connect to</param>
            <param name="databaseName">The name of the database associated with the connection</param>
            <param name="userName">The user ID to be used when connecting to SQL Server</param>
            <param name="password">The password for the SQL Server account</param>
            <returns>Returns true if the database exists.</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Installation.InstallerHelper.CreateConnectionString(System.Boolean,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Create contents of connection strings used by the SqlConnection class
            </summary>
            <param name="trustedConnection">Avalue that indicates whether User ID and Password are specified in the connection (when false) or whether the current Windows account credentials are used for authentication (when true)</param>
            <param name="serverName">The name or network address of the instance of SQL Server to connect to</param>
            <param name="databaseName">The name of the database associated with the connection</param>
            <param name="userName">The user ID to be used when connecting to SQL Server</param>
            <param name="password">The password for the SQL Server account</param>
            <param name="timeout">The connection timeout</param>
            <returns>Connection string</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Installation.InstallerHelper.SaveConnectionString(System.String,System.String)">
            <summary>
            Sets or adds the specified connection string in the ConnectionStrings section
            </summary>
            <param name="name">ConnectionString name</param>
            <param name="connectionString">Connection string</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Directory.StateProvinceManager">
            <summary>
            State province manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.StateProvinceManager.DeleteStateProvince(System.Int32)">
            <summary>
            Deletes a state/province
            </summary>
            <param name="StateProvinceID">The state/province identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.StateProvinceManager.GetStateProvinceByID(System.Int32)">
            <summary>
            Gets a state/province
            </summary>
            <param name="StateProvinceID">The state/province identifier</param>
            <returns>State/province</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.StateProvinceManager.GetStateProvinceByAbbreviation(System.String)">
            <summary>
            Gets a state/province 
            </summary>
            <param name="Abbreviation">The state/province abbreviation</param>
            <returns>State/province</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.StateProvinceManager.GetStateProvincesByCountryID(System.Int32)">
            <summary>
            Gets a state/province collection by country identifier
            </summary>
            <param name="CountryID">Country identifier</param>
            <returns>State/province collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.StateProvinceManager.InsertStateProvince(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Inserts a state/province
            </summary>
            <param name="CountryID">The country identifier</param>
            <param name="Name">The name</param>
            <param name="Abbreviation">The abbreviation</param>
            <param name="DisplayOrder">The display order</param>
            <returns>State/province</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Directory.StateProvinceManager.UpdateStateProvince(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Updates a state/province
            </summary>
            <param name="StateProvinceID">The state/province identifier</param>
            <param name="CountryID">The country identifier</param>
            <param name="Name">The name</param>
            <param name="Abbreviation">The abbreviation</param>
            <param name="DisplayOrder">The display order</param>
            <returns>State/province</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Directory.StateProvinceManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Payment.CreditCardTypeManager">
            <summary>
            Credit card type manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.CreditCardTypeManager.GetCreditCardTypeByID(System.Int32)">
            <summary>
            Gets a credit card type
            </summary>
            <param name="CreditCardTypeID">Credit card type identifier</param>
            <returns>Credit card type</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.CreditCardTypeManager.MarkCreditCardTypeAsDeleted(System.Int32)">
            <summary>
            Marks a credit card type as deleted
            </summary>
            <param name="CreditCardTypeID">Credit card type identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.CreditCardTypeManager.GetAllCreditCardTypes">
            <summary>
            Gets all credit card types
            </summary>
            <returns>Credit card type collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.CreditCardTypeManager.InsertCreditCardType(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Inserts a credit card type
            </summary>
            <param name="Name">The name</param>
            <param name="SystemKeyword">The system keyword</param>
            <param name="DisplayOrder">The display order</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <returns>A credit card type</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.CreditCardTypeManager.UpdateCreditCardType(System.Int32,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Updates the credit card type
            </summary>
            <param name="CreditCardTypeID">Credit card type identifier</param>
            <param name="Name">The name</param>
            <param name="SystemKeyword">The system keyword</param>
            <param name="DisplayOrder">The display order</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <returns>A credit card type</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Payment.CreditCardTypeManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerAttributeCollection">
            <summary>
            Represents a customer attribute collection
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.CustomerAttributeCollection.FindAttribute(System.String,System.Int32)">
            <summary>
            Returns a customer attribute that has the specified attribute value
            </summary>
            <param name="Key">Customer attribute key</param>
            <param name="CustomerID">Customer identifier</param>
            <returns>A customer attribute that has the specified attribute value; otherwise null</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager">
            <summary>
            Message manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.ProductListToHtmlTable(NopSolutions.NopCommerce.BusinessLogic.Orders.Order,System.Int32)">
            <summary>
            Convert a collection to a HTML table
            </summary>
            <param name="table">Order product variant collection</param>
            <param name="LanguageID">Language identifier</param>
            <returns>HTML table of products</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.GetMessageTemplateByID(System.Int32)">
            <summary>
            Gets a message template by template identifier
            </summary>
            <param name="MessageTemplateID">Message template identifier</param>
            <returns>Message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.GetAllMessageTemplates">
            <summary>
            Gets all message templates
            </summary>
            <returns>Message template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.GetLocalizedMessageTemplateByID(System.Int32)">
            <summary>
            Gets a localized message template by identifier
            </summary>
            <param name="LocalizedMessageTemplateID">Localized message template identifier</param>
            <returns>Localized message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.GetLocalizedMessageTemplate(System.String,System.Int32)">
            <summary>
            Gets a localized message template by name and language identifier
            </summary>
            <param name="Name">Message template name</param>
            <param name="LanguageID">Language identifier</param>
            <returns>Localized message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.DeleteLocalizedMessageTemplate(System.Int32)">
            <summary>
            Deletes a localized message template
            </summary>
            <param name="LocalizedMessageTemplateID">Message template identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.GetAllLocalizedMessageTemplates(System.String)">
            <summary>
            Gets all localized message templates
            </summary>
            <param name="MessageTemplatesName">Message template name</param>
            <returns>Localized message template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.InsertLocalizedMessageTemplate(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Inserts a localized message template
            </summary>
            <param name="MessageTemplateID">The message template identifier</param>
            <param name="LanguageID">The language identifier</param>
            <param name="Subject">The subject</param>
            <param name="Body">The body</param>
            <returns>Localized message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.UpdateLocalizedMessageTemplate(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Updates the localized message template
            </summary>
            <param name="MessageTemplateLocalizedID">The localized message template identifier</param>
            <param name="MessageTemplateID">The message template identifier</param>
            <param name="LanguageID">The language identifier</param>
            <param name="Subject">The subject</param>
            <param name="Body">The body</param>
            <returns>Localized message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.GetQueuedEmailByID(System.Int32)">
            <summary>
            Gets a queued email by identifier
            </summary>
            <param name="QueuedEmailID">Email item identifier</param>
            <returns>Email item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.DeleteQueuedEmail(System.Int32)">
            <summary>
            Deletes a queued email
            </summary>
            <param name="QueuedEmailID">Email item identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.GetAllQueuedEmails(System.Int32,System.Boolean,System.Int32)">
            <summary>
            Gets all queued emails
            </summary>
            <param name="QueuedEmailCount">Email item count. 0 if you want to get all items</param>
            <param name="LoadNotSentItemsOnly">A value indicating whether to load only not sent emails</param>
            <param name="MaxSendTries">Maximum send tries</param>
            <returns>Email item collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.GetAllQueuedEmails(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Boolean,System.Int32)">
            <summary>
            Gets all queued emails
            </summary>
            <param name="FromEmail">From Email</param>
            <param name="ToEmail">To Email</param>
            <param name="StartTime">The start time</param>
            <param name="EndTime">The end time</param>
            <param name="QueuedEmailCount">Email item count. 0 if you want to get all items</param>
            <param name="LoadNotSentItemsOnly">A value indicating whether to load only not sent emails</param>
            <param name="MaxSendTries">Maximum send tries</param>
            <returns>Email item collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.InsertQueuedEmail(System.Int32,System.Net.Mail.MailAddress,System.Net.Mail.MailAddress,System.String,System.String,System.String,System.String,System.DateTime,System.Int32,System.Nullable{System.DateTime})">
            <summary>
            Inserts a queued email
            </summary>
            <param name="Priority">The priority</param>
            <param name="From">From</param>
            <param name="To">To</param>
            <param name="Cc">Cc</param>
            <param name="Bcc">Bcc</param>
            <param name="Subject">Subject</param>
            <param name="Body">Body</param>
            <param name="CreatedOn">The date and time of item creation</param>
            <param name="SendTries">The send tries</param>
            <param name="SentOn">The sent date and time. Null if email is not sent yet</param>
            <returns>Queued email</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.InsertQueuedEmail(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.Int32,System.Nullable{System.DateTime})">
            <summary>
            Inserts a queued email
            </summary>
            <param name="Priority">The priority</param>
            <param name="From">From</param>
            <param name="FromName">From name</param>
            <param name="To">To</param>
            <param name="ToName">To name</param>
            <param name="Cc">Cc</param>
            <param name="Bcc">Bcc</param>
            <param name="Subject">Subject</param>
            <param name="Body">Body</param>
            <param name="CreatedOn">The date and time of item creation</param>
            <param name="SendTries">The send tries</param>
            <param name="SentOn">The sent date and time. Null if email is not sent yet</param>
            <returns>Queued email</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.UpdateQueuedEmail(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.Int32,System.Nullable{System.DateTime})">
            <summary>
            Updates a queued email
            </summary>
            <param name="QueuedEmailID">Email item identifier</param>
            <param name="Priority">The priority</param>
            <param name="From">From</param>
            <param name="FromName">From name</param>
            <param name="To">To</param>
            <param name="ToName">To name</param>
            <param name="Cc">Cc</param>
            <param name="Bcc">Bcc</param>
            <param name="Subject">Subject</param>
            <param name="Body">Body</param>
            <param name="CreatedOn">The date and time of item creation</param>
            <param name="SendTries">The send tries</param>
            <param name="SentOn">The sent date and time. Null if email is not sent yet</param>
            <returns>Queued email</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.SendOrderCompletedCustomerNotification(NopSolutions.NopCommerce.BusinessLogic.Orders.Order,System.Int32)">
            <summary>
            Sends an order completed notification to a customer
            </summary>
            <param name="order">Order instance</param>
            <param name="LanguageID">Message language identifier</param>
            <returns>Queued email identifier</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.SendOrderPlacedStoreOwnerNotification(NopSolutions.NopCommerce.BusinessLogic.Orders.Order,System.Int32)">
            <summary>
            Sends an order placed notification to a store owner
            </summary>
            <param name="order">Order instance</param>
            <param name="LanguageID">Message language identifier</param>
            <returns>Queued email identifier</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.SendQuantityBelowStoreOwnerNotification(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,System.Int32)">
            <summary>
            Sends a "quantity below" notification to a store owner
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="LanguageID">Message language identifier</param>
            <returns>Queued email identifier</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.SendOrderPlacedCustomerNotification(NopSolutions.NopCommerce.BusinessLogic.Orders.Order,System.Int32)">
            <summary>
            Sends an order placed notification to a customer
            </summary>
            <param name="order">Order instance</param>
            <param name="LanguageID">Message language identifier</param>
            <returns>Queued email identifier</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.SendOrderShippedCustomerNotification(NopSolutions.NopCommerce.BusinessLogic.Orders.Order,System.Int32)">
            <summary>
            Sends an order shipped notification to a customer
            </summary>
            <param name="order">Order instance</param>
            <param name="LanguageID">Message language identifier</param>
            <returns>Queued email identifier</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.SendOrderCancelledCustomerNotification(NopSolutions.NopCommerce.BusinessLogic.Orders.Order,System.Int32)">
            <summary>
            Sends an order cancelled notification to a customer
            </summary>
            <param name="order">Order instance</param>
            <param name="LanguageID">Message language identifier</param>
            <returns>Queued email identifier</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.SendCustomerWelcomeMessage(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Int32)">
            <summary>
            Sends a welcome message to a customer
            </summary>
            <param name="customer">Customer instance</param>
            <param name="LanguageID">Message language identifier</param>
            <returns>Queued email identifier</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.SendCustomerEmailValidationMessage(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Int32)">
            <summary>
            Sends an email validation message to a customer
            </summary>
            <param name="customer">Customer instance</param>
            <param name="LanguageID">Message language identifier</param>
            <returns>Queued email identifier</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.SendCustomerPasswordRecoveryMessage(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Int32)">
            <summary>
            Sends password recovery message to a customer
            </summary>
            <param name="customer">Customer instance</param>
            <param name="LanguageID">Message language identifier</param>
            <returns>Queued email identifier</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.SendEmailAFriendMessage(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Int32,NopSolutions.NopCommerce.BusinessLogic.Products.Product,System.String,System.String)">
            <summary>
            Sends "email a friend" message
            </summary>
            <param name="customer">Customer instance</param>
            <param name="LanguageID">Message language identifier</param>
            <param name="product">Product instance</param>
            <param name="FriendsEmail">Friend's email</param>
            <param name="PersonalMessage">Personal message</param>
            <returns>Queued email identifier</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.SendNewForumTopicMessage(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic,NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum,System.Int32)">
            <summary>
            Sends a forum subscription message to a customer
            </summary>
            <param name="customer">Customer instance</param>
            <param name="forumTopic">Forum Topic</param>
            <param name="forum">Forum</param>
            <param name="LanguageID">Message language identifier</param>
            <returns>Queued email identifier</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.SendNewForumPostMessage(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic,NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum,System.Int32)">
            <summary>
            Sends a forum subscription message to a customer
            </summary>
            <param name="customer">Customer instance</param>
            <param name="forumTopic">Forum Topic</param>
            <param name="forum">Forum</param>
            <param name="LanguageID">Message language identifier</param>
            <returns>Queued email identifier</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.SendNewsCommentNotificationMessage(NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsComment,System.Int32)">
            <summary>
            Sends a news comment notification message to a store owner
            </summary>
            <param name="newsComment">News comment</param>
            <param name="LanguageID">Message language identifier</param>
            <returns>Queued email identifier</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.SendBlogCommentNotificationMessage(NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogComment,System.Int32)">
            <summary>
            Sends a blog comment notification message to a store owner
            </summary>
            <param name="blogComment">Blog comment</param>
            <param name="LanguageID">Message language identifier</param>
            <returns>Queued email identifier</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.SendProductReviewNotificationMessage(NopSolutions.NopCommerce.BusinessLogic.Products.ProductReview,System.Int32)">
            <summary>
            Sends a product review notification message to a store owner
            </summary>
            <param name="productReview">Product review</param>
            <param name="LanguageID">Message language identifier</param>
            <returns>Queued email identifier</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.SendEmail(System.String,System.String,System.String,System.String)">
            <summary>
            Sends an email
            </summary>
            <param name="Subject">Subject</param>
            <param name="Body">Body</param>
            <param name="From">From</param>
            <param name="To">To</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.SendEmail(System.String,System.String,System.Net.Mail.MailAddress,System.Net.Mail.MailAddress)">
            <summary>
            Sends an email
            </summary>
            <param name="Subject">Subject</param>
            <param name="Body">Body</param>
            <param name="From">From</param>
            <param name="To">To</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.SendEmail(System.String,System.String,System.Net.Mail.MailAddress,System.Net.Mail.MailAddress,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Sends an email
            </summary>
            <param name="Subject">Subject</param>
            <param name="Body">Body</param>
            <param name="From">From</param>
            <param name="To">To</param>
            <param name="bcc">Bcc</param>
            <param name="cc">Cc</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.GetListOfAllowedTokens">
            <summary>
            Gets list of allowed (supported) message tokens
            </summary>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.GetListOfCampaignAllowedTokens">
            <summary>
            Gets list of allowed (supported) message tokens for campaigns
            </summary>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.ReplaceMessageTemplateTokens(NopSolutions.NopCommerce.BusinessLogic.Orders.Order,System.String,System.Int32)">
            <summary>
            Replaces a message template tokens
            </summary>
            <param name="order">Order instance</param>
            <param name="Template">Template</param>
            <param name="LanguageID">Language identifier</param>
            <returns>New template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.ReplaceMessageTemplateTokens(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.String)">
            <summary>
            Replaces a message template tokens
            </summary>
            <param name="customer">Customer instance</param>
            <param name="Template">Template</param>
            <returns>New template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.ReplaceMessageTemplateTokens(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,NopSolutions.NopCommerce.BusinessLogic.Products.Product,System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Replaces a message template tokens
            </summary>
            <param name="customer">Customer instance</param>
            <param name="product">Product instance</param>
            <param name="Template">Template</param>
            <param name="AdditinalKeys">Additinal keys</param>
            <returns>New template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.ReplaceMessageTemplateTokens(NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumTopic,NopSolutions.NopCommerce.BusinessLogic.Content.Forums.Forum,System.String)">
            <summary>
            Replaces a message template tokens
            </summary>
            <param name="customer">Customer instance</param>
            <param name="forumTopic">Forum Topic</param>
            <param name="forum">Forum</param>
            <param name="Template">Template</param>
            <returns>New template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.ReplaceMessageTemplateTokens(NopSolutions.NopCommerce.BusinessLogic.Products.ProductVariant,System.String,System.Int32)">
            <summary>
            Replaces a message template tokens
            </summary>
            <param name="productVariant">Product variant</param>
            <param name="Template">Template</param>
            <param name="LanguageID">Language identifier</param>
            <returns>New template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.ReplaceMessageTemplateTokens(NopSolutions.NopCommerce.BusinessLogic.Content.NewsManagement.NewsComment,System.String)">
            <summary>
            Replaces a message template tokens
            </summary>
            <param name="newsComment">News comment</param>
            <param name="Template">Template</param>
            <returns>New template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.ReplaceMessageTemplateTokens(NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogComment,System.String)">
            <summary>
            Replaces a message template tokens
            </summary>
            <param name="blogComment">Blog comment</param>
            <param name="Template">Template</param>
            <returns>New template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.ReplaceMessageTemplateTokens(NopSolutions.NopCommerce.BusinessLogic.Products.ProductReview,System.String)">
            <summary>
            Replaces a message template tokens
            </summary>
            <param name="productReview">Product review</param>
            <param name="Template">Template</param>
            <returns>New template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.FormatContactUsFormText(System.String)">
            <summary>
            Formats the contact us form text
            </summary>
            <param name="Text">Text</param>
            <returns>Formatted text</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.AdminEmailAddress">
            <summary>
            Gets or sets an admin email address
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.AdminEmailDisplayName">
            <summary>
            Gets or sets an admin email display name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.AdminEmailHost">
            <summary>
            Gets or sets an admin email host
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.AdminEmailPort">
            <summary>
            Gets or sets an admin email port
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.AdminEmailUser">
            <summary>
            Gets or sets an admin email user name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.AdminEmailPassword">
            <summary>
            Gets or sets an admin email password
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.AdminEmailUseDefaultCredentials">
            <summary>
            Gets or sets a value that controls whether the default system credentials of the application are sent with requests.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageManager.AdminEmailEnableSsl">
            <summary>
            Gets or sets a value that controls whether the SmtpClient uses Secure Sockets Layer (SSL) to encrypt the connection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountTypeEnum">
            <summary>
            Represents a discount type (need to be synchronize with [Nop_DiscountType] table
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountTypeEnum.AssignedToWholeOrder">
            <summary>
            Assigned to whole order
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Promo.Discounts.DiscountTypeEnum.AssignedToSKUs">
            <summary>
            Assigned to product variants (SKUs)
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Media.PictureCollection">
            <summary>
            Represents a picture collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ProductManufacturer">
            <summary>
            Represents a product manufacturer mapping
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ProductManufacturer.#ctor">
            <summary>
            Creates a new instance of the ProductManufacturer class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ProductManufacturer.ProductManufacturerID">
            <summary>
            Gets or sets the ProductManufacturer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ProductManufacturer.ProductID">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ProductManufacturer.ManufacturerID">
            <summary>
            Gets or sets the manufacturer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ProductManufacturer.IsFeaturedProduct">
            <summary>
            Gets or sets a value indicating whether the product is featured
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ProductManufacturer.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ProductManufacturer.Manufacturer">
            <summary>
            Gets the manufacturer
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Manufacturers.ProductManufacturer.Product">
            <summary>
            Gets the product
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageTemplate">
            <summary>
            Represents a message template
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageTemplate.#ctor">
            <summary>
            Creates a new instance of the MessageTemplate class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageTemplate.MessageTemplateID">
            <summary>
            Gets or sets the message template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Messages.MessageTemplate.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Tasks.TaskManager">
            <summary>
            Represents task manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tasks.TaskManager.Initialize(System.String,System.String)">
            <summary>
            Initializes the task manager with the property values specified in the configuration file.
            </summary>
            <param name="configFile">Configuration file</param>
            <param name="nodePath">Node path</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tasks.TaskManager.Initialize(System.Xml.XmlNode)">
            <summary>
            Initializes the task manager with the property values specified in the configuration file.
            </summary>
            <param name="node">Node</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tasks.TaskManager.Start">
            <summary>
            Starts the task manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tasks.TaskManager.Stop">
            <summary>
            Stops the task manager
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tasks.TaskManager.Instance">
            <summary>
            Gets the task mamanger instance
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tasks.TaskManager.TaskThreads">
            <summary>
            Gets a list of task threads of this task manager
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderStatus">
            <summary>
            Represents an order status
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderStatus.#ctor">
            <summary>
            Creates a new instance of the OrderStatus class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderStatus.OrderStatusID">
            <summary>
            Gets or sets the order status identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderStatus.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogPost">
            <summary>
            Represents a blog post
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogPost.#ctor">
            <summary>
            Creates a new instance of the BlogPost class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogPost.BlogPostID">
            <summary>
            Gets or sets the blog post identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogPost.LanguageID">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogPost.BlogPostTitle">
            <summary>
            Gets or sets the blog post title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogPost.BlogPostBody">
            <summary>
            Gets or sets the blog post title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogPost.BlogPostAllowComments">
            <summary>
            Gets or sets a value indicating whether the blog post comments are allowed 
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogPost.CreatedByID">
            <summary>
            Gets or sets the user identifier who created the blog post
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogPost.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogPost.Language">
            <summary>
            Gets the language
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogPost.CreatedBy">
            <summary>
            Gets the user who created the blog post
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Blog.BlogPost.BlogComments">
            <summary>
            Gets the blog comment collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumPost">
            <summary>
            Represents a forum post
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumPost.#ctor">
            <summary>
            Creates a new instance of the ForumPost class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumPost.ForumPostID">
            <summary>
            Gets or sets the forum post identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumPost.TopicID">
            <summary>
            Gets or sets the forum topic identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumPost.UserID">
            <summary>
            Gets or sets the user identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumPost.Text">
            <summary>
            Gets or sets the text
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumPost.IPAddress">
            <summary>
            Gets or sets the IP address
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumPost.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumPost.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumPost.Topic">
            <summary>
            Gets the topic
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumPost.User">
            <summary>
            Gets the user
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumCollection">
            <summary>
            Represents a forum collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.PrivateMessageCollection">
            <summary>
            Represents a private massage collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingMethodManager">
            <summary>
            Shipping method manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingMethodManager.DeleteShippingMethod(System.Int32)">
            <summary>
            Deletes a shipping method
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingMethodManager.GetShippingMethodByID(System.Int32)">
            <summary>
            Gets a shipping method
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <returns>Shipping method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingMethodManager.GetAllShippingMethods">
            <summary>
            Gets all shipping methods
            </summary>
            <returns>Shipping method collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingMethodManager.InsertShippingMethod(System.String,System.String,System.Int32)">
            <summary>
            Inserts a shipping method
            </summary>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Shipping method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingMethodManager.UpdateShippingMethod(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Updates the shipping method
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Shipping method</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingMethodManager.CacheEnabled">
            <summary>
            Gets a value indicating whether cache is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Audit.LogTypeEnum">
            <summary>
            Represents a log item type (need to be synchronize with [Nop_LogType] table)
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Audit.LogTypeEnum.Unknown">
            <summary>
            Unknown log item type
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Audit.LogTypeEnum.CustomerError">
            <summary>
            Customer error log item type
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Audit.LogTypeEnum.MailError">
            <summary>
            Mail error log item type
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Audit.LogTypeEnum.OrderError">
            <summary>
            Order error log item type
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Audit.LogTypeEnum.AdministrationArea">
            <summary>
            Administration area log item type
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Audit.LogTypeEnum.CommonError">
            <summary>
            Common error log item type
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Audit.LogTypeEnum.ShippingErrror">
            <summary>
            Shipping error log item type
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.BusinessLogic.Audit.LogTypeEnum.TaxError">
            <summary>
            Tax error log item type
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.ProductTypeCollection">
            <summary>
            Represents a product type collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Audit.LogCollection">
            <summary>
            Represents a log collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address">
            <summary>
            Represents an address
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address.#ctor">
            <summary>
            Creates a new instance of the Address class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address.AddressID">
            <summary>
            Gets or sets the address identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address.CustomerID">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address.IsBillingAddress">
            <summary>
            Gets or sets a value indicating whether the address is billing or shipping
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address.FirstName">
            <summary>
            Gets or sets the first name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address.LastName">
            <summary>
            Gets or sets the last name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address.PhoneNumber">
            <summary>
            Gets or sets the phone number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address.Email">
            <summary>
            Gets or sets the email
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address.FaxNumber">
            <summary>
            Gets or sets the fax number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address.Company">
            <summary>
            Gets or sets the company
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address.Address1">
            <summary>
            Gets or sets the address 1
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address.Address2">
            <summary>
            Gets or sets the address 2
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address.City">
            <summary>
            Gets or sets the city
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address.StateProvinceID">
            <summary>
            Gets or sets the state/province identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address.ZipPostalCode">
            <summary>
            Gets or sets the zip/postal code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address.CountryID">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address.Customer">
            <summary>
            Gets the customer
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address.StateProvince">
            <summary>
            Gets the state/province
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Address.Country">
            <summary>
            Gets the country
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentManager">
            <summary>
            Payment manager
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentManager.ProcessPayment(NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentInfo,NopSolutions.NopCommerce.BusinessLogic.CustomerManagement.Customer,System.Guid,NopSolutions.NopCommerce.BusinessLogic.Payment.ProcessPaymentResult@)">
            <summary>
            Process payment
            </summary>
            <param name="paymentInfo">Payment info required for an order processing</param>
            <param name="customer">Customer</param>
            <param name="OrderGuid">Unique order identifier</param>
            <param name="processPaymentResult">Process payment result</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentManager.PostProcessPayment(NopSolutions.NopCommerce.BusinessLogic.Orders.Order)">
            <summary>
            Post process payment (payment gateways that require redirecting)
            </summary>
            <param name="order">Order</param>
            <returns>The error status, or String.Empty if no errors</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentManager.GetAdditionalHandlingFee(System.Int32)">
            <summary>
            Gets additional handling fee
            </summary>
            <param name="PaymentMethodID">Payment method identifier</param>
            <returns>Additional handling fee</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentManager.CanCapture(System.Int32)">
            <summary>
            Gets a value indicating whether capture is allowed from admin panel
            </summary>
            <param name="PaymentMethodID">Payment method identifier</param>
            <returns>A value indicating whether capture is allowed from admin panel</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentManager.Capture(NopSolutions.NopCommerce.BusinessLogic.Orders.Order,NopSolutions.NopCommerce.BusinessLogic.Payment.ProcessPaymentResult@)">
            <summary>
            Captures payment (from admin panel)
            </summary>
            <param name="order">Order</param>
            <param name="processPaymentResult">Process payment result</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Payment.PaymentManager.GetMaskedCreditCardNumber(System.String)">
            <summary>
            Gets masked credit card number
            </summary>
            <param name="CreditCardNumber">Credit card number</param>
            <returns>Masked credit card number</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Media.DownloadCollection">
            <summary>
            Represents a download collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.Poll">
            <summary>
            Represents a poll
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.Poll.#ctor">
            <summary>
            Creates a new instance of the Poll class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.Poll.PollID">
            <summary>
            Gets or sets the poll identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.Poll.LanguageID">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.Poll.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.Poll.SystemKeyword">
            <summary>
            Gets or sets the system keyword
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.Poll.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.Poll.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.Poll.Language">
            <summary>
            Gets the language
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.Poll.TotalVotes">
            <summary>
            Gets the poll total vote record count
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Content.Polls.Poll.PollAnswers">
            <summary>
            Gets the poll answers
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.ProductSpecificationAttribute">
            <summary>
            Represents a product specification attribute
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.ProductSpecificationAttribute.#ctor">
            <summary>
            Creates a new instance of the ProductSpecificationAttribute class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.ProductSpecificationAttribute.ProductSpecificationAttributeID">
            <summary>
            Gets or sets the product specification attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.ProductSpecificationAttribute.ProductID">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.ProductSpecificationAttribute.SpecificationAttributeOptionID">
            <summary>
            Gets or sets the specification attribute option identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.ProductSpecificationAttribute.AllowFiltering">
            <summary>
            Gets or sets whether the attribute can be filtered by
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.ProductSpecificationAttribute.ShowOnProductPage">
            <summary>
            Gets or sets whether the attrbiute will be shown on the product page
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.ProductSpecificationAttribute.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.ProductSpecificationAttribute.SpecificationAttribute">
            <summary>
            Gets the specification attribute
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.ProductSpecificationAttribute.SpecificationAttributeOption">
            <summary>
            Gets the specification attribute option
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Products.Specs.ProductSpecificationAttribute.Product">
            <summary>
            Gets the product
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxProvider">
            <summary>
            Represents a tax provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxProvider.#ctor">
            <summary>
            Creates a new instance of the tax provider class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxProvider.TaxProviderID">
            <summary>
            Gets or sets the tax provider identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxProvider.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxProvider.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxProvider.ConfigureTemplatePath">
            <summary>
            Gets or sets the configure template path
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxProvider.ClassName">
            <summary>
            Gets or sets the class name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxProvider.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Tax.TaxProvider.IsDefault">
            <summary>
            Gets or a value indicating whether the entity is default
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingStatus">
            <summary>
            Represents a shipping status
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingStatus.#ctor">
            <summary>
            Creates a new instance of the ShippingStatus class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingStatus.ShippingStatusID">
            <summary>
            Gets or sets the shipping status identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Shipping.ShippingStatus.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderNote">
            <summary>
            Represents an order note
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderNote.#ctor">
            <summary>
            Creates a new instance of the OrderNote class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderNote.OrderNoteID">
            <summary>
            Gets or sets the order note identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderNote.OrderID">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderNote.Note">
            <summary>
            Gets or sets the note
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.OrderNote.CreatedOn">
            <summary>
            Gets or sets the date and time of order note creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Orders.BestSellersReportLine">
            <summary>
            Represents a best sellers report line
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.BusinessLogic.Orders.BestSellersReportLine.#ctor">
            <summary>
            Creates a new instance of the BestSellersReportLine class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.BestSellersReportLine.ProductVariantID">
            <summary>
            Gets or sets the product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.BestSellersReportLine.SalesTotalCount">
            <summary>
            Gets or sets the total count
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.BusinessLogic.Orders.BestSellersReportLine.SalesTotalAmount">
            <summary>
            Gets or sets the total amount
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.BusinessLogic.Content.Forums.ForumPostCollection">
            <summary>
            Represents a forum post collection
            </summary>
        </member>
    </members>
</doc>
