<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nop.DataAccess.SqlServer</name>
    </assembly>
    <members>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider">
            <summary>
            Order provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.GetOrderByID(System.Int32)">
            <summary>
            Gets an order
            </summary>
            <param name="OrderID">The order identifier</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.SearchOrders(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Search orders
            </summary>
            <param name="StartTime">Order start time; null to load all orders</param>
            <param name="EndTime">Order end time; null to load all orders</param>
            <param name="CustomerEmail">Customer email</param>
            <param name="OrderStatusID">Order status identifier; null to load all orders</param>
            <param name="PaymentStatusID">Order payment status identifier; null to load all orders</param>
            <param name="ShippingStatusID">Order shipping status identifier; null to load all orders</param>
            <returns>Order collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.OrderProductVariantReport(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get order product variant sales report
            </summary>
            <param name="StartTime">Order start time; null to load all</param>
            <param name="EndTime">Order end time; null to load all</param>
            <param name="OrderStatusID">Order status identifier; null to load all orders</param>
            <param name="PaymentStatusID">Order payment status identifier; null to load all orders</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.BestSellersReport(System.Int32,System.Int32,System.Int32)">
            <summary>
            Get the bests sellers report
            </summary>
            <param name="LastDays">Last number of days</param>
            <param name="RecordsToReturn">Number of products to return</param>
            <param name="OrderBy">1 - order by total count, 2 - Order by total amount</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.OrderAverageReport(System.Int32)">
            <summary>
            Get order average report
            </summary>
            <param name="OrderStatusID">Order status identifier</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.GetOrdersByCustomerID(System.Int32)">
            <summary>
            Gets all orders by customer identifier
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <returns>Order collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.GetOrderByAuthorizationTransactionIDAndPaymentMethodID(System.String,System.Int32)">
            <summary>
            Gets an order by authorization transaction identifier
            </summary>
            <param name="AuthorizationTransactionID">Authorization transaction identifier</param>
            <param name="PaymentMethodID">Payment method identifier</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.GetOrdersByAffiliateID(System.Int32)">
            <summary>
            Gets all orders by affiliate identifier
            </summary>
            <param name="AffiliateID">Affiliate identifier</param>
            <returns>Order collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.InsertOrder(System.Guid,System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.Decimal,System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.Int32,System.Nullable{System.DateTime},System.Boolean,System.DateTime)">
            <summary>
            Inserts an order
            </summary>
            <param name="OrderGUID">The order identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="CustomerLanguageID">The customer language identifier</param>
            <param name="CustomerTaxDisplayTypeID">The customer tax display type identifier</param>
            <param name="OrderSubtotalInclTax">The order subtotal (incl tax)</param>
            <param name="OrderSubtotalExclTax">The order subtotal (excl tax)</param>
            <param name="OrderShippingInclTax">The order shipping (incl tax)</param>
            <param name="OrderShippingExclTax">The order shipping (excl tax)</param>
            <param name="PaymentMethodAdditionalFeeInclTax">The payment method additional fee (incl tax)</param>
            <param name="PaymentMethodAdditionalFeeExclTax">The payment method additional fee (excl tax)</param>
            <param name="OrderTax">The order tax</param>
            <param name="OrderTotal">The order total</param>
            <param name="OrderDiscount">The order discount</param>
            <param name="OrderSubtotalInclTaxInCustomerCurrency">The order subtotal incl tax (customer currency)</param>
            <param name="OrderSubtotalExclTaxInCustomerCurrency">The order subtotal excl tax (customer currency)</param>
            <param name="OrderShippingInclTaxInCustomerCurrency">The order shipping incl tax (customer currency)</param>
            <param name="OrderShippingExclTaxInCustomerCurrency">The order shipping excl tax (customer currency)</param>
            <param name="PaymentMethodAdditionalFeeInclTaxInCustomerCurrency">The payment method additional fee incl tax (customer currency)</param>
            <param name="PaymentMethodAdditionalFeeExclTaxInCustomerCurrency">The payment method additional fee excl tax (customer currency)</param>
            <param name="OrderTaxInCustomerCurrency">The order tax (customer currency)</param>
            <param name="OrderTotalInCustomerCurrency">The order total (customer currency)</param>
            <param name="CustomerCurrencyCode">The customer currency code</param>
            <param name="OrderWeight">The order weight</param>
            <param name="AffiliateID">The affiliate identifier</param>
            <param name="OrderStatusID">The order status identifier</param>
            <param name="AllowStoringCreditCardNumber">The value indicating whether storing of credit card number is allowed</param>
            <param name="CardType">The card type</param>
            <param name="CardName">The card name</param>
            <param name="CardNumber">The card number</param>
            <param name="MaskedCreditCardNumber">The masked credit card number</param>
            <param name="CardCVV2">The card CVV2</param>
            <param name="CardExpirationMonth">The card expiration month</param>
            <param name="CardExpirationYear">The card expiration year</param>
            <param name="PaymentMethodID">The payment method identifier</param>
            <param name="PaymentMethodName">The payment method name</param>
            <param name="AuthorizationTransactionID">The authorization transaction ID</param>
            <param name="AuthorizationTransactionCode">The authorization transaction code</param>
            <param name="AuthorizationTransactionResult">The authorization transaction result</param>
            <param name="CaptureTransactionID">The capture transaction ID</param>
            <param name="CaptureTransactionResult">The capture transaction result</param>
            <param name="PurchaseOrderNumber">The purchase order number</param>
            <param name="PaymentStatusID">The payment status identifier</param>
            <param name="BillingFirstName">The billing first name</param>
            <param name="BillingLastName">The billing last name</param>
            <param name="BillingPhoneNumber">he billing phone number</param>
            <param name="BillingEmail">The billing email</param>
            <param name="BillingFaxNumber">The billing fax number</param>
            <param name="BillingCompany">The billing company</param>
            <param name="BillingAddress1">The billing address 1</param>
            <param name="BillingAddress2">The billing address 2</param>
            <param name="BillingCity">The billing city</param>
            <param name="BillingStateProvince">The billing state/province</param>
            <param name="BillingStateProvinceID">The billing state/province identifier</param>
            <param name="BillingZipPostalCode">The billing zip/postal code</param>
            <param name="BillingCountry">The billing country</param>
            <param name="BillingCountryID">The billing country identifier</param>
            <param name="ShippingStatusID">The shipping status identifier</param>
            <param name="ShippingFirstName">The shipping first name</param>
            <param name="ShippingLastName">The shipping last name</param>
            <param name="ShippingPhoneNumber">The shipping phone number</param>
            <param name="ShippingEmail">The shipping email</param>
            <param name="ShippingFaxNumber">The shipping fax number</param>
            <param name="ShippingCompany">The shipping  company</param>
            <param name="ShippingAddress1">The shipping address 1</param>
            <param name="ShippingAddress2">The shipping address 2</param>
            <param name="ShippingCity">The shipping city</param>
            <param name="ShippingStateProvince">The shipping state/province</param>
            <param name="ShippingStateProvinceID">The shipping state/province identifier</param>
            <param name="ShippingZipPostalCode">The shipping zip/postal code</param>
            <param name="ShippingCountry">The shipping country</param>
            <param name="ShippingCountryID">The shipping country identifier</param>
            <param name="ShippingMethod">The shipping method</param>
            <param name="ShippingRateComputationMethodID">The shipping rate computation method identifier</param>
            <param name="ShippedDate">The shipped date and time</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="CreatedOn">The date and time of order creation</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.UpdateOrder(System.Int32,System.Guid,System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.Decimal,System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.Int32,System.Nullable{System.DateTime},System.Boolean,System.DateTime)">
            <summary>
            Updates the order
            </summary>
            <param name="OrderID">The order identifier</param>
            <param name="OrderGUID">The order identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="CustomerLanguageID">The customer language identifier</param>
            <param name="CustomerTaxDisplayTypeID">The customer tax display type identifier</param>
            <param name="OrderSubtotalInclTax">The order subtotal (incl tax)</param>
            <param name="OrderSubtotalExclTax">The order subtotal (excl tax)</param>
            <param name="OrderShippingInclTax">The order shipping (incl tax)</param>
            <param name="OrderShippingExclTax">The order shipping (excl tax)</param>
            <param name="PaymentMethodAdditionalFeeInclTax">The payment method additional fee (incl tax)</param>
            <param name="PaymentMethodAdditionalFeeExclTax">The payment method additional fee (excl tax)</param>
            <param name="OrderTax">The order tax</param>
            <param name="OrderTotal">The order total</param>
            <param name="OrderDiscount">The order discount</param>
            <param name="OrderSubtotalInclTaxInCustomerCurrency">The order subtotal incl tax (customer currency)</param>
            <param name="OrderSubtotalExclTaxInCustomerCurrency">The order subtotal excl tax (customer currency)</param>
            <param name="OrderShippingInclTaxInCustomerCurrency">The order shipping incl tax (customer currency)</param>
            <param name="OrderShippingExclTaxInCustomerCurrency">The order shipping excl tax (customer currency)</param>
            <param name="PaymentMethodAdditionalFeeInclTaxInCustomerCurrency">The payment method additional fee incl tax (customer currency)</param>
            <param name="PaymentMethodAdditionalFeeExclTaxInCustomerCurrency">The payment method additional fee excl tax (customer currency)</param>
            <param name="OrderTaxInCustomerCurrency">The order tax (customer currency)</param>
            <param name="OrderTotalInCustomerCurrency">The order total (customer currency)</param>
            <param name="CustomerCurrencyCode">The customer currency code</param>
            <param name="OrderWeight">The order weight</param>
            <param name="AffiliateID">The affiliate identifier</param>
            <param name="OrderStatusID">The order status identifier</param>
            <param name="AllowStoringCreditCardNumber">The value indicating whether storing of credit card number is allowed</param>
            <param name="CardType">The card type</param>
            <param name="CardName">The card name</param>
            <param name="CardNumber">The card number</param>
            <param name="MaskedCreditCardNumber">The masked credit card number</param>
            <param name="CardCVV2">The card CVV2</param>
            <param name="CardExpirationMonth">The card expiration month</param>
            <param name="CardExpirationYear">The card expiration year</param>
            <param name="PaymentMethodID">The payment method identifier</param>
            <param name="PaymentMethodName">The payment method name</param>
            <param name="AuthorizationTransactionID">The authorization transaction ID</param>
            <param name="AuthorizationTransactionCode">The authorization transaction code</param>
            <param name="AuthorizationTransactionResult">The authorization transaction result</param>
            <param name="CaptureTransactionID">The capture transaction ID</param>
            <param name="CaptureTransactionResult">The capture transaction result</param>
            <param name="PurchaseOrderNumber">The purchase order number</param>
            <param name="PaymentStatusID">The payment status identifier</param>
            <param name="BillingFirstName">The billing first name</param>
            <param name="BillingLastName">The billing last name</param>
            <param name="BillingPhoneNumber">he billing phone number</param>
            <param name="BillingEmail">The billing email</param>
            <param name="BillingFaxNumber">The billing fax number</param>
            <param name="BillingCompany">The billing company</param>
            <param name="BillingAddress1">The billing address 1</param>
            <param name="BillingAddress2">The billing address 2</param>
            <param name="BillingCity">The billing city</param>
            <param name="BillingStateProvince">The billing state/province</param>
            <param name="BillingStateProvinceID">The billing state/province identifier</param>
            <param name="BillingZipPostalCode">The billing zip/postal code</param>
            <param name="BillingCountry">The billing country</param>
            <param name="BillingCountryID">The billing country identifier</param>
            <param name="ShippingStatusID">The shipping status identifier</param>
            <param name="ShippingFirstName">The shipping first name</param>
            <param name="ShippingLastName">The shipping last name</param>
            <param name="ShippingPhoneNumber">The shipping phone number</param>
            <param name="ShippingEmail">The shipping email</param>
            <param name="ShippingFaxNumber">The shipping fax number</param>
            <param name="ShippingCompany">The shipping  company</param>
            <param name="ShippingAddress1">The shipping address 1</param>
            <param name="ShippingAddress2">The shipping address 2</param>
            <param name="ShippingCity">The shipping city</param>
            <param name="ShippingStateProvince">The shipping state/province</param>
            <param name="ShippingStateProvinceID">The shipping state/province identifier</param>
            <param name="ShippingZipPostalCode">The shipping zip/postal code</param>
            <param name="ShippingCountry">The shipping country</param>
            <param name="ShippingCountryID">The shipping country identifier</param>
            <param name="ShippingMethod">The shipping method</param>
            <param name="ShippingRateComputationMethodID">The shipping rate computation method identifier</param>
            <param name="ShippedDate">The shipped date and time</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="CreatedOn">The date and time of order creation</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.GetOrderNoteByID(System.Int32)">
            <summary>
            Gets an order note
            </summary>
            <param name="OrderNoteID">Order note identifier</param>
            <returns>Order note</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.GetOrderNoteByOrderID(System.Int32)">
            <summary>
            Gets an order notes by order identifier
            </summary>
            <param name="OrderID">Order identifier</param>
            <returns>Order note collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.DeleteOrderNote(System.Int32)">
            <summary>
            Deletes an order note
            </summary>
            <param name="OrderNoteID">Order note identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.InsertOrderNote(System.Int32,System.String,System.DateTime)">
            <summary>
            Inserts an order note
            </summary>
            <param name="OrderID">The order identifier</param>
            <param name="Note">The note</param>
            <param name="CreatedOn">The date and time of order note creation</param>
            <returns>Order note</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.UpdateOrderNote(System.Int32,System.Int32,System.String,System.DateTime)">
            <summary>
            Updates the order note
            </summary>
            <param name="OrderNoteID">The order note identifier</param>
            <param name="OrderID">The order identifier</param>
            <param name="Note">The note</param>
            <param name="CreatedOn">The date and time of order note creation</param>
            <returns>Order note</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.GetOrderProductVariantByID(System.Int32)">
            <summary>
            Gets an order product variant
            </summary>
            <param name="OrderProductVariantID">Order product variant identifier</param>
            <returns>Order product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.GetOrderProductVariantsByOrderID(System.Int32)">
            <summary>
            Gets an order product variants by the order identifier
            </summary>
            <param name="OrderID">The order identifier</param>
            <returns>Order product variant collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.InsertOrderProductVariant(System.Int32,System.Int32,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.Int32,System.Decimal,System.Decimal,System.Int32)">
            <summary>
            Inserts a order product variant
            </summary>
            <param name="OrderID">The order identifier</param>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="UnitPriceInclTax">The unit price in primary store currency (incl tax)</param>
            <param name="UnitPriceExclTax">The unit price in primary store currency (excl tax)</param>
            <param name="PriceInclTax">The price in primary store currency (incl tax)</param>
            <param name="PriceExclTax">The price in primary store currency (excl tax)</param>
            <param name="UnitPriceInclTaxInCustomerCurrency">The unit price in primary store currency (incl tax)</param>
            <param name="UnitPriceExclTaxInCustomerCurrency">The unit price in customer currency (excl tax)</param>
            <param name="PriceInclTaxInCustomerCurrency">The price in primary store currency (incl tax)</param>
            <param name="PriceExclTaxInCustomerCurrency">The price in customer currency (excl tax)</param>
            <param name="AttributeDescription">The attribute description</param>
            <param name="Quantity">The quantity</param>
            <param name="DiscountAmountInclTax">The discount amount (incl tax)</param>
            <param name="DiscountAmountExclTax">The discount amount (excl tax)</param>
            <param name="DownloadCount">The download count</param>
            <returns>Order product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.UpdateOrderProductVariant(System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.Int32,System.Decimal,System.Decimal,System.Int32)">
            <summary>
            Updates the order product variant
            </summary>
            <param name="OrderProductVariantID">The order product variant identifier</param>
            <param name="OrderID">The order identifier</param>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="UnitPriceInclTax">The unit price in primary store currency (incl tax)</param>
            <param name="UnitPriceExclTax">The unit price in primary store currency (excl tax)</param>
            <param name="PriceInclTax">The price in primary store currency (incl tax)</param>
            <param name="PriceExclTax">The price in primary store currency (excl tax)</param>
            <param name="UnitPriceInclTaxInCustomerCurrency">The unit price in primary store currency (incl tax)</param>
            <param name="UnitPriceExclTaxInCustomerCurrency">The unit price in customer currency (excl tax)</param>
            <param name="PriceInclTaxInCustomerCurrency">The price in primary store currency (incl tax)</param>
            <param name="PriceExclTaxInCustomerCurrency">The price in customer currency (excl tax)</param>
            <param name="AttributeDescription">The attribute description</param>
            <param name="Quantity">The quantity</param>
            <param name="DiscountAmountInclTax">The discount amount (incl tax)</param>
            <param name="DiscountAmountExclTax">The discount amount (excl tax)</param>
            <param name="DownloadCount">The download count</param>
            <returns>Order product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.GetOrderStatusByID(System.Int32)">
            <summary>
            Gets an order status by ID
            </summary>
            <param name="OrderStatusID">Order status identifier</param>
            <returns>Order status</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.GetAllOrderStatuses">
            <summary>
            Gets all order statuses
            </summary>
            <returns>Order status collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLOrderProvider.GetOrderReport(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets an order report
            </summary>
            <param name="OrderStatusID">Order status identifier; null to load all orders</param>
            <param name="PaymentStatusID">Order payment status identifier; null to load all orders</param>
            <param name="ShippingStatusID">Order shipping status identifier; null to load all orders</param>
            <returns>DataTable</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.SQLLanguageProvider">
            <summary>
            Language provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLLanguageProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLLanguageProvider.DeleteLanguage(System.Int32)">
            <summary>
            Deletes a language
            </summary>
            <param name="LanguageID">Language identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLLanguageProvider.GetAllLanguages(System.Boolean)">
            <summary>
            Gets all languages
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Language collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLLanguageProvider.GetLanguageByID(System.Int32)">
            <summary>
            Gets a language
            </summary>
            <param name="LanguageID">Language identifier</param>
            <returns>Language</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLLanguageProvider.InsertLanguage(System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Inserts a language
            </summary>
            <param name="Name">The name</param>
            <param name="LanguageCulture">The language culture</param>
            <param name="Published">A value indicating whether the language is published</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Language</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLLanguageProvider.UpdateLanguage(System.Int32,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Updates a language
            </summary>
            <param name="LanguageID">Language identifier</param>
            <param name="Name">The name</param>
            <param name="LanguageCulture">The language culture</param>
            <param name="Published">A value indicating whether the language is published</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Language</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Audit.SQLSearchLogProvider">
            <summary>
            Search log provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SQLSearchLogProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SQLSearchLogProvider.SearchTermReport(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32)">
            <summary>
            Get order product variant sales report
            </summary>
            <param name="StartTime">Order start time; null to load all</param>
            <param name="EndTime">Order end time; null to load all</param>
            <param name="Count">Item count. 0 if you want to get all items</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SQLSearchLogProvider.GetAllSearchLogs">
            <summary>
            Gets all search log items
            </summary>
            <returns>Search log collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SQLSearchLogProvider.GetSearchLogByID(System.Int32)">
            <summary>
            Gets a search log item
            </summary>
            <param name="SearchLogID">The search log item identifier</param>
            <returns>Search log item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SQLSearchLogProvider.InsertSearchLog(System.String,System.Int32,System.DateTime)">
            <summary>
            Inserts a search log item
            </summary>
            <param name="SearchTerm">The search term</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Search log item</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.SQLAffiliateProvider">
            <summary>
            Affiliate provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.SQLAffiliateProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.SQLAffiliateProvider.GetAffiliateByID(System.Int32)">
            <summary>
            Gets an affiliate by affiliate identifier
            </summary>
            <param name="AffiliateID">Affiliate identifier</param>
            <returns>Affiliate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.SQLAffiliateProvider.GetAllAffiliates">
            <summary>
            Gets all affiliates
            </summary>
            <returns>Affiliate collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.SQLAffiliateProvider.InsertAffiliate(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Inserts an affiliate
            </summary>
            <param name="FirstName">The first name</param>
            <param name="LastName">The last name</param>
            <param name="MiddleName">The middle name</param>
            <param name="PhoneNumber">The phone number</param>
            <param name="Email">The email</param>
            <param name="FaxNumber">The fax number</param>
            <param name="Company">The company</param>
            <param name="Address1">The address 1</param>
            <param name="Address2">The address 2</param>
            <param name="City">The city</param>
            <param name="StateProvince">The state/province</param>
            <param name="ZipPostalCode">The zip/postal code</param>
            <param name="CountryID">The country identifier</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="Active">A value indicating whether the entity is active</param>
            <returns>An affiliate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.SQLAffiliateProvider.UpdateAffiliate(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Updates the affiliate
            </summary>
            <param name="AffiliateID">The affiliate identifier</param>
            <param name="FirstName">The first name</param>
            <param name="LastName">The last name</param>
            <param name="MiddleName">The middle name</param>
            <param name="PhoneNumber">The phone number</param>
            <param name="Email">The email</param>
            <param name="FaxNumber">The fax number</param>
            <param name="Company">The company</param>
            <param name="Address1">The address 1</param>
            <param name="Address2">The address 2</param>
            <param name="City">The city</param>
            <param name="StateProvince">The state/province</param>
            <param name="ZipPostalCode">The zip/postal code</param>
            <param name="CountryID">The country identifier</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="Active">A value indicating whether the entity is active</param>
            <returns>An affiliate</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider">
            <summary>
            Product provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetAllProducts(System.Boolean)">
            <summary>
            Gets all products
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetAllProducts(System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Boolean,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32},System.Boolean,System.Int32@)">
            <summary>
            Gets all products
            </summary>
            <param name="CategoryID">Category identifier</param>
            <param name="ManufacturerID">Manufacturer identifier</param>
            <param name="FeaturedProducts">A value indicating whether loaded products are marked as featured (relates only to categories and manufacturers). 0 to load featured products only, 1 to load not featured products only, null to load all products</param>
            <param name="PriceMin">Minimum price</param>
            <param name="PriceMax">Maximum price</param>
            <param name="Keywords">Keywords</param>
            <param name="SearchDescriptions">A value indicating whether to search in descriptions</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="FilteredSpecs">Filtered product specification identifiers</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="TotalRecords">Total records</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetAllProductsDisplayedOnHomePage(System.Boolean)">
            <summary>
            Gets all products displayed on the home page
            </summary>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetProductByID(System.Int32)">
            <summary>
            Gets product
            </summary>
            <param name="ProductID">Product identifier</param>
            <returns>Product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.InsertProduct(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Inserts a product
            </summary>
            <param name="Name">The name</param>
            <param name="ShortDescription">The short description</param>
            <param name="FullDescription">The full description</param>
            <param name="AdminComment">The admin comment</param>
            <param name="ProductTypeID">The product type identifier</param>
            <param name="TemplateID">The template identifier</param>
            <param name="ShowOnHomePage">A value indicating whether to show the product on the home page</param>
            <param name="MetaKeywords">The meta keywords</param>
            <param name="MetaDescription">The meta description</param>
            <param name="MetaTitle">The meta title</param>
            <param name="SEName">The search-engine name</param>
            <param name="AllowCustomerReviews">A value indicating whether the product allows customer reviews</param>
            <param name="AllowCustomerRatings">A value indicating whether the product allows customer ratings</param>
            <param name="RatingSum">The rating sum</param>
            <param name="TotalRatingVotes">The total rating votes</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="CreatedOn">The date and time of product creation</param>
            <param name="UpdatedOn">The date and time of product update</param>
            <returns>Product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.UpdateProduct(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Updates the product
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="Name">The name</param>
            <param name="ShortDescription">The short description</param>
            <param name="FullDescription">The full description</param>
            <param name="AdminComment">The admin comment</param>
            <param name="ProductTypeID">The product type identifier</param>
            <param name="ShowOnHomePage">A value indicating whether to show the product on the home page</param>
            <param name="TemplateID">The template identifier</param>
            <param name="MetaKeywords">The meta keywords</param>
            <param name="MetaDescription">The meta description</param>
            <param name="MetaTitle">The meta title</param>
            <param name="SEName">The search-engine name</param>
            <param name="AllowCustomerReviews">A value indicating whether the product allows customer reviews</param>
            <param name="AllowCustomerRatings">A value indicating whether the product allows customer ratings</param>
            <param name="RatingSum">The rating sum</param>
            <param name="TotalRatingVotes">The total rating votes</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="CreatedOn">The date and time of product creation</param>
            <param name="UpdatedOn">The date and time of product update</param>
            <returns>Product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetProductsAlsoPurchasedByID(System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a list of products purchased by other customers who purchased the above
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="TotalRecords">Total records</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.SetProductRating(System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Sets a product rating
            </summary>
            <param name="ProductID">Product identifer</param>
            <param name="CustomerID">Customer identifer</param>
            <param name="Rating">Rating</param>
            <param name="RatedOn">Rating was created on</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetRecentlyAddedProducts(System.Int32,System.Boolean)">
            <summary>
            Gets a recently added products list
            </summary>
            <param name="Number">Number of products to load</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Recently added products list</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.DeleteProductPicture(System.Int32)">
            <summary>
            Deletes a product picture mapping
            </summary>
            <param name="ProductPictureID">Product picture mapping identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetProductPictureByID(System.Int32)">
            <summary>
            Gets a product picture mapping
            </summary>
            <param name="ProductPictureID">Product picture mapping identifier</param>
            <returns>Product picture mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.InsertProductPicture(System.Int32,System.Int32,System.Int32)">
            <summary>
            Inserts a product picture mapping
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="PictureID">Picture identifier</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product picture mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.UpdateProductPicture(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the product picture mapping
            </summary>
            <param name="ProductPictureID">Product picture mapping identifier</param>
            <param name="ProductID">Product identifier</param>
            <param name="PictureID">Picture identifier</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product picture mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetProductPicturesByProductID(System.Int32)">
            <summary>
            Gets all product picture mappings by product identifier
            </summary>
            <param name="ProductID">Product identifier</param>
            <returns>Product picture mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetProductReviewByID(System.Int32)">
            <summary>
            Gets a product review
            </summary>
            <param name="ProductReviewID">Product review identifier</param>
            <returns>Product review</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetProductReviewByProductID(System.Int32,System.Boolean)">
            <summary>
            Gets a product review collection by product identifier
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product review collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.DeleteProductReview(System.Int32)">
            <summary>
            Deletes a product review
            </summary>
            <param name="ProductReviewID">Product review identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetAllProductReviews(System.Boolean)">
            <summary>
            Gets all product reviews
            </summary>
            <returns>Product review collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.InsertProductReview(System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.DateTime)">
            <summary>
            Inserts a product review
            </summary>
            <param name="ProductID">The product identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="Title">The review title</param>
            <param name="ReviewText">The review text</param>
            <param name="Rating">The review rating</param>
            <param name="HelpfulYesTotal">Review helpful votes total</param>
            <param name="HelpfulNoTotal">Review not helpful votes total</param>
            <param name="IsApproved">A value indicating whether the product review is approved</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Product review</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.UpdateProductReview(System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.DateTime)">
            <summary>
            Updates the product review
            </summary>
            <param name="ProductReviewID">The product review identifier</param>
            <param name="ProductID">The product identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="Title">The review title</param>
            <param name="ReviewText">The review text</param>
            <param name="Rating">The review rating</param>
            <param name="HelpfulYesTotal">Review helpful votes total</param>
            <param name="HelpfulNoTotal">Review not helpful votes total</param>
            <param name="IsApproved">A value indicating whether the product review is approved</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Product review</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.SetProductRatingHelpfulness(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets a product rating helpfulness
            </summary>
            <param name="ProductReviewID">Product review identifer</param>
            <param name="CustomerID">Customer identifer</param>
            <param name="WasHelpful">A value indicating whether the product review was helpful or not </param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetProductVariantByID(System.Int32)">
            <summary>
            Gets a product variant
            </summary>
            <param name="ProductVariantID">Product variant identifier</param>
            <returns>Product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetLowStockProductVariants">
            <summary>
            Get low stock product variants
            </summary>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.InsertProductVariant(System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Decimal,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a product variant
            </summary>
            <param name="ProductID">The product identifier</param>
            <param name="Name">The name</param>
            <param name="SKU">The SKU</param>
            <param name="Description">The description</param>
            <param name="AdminComment">The admin comment</param>
            <param name="ManufacturerPartNumber">The manufacturer part number</param>
            <param name="IsDownload">A value indicating whether the product variant is download</param>
            <param name="DownloadID">The download identifier</param>
            <param name="UnlimitedDownloads">The value indicating whether this downloadable product can be downloaded unlimited number of times</param>
            <param name="MaxNumberOfDownloads">The maximum number of downloads</param>
            <param name="HasSampleDownload">The value indicating whether the product variant has a sample download file</param>
            <param name="SampleDownloadID">The sample download identifier</param>
            <param name="IsShipEnabled">A value indicating whether the entity is ship enabled</param>
            <param name="IsFreeShipping">A value indicating whether the entity is free shipping</param>
            <param name="AdditionalShippingCharge">The additional shipping charge</param>
            <param name="IsTaxExempt">A value indicating whether the product variant is marked as tax exempt</param>
            <param name="TaxCategoryID">The tax category identifier</param>
            <param name="StockQuantity">The stock quantity</param>
            <param name="ManageInventory">The value indicating whether to manage inventory</param>
            <param name="MinStockQuantity">The minimum stock quantity</param>
            <param name="LowStockActivityID">The low stock activity identifier</param>
            <param name="NotifyAdminForQuantityBelow">The quantity when admin should be notified</param>
            <param name="OrderMinimumQuantity">The order minimum quantity</param>
            <param name="OrderMaximumQuantity">The order maximum quantity</param>
            <param name="WarehouseId">The warehouse identifier</param>
            <param name="DisableBuyButton">A value indicating whether to disable buy button</param>
            <param name="Price">The price</param>
            <param name="OldPrice">The old price</param>
            <param name="Weight">The weight</param>
            <param name="Length">The length</param>
            <param name="Width">The width</param>
            <param name="Height">The height</param>
            <param name="PictureID">The picture identifier</param>
            <param name="AvailableStartDateTime">The available start date and time</param>
            <param name="AvailableEndDateTime">The available end date and time</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.UpdateProductVariant(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Decimal,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the product variant
            </summary>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="ProductID">The product identifier</param>
            <param name="Name">The name</param>
            <param name="SKU">The SKU</param>
            <param name="Description">The description</param>
            <param name="AdminComment">The admin comment</param>
            <param name="ManufacturerPartNumber">The manufacturer part number</param>
            <param name="IsDownload">A value indicating whether the product variant is download</param>
            <param name="DownloadID">The download identifier</param>
            <param name="UnlimitedDownloads">The value indicating whether this downloadable product can be downloaded unlimited number of times</param>
            <param name="MaxNumberOfDownloads">The maximum number of downloads</param>
            <param name="HasSampleDownload">The value indicating whether the product variant has a sample download file</param>
            <param name="SampleDownloadID">The sample download identifier</param>
            <param name="IsShipEnabled">A value indicating whether the entity is ship enabled</param>
            <param name="IsFreeShipping">A value indicating whether the entity is free shipping</param>
            <param name="AdditionalShippingCharge">The additional shipping charge</param>
            <param name="IsTaxExempt">A value indicating whether the product variant is marked as tax exempt</param>
            <param name="TaxCategoryID">The tax category identifier</param>
            <param name="StockQuantity">The stock quantity</param>
            <param name="ManageInventory">The value indicating whether to manage inventory</param>
            <param name="MinStockQuantity">The minimum stock quantity</param>
            <param name="LowStockActivityID">The low stock activity identifier</param>
            <param name="NotifyAdminForQuantityBelow">The quantity when admin should be notified</param>
            <param name="OrderMinimumQuantity">The order minimum quantity</param>
            <param name="OrderMaximumQuantity">The order maximum quantity</param>
            <param name="WarehouseId">The warehouse identifier</param>
            <param name="DisableBuyButton">A value indicating whether to disable buy button</param>
            <param name="Price">The price</param>
            <param name="OldPrice">The old price</param>
            <param name="Weight">The weight</param>
            <param name="Length">The length</param>
            <param name="Width">The width</param>
            <param name="Height">The height</param>
            <param name="PictureID">The picture identifier</param>
            <param name="AvailableStartDateTime">The available start date and time</param>
            <param name="AvailableEndDateTime">The available end date and time</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetProductVariantsByProductID(System.Int32,System.Boolean)">
            <summary>
            Gets product variants by product identifier
            </summary>
            <param name="ProductID">The product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product variant collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.DeleteRelatedProduct(System.Int32)">
            <summary>
            Deletes a related product
            </summary>
            <param name="RelatedProductID">Related product identifer</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetRelatedProductsByProductID1(System.Int32,System.Boolean)">
            <summary>
            Gets a related product collection by product identifier
            </summary>
            <param name="ProductID1">The first product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Related product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetRelatedProductByID(System.Int32)">
            <summary>
            Gets a related product
            </summary>
            <param name="RelatedProductID">Related product identifer</param>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.InsertRelatedProduct(System.Int32,System.Int32,System.Int32)">
            <summary>
            Inserts a related product
            </summary>
            <param name="ProductID1">The first product identifier</param>
            <param name="ProductID2">The second product identifier</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Related product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.UpdateRelatedProduct(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates a related product
            </summary>
            <param name="RelatedProductID">The related product identifier</param>
            <param name="ProductID1">The first product identifier</param>
            <param name="ProductID2">The second product identifier</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Related product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetAllProductTypes">
            <summary>
            Gets all product types
            </summary>
            <returns>Product type collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetProductTypeByID(System.Int32)">
            <summary>
            Gets a product type
            </summary>
            <param name="ProductTypeID">Product type identifier</param>
            <returns>Product type</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetProductVariantsByPricelistID(System.Int32)">
            <summary>
            Gets all product variants directly assigned to a pricelist
            </summary>
            <param name="PricelistID"></param>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetAllPricelists">
            <summary>
            Gets a collection of all available pricelists
            </summary>
            <returns>Collection of pricelists</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetPricelistByID(System.Int32)">
            <summary>
            Gets a pricelist
            </summary>
            <param name="PricelistID">Pricelist identifier</param>
            <returns>Pricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetPricelistByGUID(System.String)">
            <summary>
            Gets a pricelist
            </summary>
            <param name="PricelistGUID">Pricelist GUID</param>
            <returns>Pricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.InsertPricelist(System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Decimal,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Inserts a pricelist
            </summary>
            <param name="ExportModeID">Mode of list creation identifier</param>
            <param name="ExportTypeID">Export type identifier</param>
            <param name="AffiliateID">Affiliate connected to this pricelist (optional), links will be created with AffiliateID</param>
            <param name="DisplayName">Displayedname</param>
            <param name="ShortName">shortname to identify the pricelist</param>
            <param name="PricelistGuid">unique identifier to get pricelist "anonymous"</param>
            <param name="CacheTime">how long will the pricelist be in cached before new creation</param>
            <param name="FormatLocalization">what localization will be used (numeric formats, etc.) en-US, de-DE etc.</param>
            <param name="Description">Displayed description</param>
            <param name="AdminNotes">Admin can put some notes here, not displayed in public</param>
            <param name="Header">Headerline of the exported file (plain text)</param>
            <param name="Body">template for an exportet productvariant, uses delimiters and replacement strings</param>
            <param name="Footer">Footer line of the exportet file (plain text)</param>
            <param name="PriceAdjustmentTypeID">Type of price adjustment identifier</param>
            <param name="PriceAdjustment">price will be adjusted by this amount</param>
            <param name="OverrideIndivAdjustment">Use individual adjustment, if available, or override</param>
            <param name="CreatedOn">When was this record originally created</param>
            <param name="UpdatedOn">Last time this record was updated</param>
            <returns>Pricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.UpdatePricelist(System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Decimal,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Updates the Pricelist
            </summary>
            <param name="PricelistID">Unique Identifier</param>
            <param name="ExportModeID">Mode of list creation identifier</param>
            <param name="ExportTypeID">Export type identifier</param>
            <param name="AffiliateID">Affiliate connected to this pricelist (optional), links will be created with AffiliateID</param>
            <param name="DisplayName">Displayedname</param>
            <param name="ShortName">shortname to identify the pricelist</param>
            <param name="PricelistGuid">unique identifier to get pricelist "anonymous"</param>
            <param name="CacheTime">how long will the pricelist be in cached before new creation</param>
            <param name="FormatLocalization">what localization will be used (numeric formats, etc.) en-US, de-DE etc.</param>
            <param name="Description">Displayed description</param>
            <param name="AdminNotes">Admin can put some notes here, not displayed in public</param>
            <param name="Header">Headerline of the exported file (plain text)</param>
            <param name="Body">template for an exportet productvariant, uses delimiters and replacement strings</param>
            <param name="Footer">Footer line of the exportet file (plain text)</param>
            <param name="PriceAdjustmentTypeID">Type of price adjustment identifier</param>
            <param name="PriceAdjustment">price will be adjusted by this amount</param>
            <param name="OverrideIndivAdjustment">use individual adjustment, if available, or override</param>
            <param name="CreatedOn">When was this record originally created</param>
            <param name="UpdatedOn">Last time this recordset was updated</param>
            <returns>Pricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.DeletePricelist(System.Int32)">
            <summary>
            Deletes a Pricelist
            </summary>
            <param name="PricelistID">The PricelistID of the item to be deleted</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.DeleteProductVariantPricelist(System.Int32)">
            <summary>
            Deletes a ProductVariantPricelist
            </summary>
            <param name="ProductVariantPricelistID">ProductVariantPricelist identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetProductVariantPricelistByID(System.Int32)">
            <summary>
            Gets a ProductVariantPricelist
            </summary>
            <param name="ProductVariantPricelistID">ProductVariantPricelist identifier</param>
            <returns>ProductVariantPricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetProductVariantPricelist(System.Int32,System.Int32)">
            <summary>
            Gets ProductVariantPricelist
            </summary>
            <param name="ProductVariantID">ProductVariant identifier</param>
            <param name="PricelistID">Pricelist identifier</param>
            <returns>ProductVariantPricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.InsertProductVariantPricelist(System.Int32,System.Int32,System.Int32,System.Decimal,System.DateTime)">
            <summary>
            Inserts a ProductVariantPricelist
            </summary>
            <param name="ProductVariantID">The product variant identifer</param>
            <param name="PricelistID">The pricelist identifier</param>
            <param name="PriceAdjustmentTypeID">Price adjustment type identifier</param>
            <param name="PriceAdjustment">The price will be adjusted by this amount</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>ProductVariantPricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.UpdateProductVariantPricelist(System.Int32,System.Int32,System.Int32,System.Int32,System.Decimal,System.DateTime)">
            <summary>
            Updates the ProductVariantPricelist
            </summary>
            <param name="ProductVariantPricelistID">The product variant pricelist identifier</param>
            <param name="ProductVariantID">The product variant identifer</param>
            <param name="PricelistID">The pricelist identifier</param>
            <param name="PriceAdjustmentTypeID">Price adjustment type identifier</param>
            <param name="PriceAdjustment">The price will be adjusted by this amount</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>ProductVariantPricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetTierPriceByID(System.Int32)">
            <summary>
            Gets a tier price
            </summary>
            <param name="TierPriceID">Tier price identifier</param>
            <returns>Tier price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.GetTierPricesByProductVariantID(System.Int32)">
            <summary>
            Gets tier prices by product variant identifier
            </summary>
            <param name="ProductVariantID">Product variant identifier</param>
            <returns>Tier price collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.DeleteTierPrice(System.Int32)">
            <summary>
            Deletes a tier price
            </summary>
            <param name="TierPriceID">Tier price identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.InsertTierPrice(System.Int32,System.Int32,System.Decimal)">
            <summary>
            Inserts a tier price
            </summary>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="Quantity">The quantity</param>
            <param name="Price">The price</param>
            <returns>Tier price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SQLProductProvider.UpdateTierPrice(System.Int32,System.Int32,System.Int32,System.Decimal)">
            <summary>
            Updates the tier price
            </summary>
            <param name="TierPriceID">The tier price identifier</param>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="Quantity">The quantity</param>
            <param name="Price">The price</param>
            <returns>Tier price</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Audit.SQLLogProvider">
            <summary>
            Log provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SQLLogProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SQLLogProvider.DeleteLog(System.Int32)">
            <summary>
            Deletes a log item
            </summary>
            <param name="LogID">Log item identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SQLLogProvider.ClearLog">
            <summary>
            Clears a log
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SQLLogProvider.GetAllLogs">
            <summary>
            Gets all log items
            </summary>
            <returns>Log item collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SQLLogProvider.GetLogByID(System.Int32)">
            <summary>
            Gets a log item
            </summary>
            <param name="LogID">Log item identifier</param>
            <returns>Log item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SQLLogProvider.InsertLog(System.Int32,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.DateTime)">
            <summary>
            Inserts a log item
            </summary>
            <param name="LogTypeID">Log item type identifier</param>
            <param name="Severity">The severity</param>
            <param name="Message">The short message</param>
            <param name="Exception">The full exception</param>
            <param name="IPAddress">The IP address</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="PageURL">The page URL</param>
            <param name="CreatedOn">The date and time of instance creationL</param>
            <returns>Log item</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider">
            <summary>
            Specification attribute provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider.GetSpecificationAttributeFromReader(System.Data.IDataReader)">
            <summary>
            Maps a data reader to a spacification attribute
            </summary>
            <param name="dataReader">IDataReader</param>
            <returns>Specification attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider.GetSpecificationAttributeOptionFromReader(System.Data.IDataReader)">
            <summary>
            Maps a data reader to a specification attribute option
            </summary>
            <param name="dataReader">IDataReader</param>
            <returns>Specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider.GetProductSpecificationAttributeFromReader(System.Data.IDataReader)">
            <summary>
            Maps a data reader to a product specification attribute
            </summary>
            <param name="dataReader">IDataReader</param>
            <returns>Product specification attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider.GetSpecificationAttributeOptionFilterFromReader(System.Data.IDataReader)">
            <summary>
            Maps a data reader to a specification attribute option filter
            </summary>
            <param name="dataReader">IDataReader</param>
            <returns>Specification attribute option filter</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider.GetSpecificationAttributeByID(System.Int32)">
            <summary>
            Gets a specification attribute
            </summary>
            <param name="SpecificationAttributeID">The specification attribute identifier</param>
            <returns>Specification attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider.GetSpecificationAttributes">
            <summary>
            Gets specification attribute collection
            </summary>
            <returns>Specification attribute collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider.DeleteSpecificationAttribute(System.Int32)">
            <summary>
            Deletes a specification attribute
            </summary>
            <param name="SpecificationAttributeID">The specification attribute identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider.InsertSpecificationAttribute(System.String,System.Int32)">
            <summary>
            Inserts a specification attribute
            </summary>
            <param name="name">The name</param>
            <param name="displayOrder">Display order</param>
            <returns>Specification attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider.UpdateSpecificationAttribute(System.Int32,System.String,System.Int32)">
            <summary>
            Updates the specification attribute
            </summary>
            <param name="specificationAttributeID">The specification attribute identifier</param>
            <param name="name">The name</param>
            <param name="displayOrder">Display order</param>
            <returns>Specification attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider.GetSpecificationAttributeOptions">
            <summary>
            Gets a specification attribute option collection
            </summary>
            <returns>Specification attribute option collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider.GetSpecificationAttributeOptionByID(System.Int32)">
            <summary>
            Gets a specification attribute option
            </summary>
            <param name="specificationAttributeOptionID">The specification attribute option identifier</param>
            <returns>Specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider.GetSpecificationAttributeOptionsBySpecificationAttributeID(System.Int32)">
            <summary>
            Gets specification attribute option collection
            </summary>
            <param name="specificationAttributeID">Specification attribute unique identifier</param>
            <returns>Specification attribute option collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider.InsertSpecificationAttributeOption(System.Int32,System.String,System.Int32)">
            <summary>
            Inserts a specification attribute option
            </summary>
            <param name="name">The name</param>
            <param name="displayOrder">Display order</param>
            <returns>Specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider.UpdateSpecificationAttributeOption(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Updates the specification attribute option
            </summary>
            <param name="specificationAttributeOptionID">The specification attribute option identifier</param>
            <param name="name">The name</param>
            <param name="displayOrder">Display order</param>
            <returns>Specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider.DeleteSpecificationAttributeOption(System.Int32)">
            <summary>
            Deletes a specification attribute option
            </summary>
            <param name="specificationAttributeOptionID">The specification attribute option identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider.DeleteProductSpecificationAttribute(System.Int32)">
            <summary>
            Deletes a product specification attribute mapping
            </summary>
            <param name="ProductSpecificationAttributeID">Product specification attribute identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider.GetProductSpecificationAttributesByProductID(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Gets a product specification attribute mapping collection
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="AllowFiltering">0 to load attributes with AllowFiltering set to false, 0 to load attributes with AllowFiltering set to true, null to load all attributes</param>
            <param name="ShowOnProductPage">0 to load attributes with ShowOnProductPage set to false, 0 to load attributes with ShowOnProductPage set to true, null to load all attributes</param>
            <returns>Product specification attribute mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider.GetProductSpecificationAttributeByID(System.Int32)">
            <summary>
            Gets a product specification attribute mapping 
            </summary>
            <param name="ProductSpecificationAttributeID">Product specification attribute mapping identifier</param>
            <returns>Product specification attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider.InsertProductSpecificationAttribute(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Inserts a product specification attribute mapping
            </summary>
            <param name="productID">Product identifier</param>
            <param name="specificationAttributeOptionID">Specification attribute option identifier</param>
            <param name="allowFiltering">Allow product filtering by this attribute</param>
            <param name="showOnProductPage">Show the attribute on the product page</param>
            <param name="displayOrder">The display order</param>
            <returns>Product specification attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider.UpdateProductSpecificationAttribute(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Updates the product specification attribute mapping
            </summary>
            <param name="productSpecificationAttributeID">product specification attribute mapping identifier</param>
            <param name="productID">Product identifier</param>
            <param name="specificationAttributeOptionID">Specification attribute option identifier</param>
            <param name="allowFiltering">Allow product filtering by this attribute</param>
            <param name="showOnProductPage">Show the attribute onn the product page</param>
            <param name="displayOrder">The display order</param>
            <returns>Product specification attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SQLSpecificationAttributeProvider.GetSpecificationAttributeOptionFilterByCategoryID(System.Int32)">
            <summary>
            Gets a specification attribute option filter mapping collection by category id
            </summary>
            <param name="CategoryID">Product category identifier</param>
            <returns>Specification attribute option filter mapping collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Media.SQLPictureProvider">
            <summary>
            Picture provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.SQLPictureProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.SQLPictureProvider.GetPictureByID(System.Int32)">
            <summary>
            Gets a picture
            </summary>
            <param name="PictureID">Picture identifier</param>
            <returns>Picture</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.SQLPictureProvider.DeletePicture(System.Int32)">
            <summary>
            Deletes a picture
            </summary>
            <param name="PictureID">Picture identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.SQLPictureProvider.InsertPicture(System.Byte[],System.String,System.Boolean)">
            <summary>
            Inserts a picture
            </summary>
            <param name="PictureBinary">The picture binary</param>
            <param name="Extension">The picture extension</param>
            <param name="IsNew">A value indicating whether the picture is new</param>
            <returns>Picture</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.SQLPictureProvider.UpdatePicture(System.Int32,System.Byte[],System.String,System.Boolean)">
            <summary>
            Updates the picture
            </summary>
            <param name="PictureID">The picture identifier</param>
            <param name="PictureBinary">The picture binary</param>
            <param name="Extension">The picture extension</param>
            <param name="IsNew">A value indicating whether the picture is new</param>
            <returns>Picture</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Warehouses.SQLWarehouseProvider">
            <summary>
            Warehouse provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Warehouses.SQLWarehouseProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Warehouses.SQLWarehouseProvider.GetAllWarehouses">
            <summary>
            Gets all warehouses
            </summary>
            <returns>Warehouse collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Warehouses.SQLWarehouseProvider.GetWarehouseByID(System.Int32)">
            <summary>
            Gets a warehouse
            </summary>
            <param name="WarehouseID">The warehouse identifier</param>
            <returns>Warehouse</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Warehouses.SQLWarehouseProvider.InsertWarehouse(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Inserts a warehouse
            </summary>
            <param name="Name">The name</param>
            <param name="PhoneNumber">The phone number</param>
            <param name="Email">The email</param>
            <param name="FaxNumber">The fax number</param>
            <param name="Address1">The address 1</param>
            <param name="Address2">The address 2</param>
            <param name="City">The city</param>
            <param name="StateProvince">The state/province</param>
            <param name="ZipPostalCode">The zip/postal code</param>
            <param name="CountryID">The country identifier</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Warehouse</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Warehouses.SQLWarehouseProvider.UpdateWarehouse(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Updates the warehouse
            </summary>
            <param name="WarehouseID">The warehouse identifier</param>
            <param name="Name">The name</param>
            <param name="PhoneNumber">The phone number</param>
            <param name="Email">The email</param>
            <param name="FaxNumber">The fax number</param>
            <param name="Address1">The address 1</param>
            <param name="Address2">The address 2</param>
            <param name="City">The city</param>
            <param name="StateProvince">The state/province</param>
            <param name="ZipPostalCode">The zip/postal code</param>
            <param name="CountryID">The country identifier</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Warehouse</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.SQLCampaignProvider">
            <summary>
            Campaign provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.SQLCampaignProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.SQLCampaignProvider.GetCampaignByID(System.Int32)">
            <summary>
            Gets a campaign by campaign identifier
            </summary>
            <param name="CampaignID">Campaign identifier</param>
            <returns>Message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.SQLCampaignProvider.DeleteCampaign(System.Int32)">
            <summary>
            Deletes a campaign
            </summary>
            <param name="CampaignID">Campaign identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.SQLCampaignProvider.GetAllCampaigns">
            <summary>
            Gets all campaigns
            </summary>
            <returns>Campaign collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.SQLCampaignProvider.InsertCampaign(System.String,System.String,System.String,System.DateTime)">
            <summary>
            Inserts a campaign
            </summary>
            <param name="Name">The name</param>
            <param name="Subject">The subject</param>
            <param name="Body">The body</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Campaign</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.SQLCampaignProvider.UpdateCampaign(System.Int32,System.String,System.String,System.String,System.DateTime)">
            <summary>
            Updates the campaign
            </summary>
            <param name="CampaignID">The campaign identifier</param>
            <param name="Name">The name</param>
            <param name="Subject">The subject</param>
            <param name="Body">The body</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Campaign</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider">
            <summary>
            Forum provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.DeleteForumGroup(System.Int32)">
            <summary>
            Deletes a forum group
            </summary>
            <param name="ForumGroupID">The forum group identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.GetForumGroupByID(System.Int32)">
            <summary>
            Gets a forum group
            </summary>
            <param name="ForumGroupID">The forum group identifier</param>
            <returns>Forum group</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.GetAllForumGroups">
            <summary>
            Gets all forum groups
            </summary>
            <returns>Forum groups</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.InsertForumGroup(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a forum group
            </summary>
            <param name="Name">The language name</param>
            <param name="Description">The description</param>
            <param name="DisplayOrder">The display order</param>        
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Forum group</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.UpdateForumGroup(System.Int32,System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the forum group
            </summary>
            <param name="ForumGroupID">The forum group identifier</param>
            <param name="Name">The language name</param>
            <param name="Description">The description</param>
            <param name="DisplayOrder">The display order</param>        
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Forum group</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.DeleteForum(System.Int32)">
            <summary>
            Deletes a forum
            </summary>
            <param name="ForumID">The forum identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.GetForumByID(System.Int32)">
            <summary>
            Gets a forum
            </summary>
            <param name="ForumID">The forum identifier</param>
            <returns>Forum</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.GetAllForumsByGroupID(System.Int32)">
            <summary>
            Gets forums by group identifier
            </summary>
            <param name="ForumGroupID">The forum group identifier</param>
            <returns>Forums</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.InsertForum(System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a forum
            </summary>
            <param name="ForumGroupID">The forum group identifier</param>
            <param name="Name">The language name</param>
            <param name="Description">The description</param>
            <param name="NumTopics">The number of topics</param>
            <param name="NumPosts">The number of posts</param>
            <param name="LastTopicID">The last topic identifier</param>
            <param name="LastPostID">The last post identifier</param>
            <param name="LastPostUserID">The last post user identifier</param>
            <param name="LastPostTime">The last post date and time</param>
            <param name="DisplayOrder">The display order</param>        
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Forum</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.UpdateForum(System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the forum
            </summary>
            <param name="ForumID">The forum identifier</param>
            <param name="ForumGroupID">The forum group identifier</param>
            <param name="Name">The language name</param>
            <param name="Description">The description</param>
            <param name="NumTopics">The number of topics</param>
            <param name="NumPosts">The number of posts</param>
            <param name="LastTopicID">The last topic identifier</param>
            <param name="LastPostID">The last post identifier</param>
            <param name="LastPostUserID">The last post user identifier</param>
            <param name="LastPostTime">The last post date and time</param>
            <param name="DisplayOrder">The display order</param>        
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Forum</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.UpdateForumStats(System.Int32)">
            <summary>
            Gets a forum
            </summary>
            <param name="ForumID">The forum identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.DeleteTopic(System.Int32)">
            <summary>
            Deletes a topic
            </summary>
            <param name="ForumTopicID">The topic identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.GetTopicByID(System.Int32,System.Boolean)">
            <summary>
            Gets a topic
            </summary>
            <param name="ForumTopicID">The topic identifier</param>
            <param name="IncreaseViews">The value indicating whether to increase topic views</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.GetAllTopics(System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all topics
            </summary>
            <param name="ForumID">The forum group identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="Keywords">Keywords</param>
            <param name="SearchPosts">A value indicating whether to search in posts</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="TotalRecords">Total records</param>
            <returns>Topics</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.GetActiveTopics(System.Int32,System.Int32)">
            <summary>
            Gets active topics
            </summary>
            <param name="ForumID">The forum group identifier</param>
            <param name="TopicCount">Topic count. 0 if you want to get all topics</param>
            <returns>Topics</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.InsertTopic(System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.DateTime,System.DateTime)">
            <summary>
            Inserts a topic
            </summary>
            <param name="ForumID">The forum identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="TopicTypeID">The topic type identifier</param>
            <param name="Subject">The subject</param>
            <param name="NumPosts">The number of posts</param>
            <param name="Views">The number of views</param>
            <param name="LastPostID">The last post identifier</param>
            <param name="LastPostUserID">The last post user identifier</param>
            <param name="LastPostTime">The last post date and time</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.UpdateTopic(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.DateTime,System.DateTime)">
            <summary>
            Updates the topic
            </summary>
            <param name="ForumTopicID">The forum topic identifier</param>
            <param name="ForumID">The forum identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="TopicTypeID">The topic type identifier</param>
            <param name="Subject">The subject</param>
            <param name="NumPosts">The number of posts</param>
            <param name="Views">The number of views</param>
            <param name="LastPostID">The last post identifier</param>
            <param name="LastPostUserID">The last post user identifier</param>
            <param name="LastPostTime">The last post date and time</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.DeletePost(System.Int32)">
            <summary>
            Deletes a post
            </summary>
            <param name="ForumPostID">The post identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.GetPostByID(System.Int32)">
            <summary>
            Gets a post
            </summary>
            <param name="ForumPostID">The post identifier</param>
            <returns>Post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.GetAllPosts(System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all posts
            </summary>
            <param name="ForumTopicID">The forum topic identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="Keywords">Keywords</param>
            <param name="AscSort">Sort order</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="TotalRecords">Total records</param>
            <returns>Posts</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.InsertPost(System.Int32,System.Int32,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Inserts a post
            </summary>
            <param name="ForumTopicID">The forum topic identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="Text">The text</param>
            <param name="IPAddress">The IP address</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.UpdatePost(System.Int32,System.Int32,System.Int32,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Updates the post
            </summary>
            <param name="ForumPostID">The forum post identifier</param>
            <param name="ForumTopicID">The forum topic identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="Text">The text</param>
            <param name="IPAddress">The IP address</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.DeletePrivateMessage(System.Int32)">
            <summary>
            Deletes a private message
            </summary>
            <param name="ForumPrivateMessageID">The private message identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.GetPrivateMessageByID(System.Int32)">
            <summary>
            Gets a private message
            </summary>
            <param name="ForumPrivateMessageID">The private message identifier</param>
            <returns>Private message</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.GetAllPrivateMessages(System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets private messages
            </summary>
            <param name="FromUserID">The user identifier who sent the message</param>
            <param name="ToUserID">The user identifier who should receive the message</param>
            <param name="IsRead">A value indicating whether loaded messages are read. false - to load not read messages only, 1 to load read messages only, null to load all messages</param>
            <param name="IsDeletedByAuthor">A value indicating whether loaded messages are deleted by author. false - messages are not deleted by author, null to load all messages</param>
            <param name="IsDeletedByRecipient">A value indicating whether loaded messages are deleted by recipient. false - messages are not deleted by recipient, null to load all messages</param>
            <param name="Keywords">Keywords</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="TotalRecords">Total records</param>
            <returns>Private messages</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.InsertPrivateMessage(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Inserts a private message
            </summary>
            <param name="FromUserID">The user identifier who sent the message</param>
            <param name="ToUserID">The user identifier who should receive the message</param>
            <param name="Subject">The subject</param>
            <param name="Text">The text</param>
            <param name="IsRead">The value indivating whether message is read</param>
            <param name="IsDeletedByAuthor">The value indivating whether message is deleted by author</param>
            <param name="IsDeletedByRecipient">The value indivating whether message is deleted by recipient</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Private message</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.UpdatePrivateMessage(System.Int32,System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Updates the private message
            </summary>
            <param name="PrivateMessageID">The private message identifier</param>
            <param name="FromUserID">The user identifier who sent the message</param>
            <param name="ToUserID">The user identifier who should receive the message</param>
            <param name="Subject">The subject</param>
            <param name="Text">The text</param>
            <param name="IsRead">The value indivating whether message is read</param>
            <param name="IsDeletedByAuthor">The value indivating whether message is deleted by author</param>
            <param name="IsDeletedByRecipient">The value indivating whether message is deleted by recipient</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Private message</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.DeleteSubscription(System.Int32)">
            <summary>
            Deletes a forum subscription
            </summary>
            <param name="ForumSubscriptionID">The forum subscription identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.GetSubscriptionByID(System.Int32)">
            <summary>
            Gets a forum subscription
            </summary>
            <param name="ForumSubscriptionID">The forum subscription identifier</param>
            <returns>Forum subscription</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.GetSubscriptionByGUID(System.Int32)">
            <summary>
            Gets a forum subscription
            </summary>
            <param name="SubscriptionGUID">The forum subscription identifier</param>
            <returns>Forum subscription</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.GetAllSubscriptions(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets forum subscriptions
            </summary>
            <param name="UserID">The user identifier</param>
            <param name="ForumID">The forum identifier</param>
            <param name="TopicID">The topic identifier</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="TotalRecords">Total records</param>
            <returns>Forum subscriptions</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.InsertSubscription(System.Guid,System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Inserts a forum subscription
            </summary>
            <param name="SubscriptionGUID">The forum subscription identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="ForumID">The forum identifier</param>
            <param name="TopicID">The topic identifier</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Forum subscription</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SQLForumProvider.UpdateSubscription(System.Int32,System.Guid,System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Updates the forum subscription
            </summary>
            <param name="SubscriptionID">The forum subscription identifier</param>
            <param name="SubscriptionGUID">The forum subscription identifier</param>
            <param name="UserID">The user identifier</param>
            <param name="ForumID">The forum identifier</param>
            <param name="TopicID">The topic identifier</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Forum subscription</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingStatusProvider">
            <summary>
            Shipping status provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingStatusProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingStatusProvider.GetShippingStatusByID(System.Int32)">
            <summary>
            Gets a shipping status by ID
            </summary>
            <param name="ShippingStatusID">Shipping status identifier</param>
            <returns>Shipping status</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingStatusProvider.GetAllShippingStatuses">
            <summary>
            Gets all shipping statuses
            </summary>
            <returns>Shipping status collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByTotalProvider">
            <summary>
            ShippingByTotal provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByTotalProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByTotalProvider.GetByID(System.Int32)">
            <summary>
            Get a ShippingByTotal
            </summary>
            <param name="ShippingByTotalID">ShippingByTotal identifier</param>
            <returns>ShippingByTotal</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByTotalProvider.DeleteShippingByTotal(System.Int32)">
            <summary>
            Deletes a ShippingByTotal
            </summary>
            <param name="ShippingByTotalID">ShippingByTotal identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByTotalProvider.GetAll">
            <summary>
            Gets all ShippingByTotals
            </summary>
            <returns>ShippingByTotal collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByTotalProvider.InsertShippingByTotal(System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Inserts a ShippingByTotal
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="From">The "from" value</param>
            <param name="To">The "to" value</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="ShippingChargePercentage">The shipping charge percentage</param>
            <param name="ShippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByTotal</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByTotalProvider.UpdateShippingByTotal(System.Int32,System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Updates the ShippingByTotal
            </summary>
            <param name="ShippingByTotalID">The ShippingByTotal identifier</param>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="From">The "from" value</param>
            <param name="To">The "to" value</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="ShippingChargePercentage">The shipping charge percentage</param>
            <param name="ShippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByTotal</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByTotalProvider.GetAllByShippingMethodID(System.Int32)">
            <summary>
            Gets all ShippingByTotals by shipping method identifier
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <returns>ShippingByTotal collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Media.SQLDownloadProvider">
            <summary>
            Download provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.SQLDownloadProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.SQLDownloadProvider.GetDownloadByID(System.Int32)">
            <summary>
            Gets a download
            </summary>
            <param name="DownloadID">Download identifier</param>
            <returns>Download</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.SQLDownloadProvider.DeleteDownload(System.Int32)">
            <summary>
            Deletes a download
            </summary>
            <param name="DownloadID">Download identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.SQLDownloadProvider.InsertDownload(System.Boolean,System.String,System.Byte[],System.String,System.String,System.Boolean)">
            <summary>
            Inserts a download
            </summary>
            <param name="UseDownloadURL">The value indicating whether DownloadURL property should be used</param>
            <param name="DownloadURL">The download URL</param>
            <param name="DownloadBinary">The download binary</param>
            <param name="ContentType">The mimi-type of the download</param>
            <param name="Extension">The extension</param>
            <param name="IsNew">A value indicating whether the download is new</param>
            <returns>Download</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.SQLDownloadProvider.UpdateDownload(System.Int32,System.Boolean,System.String,System.Byte[],System.String,System.String,System.Boolean)">
            <summary>
            Updates the download
            </summary>
            <param name="DownloadID">The download identifier</param>
            <param name="UseDownloadURL">The value indicating whether DownloadURL property should be used</param>
            <param name="DownloadURL">The download URL</param>
            <param name="DownloadBinary">The download binary</param>
            <param name="ContentType">The mime-type of the download</param>
            <param name="Extension">The extension</param>
            <param name="IsNew">A value indicating whether the download is new</param>
            <returns>Download</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingMethodProvider">
            <summary>
            Shipping method provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingMethodProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingMethodProvider.DeleteShippingMethod(System.Int32)">
            <summary>
            Deletes a shipping method
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingMethodProvider.GetShippingMethodByID(System.Int32)">
            <summary>
            Gets a shipping method
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <returns>Shipping method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingMethodProvider.GetAllShippingMethods">
            <summary>
            Gets all shipping methods
            </summary>
            <returns>Shipping method collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingMethodProvider.InsertShippingMethod(System.String,System.String,System.Int32)">
            <summary>
            Inserts a shipping method
            </summary>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Shipping method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingMethodProvider.UpdateShippingMethod(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Updates the shipping method
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Shipping method</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByWeightProvider">
            <summary>
            ShippingByWeight provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByWeightProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByWeightProvider.GetByID(System.Int32)">
            <summary>
            Gets a ShippingByWeight
            </summary>
            <param name="ShippingByWeightID">ShippingByWeight identifier</param>
            <returns>ShippingByWeight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByWeightProvider.DeleteShippingByWeight(System.Int32)">
            <summary>
            Deletes a ShippingByWeight
            </summary>
            <param name="ShippingByWeightID">ShippingByWeight identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByWeightProvider.GetAll">
            <summary>
            Gets all ShippingByWeights
            </summary>
            <returns>ShippingByWeight collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByWeightProvider.InsertShippingByWeight(System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Inserts a ShippingByWeight
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="From">The "from" value</param>
            <param name="To">The "to" value</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="ShippingChargePercentage">The shipping charge percentage</param>
            <param name="ShippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByWeight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByWeightProvider.UpdateShippingByWeight(System.Int32,System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Updates the ShippingByWeight
            </summary>
            <param name="ShippingByWeightID">The ShippingByWeight identifier</param>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="From">The "from" value</param>
            <param name="To">The "to" value</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="ShippingChargePercentage">The shipping charge percentage</param>
            <param name="ShippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByWeight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByWeightProvider.GetAllByShippingMethodID(System.Int32)">
            <summary>
            Gets all ShippingByWeights by shipping method identifier
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <returns>ShippingByWeight collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper">
            <summary>
            Data helper class
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.CreateConnection(System.String)">
            <summary>
            Creates a connection to a data soruce
            </summary>
            <param name="ConnectionString">Connection string</param>
            <returns>Database instance</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetBoolean(System.Data.IDataReader,System.String)">
            <summary>
            Gets a boolean value of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>A boolean value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetBytes(System.Data.IDataReader,System.String)">
            <summary>
            Gets a byte array of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>A byte array</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetDateTime(System.Data.IDataReader,System.String)">
            <summary>
            Gets a datetime value of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>A date time</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetUtcDateTime(System.Data.IDataReader,System.String)">
            <summary>
            Gets an UTC datetime value of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>A date time</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetNullableDateTime(System.Data.IDataReader,System.String)">
            <summary>
            Gets a nullable datetime value of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>A date time if exists; otherwise, null</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetNullableUtcDateTime(System.Data.IDataReader,System.String)">
            <summary>
            Gets a nullable UTC datetime value of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>A date time if exists; otherwise, null</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetDecimal(System.Data.IDataReader,System.String)">
            <summary>
            Gets a decimal value of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>A decimal value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetDouble(System.Data.IDataReader,System.String)">
            <summary>
            Gets a double value of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>A double value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetGuid(System.Data.IDataReader,System.String)">
            <summary>
            Gets a GUID value of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>A GUID value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetInt(System.Data.IDataReader,System.String)">
            <summary>
            Gets an integer value of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>An integer value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetNullableInt(System.Data.IDataReader,System.String)">
            <summary>
            Gets a nullable integer value of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>A nullable integer value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetString(System.Data.IDataReader,System.String)">
            <summary>
            Gets a string of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>A string value</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.SQLCurrencyProvider">
            <summary>
            Currency provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLCurrencyProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLCurrencyProvider.DeleteCurrency(System.Int32)">
            <summary>
            Deletes currency
            </summary>
            <param name="CurrencyID">Currency identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLCurrencyProvider.GetCurrencyByID(System.Int32)">
            <summary>
            Gets a currency
            </summary>
            <param name="CurrencyID">Currency identifier</param>
            <returns>Currency</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLCurrencyProvider.GetAllCurrencies(System.Boolean)">
            <summary>
            Gets all currencies
            </summary>
            <returns>Currency collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLCurrencyProvider.InsertCurrency(System.String,System.String,System.Decimal,System.String,System.String,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a currency
            </summary>
            <param name="Name">The name</param>
            <param name="CurrencyCode">The currency code</param>
            <param name="Rate">The rate</param>
            <param name="DisplayLocale">The display locale</param>
            <param name="CustomFormatting">The custom formatting</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>A currency</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLCurrencyProvider.UpdateCurrency(System.Int32,System.String,System.String,System.Decimal,System.String,System.String,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the currency
            </summary>
            <param name="CurrencyID">Currency identifier</param>
            <param name="Name">The name</param>
            <param name="CurrencyCode">The currency code</param>
            <param name="Rate">The rate</param>
            <param name="DisplayLocale">The display locale</param>
            <param name="CustomFormatting">The custom formatting</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>A currency</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SQLNewsProvider">
            <summary>
            News provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SQLNewsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SQLNewsProvider.GetNewsByID(System.Int32)">
            <summary>
            Gets a news
            </summary>
            <param name="NewsID">The news identifier</param>
            <returns>News</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SQLNewsProvider.DeleteNews(System.Int32)">
            <summary>
            Deletes a news
            </summary>
            <param name="NewsID">The news identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SQLNewsProvider.GetNews(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets news item collection
            </summary>
            <param name="LanguageID">Language identifier. 0 if you want to get all news</param>
            <param name="NewsCount">News item count. 0 if you want to get all news</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>News item collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SQLNewsProvider.InsertNews(System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Inserts a news item
            </summary>
            <param name="LanguageID">The language identifier</param>
            <param name="Title">The news title</param>
            <param name="Short">The short text</param>
            <param name="Full">The full text</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="AllowComments">A value indicating whether the entity allows comments</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>News item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SQLNewsProvider.UpdateNews(System.Int32,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Updates the news item
            </summary>
            <param name="NewsID">The news identifier</param>
            <param name="LanguageID">The language identifier</param>
            <param name="Title">The news title</param>
            <param name="Short">The short text</param>
            <param name="Full">The full text</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="AllowComments">A value indicating whether the entity allows comments</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>News item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SQLNewsProvider.GetNewsCommentByID(System.Int32)">
            <summary>
            Gets a news comment
            </summary>
            <param name="NewsCommentID">News comment identifer</param>
            <returns>News comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SQLNewsProvider.GetNewsCommentsByNewsID(System.Int32)">
            <summary>
            Gets a news comment collection by news identifier
            </summary>
            <param name="NewsID">The news identifier</param>
            <returns>News comment collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SQLNewsProvider.DeleteNewsComment(System.Int32)">
            <summary>
            Deletes a news comment
            </summary>
            <param name="NewsCommentID">The news comment identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SQLNewsProvider.GetAllNewsComments">
            <summary>
            Gets all news comments
            </summary>
            <returns>News comment collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SQLNewsProvider.InsertNewsComment(System.Int32,System.Int32,System.String,System.String,System.DateTime)">
            <summary>
            Inserts a news comment
            </summary>
            <param name="NewsID">The news identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="Title">The title</param>
            <param name="Comment">The comment</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>News comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SQLNewsProvider.UpdateNewsComment(System.Int32,System.Int32,System.Int32,System.String,System.String,System.DateTime)">
            <summary>
            Updates the news comment
            </summary>
            <param name="NewsCommentID">The news comment identifier</param>
            <param name="NewsID">The news identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="Title">The title</param>
            <param name="Comment">The comment</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>News comment</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Categories.SQLCategoryProvider">
            <summary>
            Category provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SQLCategoryProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SQLCategoryProvider.GetAllCategories(System.Int32,System.Boolean)">
            <summary>
            Gets all categories
            </summary>
            <param name="ParentCategoryID">Parent category identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Category collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SQLCategoryProvider.GetCategoryByID(System.Int32)">
            <summary>
            Gets a category
            </summary>
            <param name="CategoryID">Category identifier</param>
            <returns>Category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SQLCategoryProvider.InsertCategory(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts category identifier
            </summary>
            <param name="Name">The category name</param>
            <param name="Description">The description</param>
            <param name="TemplateID">The template identifier</param>
            <param name="MetaKeywords">The meta keywords</param>
            <param name="MetaDescription">The meta description</param>
            <param name="MetaTitle">The meta title</param>
            <param name="SEName">The search-engine name</param>
            <param name="ParentCategoryID">The parent category identifier</param>
            <param name="PictureID">The picture identifier</param>
            <param name="PageSize">The page size</param>
            <param name="PriceRanges">The price ranges</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SQLCategoryProvider.UpdateCategory(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the category
            </summary>
            <param name="CategoryID">Category identifier</param>
            <param name="Name">The category name</param>
            <param name="Description">The description</param>
            <param name="TemplateID">The template identifier</param>
            <param name="MetaKeywords">The meta keywords</param>
            <param name="MetaDescription">The meta description</param>
            <param name="MetaTitle">The meta title</param>
            <param name="SEName">The search-engine name</param>
            <param name="ParentCategoryID">The parent category identifier</param>
            <param name="PictureID">The picture identifier</param>
            <param name="PageSize">The page size</param>
            <param name="PriceRanges">The price ranges</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SQLCategoryProvider.DeleteProductCategory(System.Int32)">
            <summary>
            Deletes a product category mapping
            </summary>
            <param name="ProductCategoryID">Product category identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SQLCategoryProvider.GetProductCategoriesByCategoryID(System.Int32,System.Boolean)">
            <summary>
            Gets product category mapping collection
            </summary>
            <param name="CategoryID">Category identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product a category mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SQLCategoryProvider.GetProductCategoriesByProductID(System.Int32,System.Boolean)">
            <summary>
            Gets a product category mapping collection
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product category mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SQLCategoryProvider.GetProductCategoryByID(System.Int32)">
            <summary>
            Gets a product category mapping 
            </summary>
            <param name="ProductCategoryID">Product category mapping identifier</param>
            <returns>Product category mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SQLCategoryProvider.InsertProductCategory(System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Inserts a product category mapping
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="CategoryID">Category identifier</param>
            <param name="IsFeaturedProduct">A value indicating whether the product is featured</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product category mapping </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SQLCategoryProvider.UpdateProductCategory(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Updates the product category mapping 
            </summary>
            <param name="ProductCategoryID">Product category mapping  identifier</param>
            <param name="ProductID">Product identifier</param>
            <param name="CategoryID">Category identifier</param>
            <param name="IsFeaturedProduct">A value indicating whether the product is featured</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product category mapping </returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.SQLTaxCategoryProvider">
            <summary>
            Tax category provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SQLTaxCategoryProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SQLTaxCategoryProvider.DeleteTaxCategory(System.Int32)">
            <summary>
            Deletes a tax category
            </summary>
            <param name="TaxCategoryID">The tax category identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SQLTaxCategoryProvider.GetAllTaxCategories">
            <summary>
            Gets all tax categories
            </summary>
            <returns>Tax category collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SQLTaxCategoryProvider.GetTaxCategoryByID(System.Int32)">
            <summary>
            Gets a tax category
            </summary>
            <param name="TaxCategoryID">Tax category identifier</param>
            <returns>Tax category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SQLTaxCategoryProvider.InsertTaxCategory(System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a tax category
            </summary>
            <param name="Name">The name</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Tax category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SQLTaxCategoryProvider.UpdateTaxCategory(System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the tax category
            </summary>
            <param name="TaxCategoryID">The tax category identifier</param>
            <param name="Name">The name</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Tax category</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.SQLPaymentStatusProvider">
            <summary>
            Payment status provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SQLPaymentStatusProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SQLPaymentStatusProvider.GetPaymentStatusByID(System.Int32)">
            <summary>
            Gets a payment status by ID
            </summary>
            <param name="PaymentStatusID">payment status identifier</param>
            <returns>Payment status</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SQLPaymentStatusProvider.GetAllPaymentStatuses">
            <summary>
            Gets all payment statuses
            </summary>
            <returns>Payment status collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Blog.SQLBlogProvider">
            <summary>
            Blog provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SQLBlogProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SQLBlogProvider.DeleteBlogPost(System.Int32)">
            <summary>
            Deletes an blog post
            </summary>
            <param name="BlogPostID">Blog post identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SQLBlogProvider.GetBlogPostByID(System.Int32)">
            <summary>
            Gets an blog post
            </summary>
            <param name="BlogPostID">Blog post identifier</param>
            <returns>Blog post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SQLBlogProvider.GetAllBlogPosts(System.Int32)">
            <summary>
            Gets all blog posts
            </summary>
            <param name="LanguageID">Language identifier. 0 if you want to get all news</param>
            <returns>Blog posts</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SQLBlogProvider.InsertBlogPost(System.Int32,System.String,System.String,System.Boolean,System.Int32,System.DateTime)">
            <summary>
            Inserts an blog post
            </summary>
            <param name="LanguageID">The language identifier</param>
            <param name="BlogPostTitle">The blog post title</param>
            <param name="BlogPostBody">The blog post title</param>
            <param name="BlogPostAllowComments">A value indicating whether the blog post comments are allowed</param>
            <param name="CreatedByID">The user identifier who created the blog post</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Blog post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SQLBlogProvider.UpdateBlogPost(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.DateTime)">
            <summary>
            Updates the blog post
            </summary>
            <param name="LanguageID">The language identifier</param>
            <param name="BlogPostID">Blog post identifier</param>
            <param name="BlogPostTitle">The blog post title</param>
            <param name="BlogPostBody">The blog post title</param>
            <param name="BlogPostAllowComments">A value indicating whether the blog post comments are allowed</param>
            <param name="CreatedByID">The user identifier who created the blog post</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Blog post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SQLBlogProvider.DeleteBlogComment(System.Int32)">
            <summary>
            Deletes an blog comment
            </summary>
            <param name="BlogCommentID">Blog comment identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SQLBlogProvider.GetBlogCommentByID(System.Int32)">
            <summary>
            Gets an blog comment
            </summary>
            <param name="BlogCommentID">Blog comment identifier</param>
            <returns>An blog comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SQLBlogProvider.GetBlogCommentsByBlogPostID(System.Int32)">
            <summary>
            Gets a collection of blog comments by blog post identifier
            </summary>
            <param name="BlogPostID">Blog post identifier</param>
            <returns>A collection of blog comments</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SQLBlogProvider.GetAllBlogComments">
            <summary>
            Gets all blog comments
            </summary>
            <returns>Blog comments</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SQLBlogProvider.InsertBlogComment(System.Int32,System.Int32,System.String,System.DateTime)">
            <summary>
            Inserts an blog comment
            </summary>
            <param name="BlogPostID">The blog post identifier</param>
            <param name="CustomerID">The customer identifier who commented the blog post</param>
            <param name="CommentText">The comment text</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Blog comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SQLBlogProvider.UpdateBlogComment(System.Int32,System.Int32,System.Int32,System.String,System.DateTime)">
            <summary>
            Updates the blog comment
            </summary>
            <param name="BlogCommentID">The blog comment identifier</param>
            <param name="BlogPostID">The blog post identifier</param>
            <param name="CustomerID">The customer identifier who commented the blog post</param>
            <param name="CommentText">The comment text</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <returns>Blog comment</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SQLDiscountProvider">
            <summary>
            Discount provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SQLDiscountProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SQLDiscountProvider.GetDiscountByID(System.Int32)">
            <summary>
            Gets a discount
            </summary>
            <param name="DiscountID">Discount identifier</param>
            <returns>Discount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SQLDiscountProvider.GetAllDiscounts(System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Gets all discounts
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="DiscountTypeID">Discount type identifier; null to load all discount</param>
            <returns>Discount collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SQLDiscountProvider.InsertDiscount(System.Int32,System.Int32,System.String,System.Boolean,System.Decimal,System.Decimal,System.DateTime,System.DateTime,System.Boolean,System.String,System.Boolean)">
            <summary>
            Inserts a discount
            </summary>
            <param name="DiscountTypeID">The discount type identifier</param>
            <param name="DiscountRequirementID">The discount requirement identifier</param>
            <param name="Name">The name</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="DiscountPercentage">The discount percentage</param>
            <param name="DiscountAmount">The discount amount</param>
            <param name="StartDate">The discount start date and time</param>
            <param name="EndDate">The discount end date and time</param>
            <param name="RequiresCouponCode">The value indicating whether discount requires coupon code</param>
            <param name="CouponCode">The coupon code</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <returns>Discount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SQLDiscountProvider.UpdateDiscount(System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Decimal,System.Decimal,System.DateTime,System.DateTime,System.Boolean,System.String,System.Boolean)">
            <summary>
            Updates the discount
            </summary>
            <param name="DiscountID">Discount identifier</param>
            <param name="DiscountTypeID">The discount type identifier</param>
            <param name="DiscountRequirementID">The discount requirement identifier</param>
            <param name="Name">The name</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="DiscountPercentage">The discount percentage</param>
            <param name="DiscountAmount">The discount amount</param>
            <param name="StartDate">The discount start date and time</param>
            <param name="EndDate">The discount end date and time</param>
            <param name="RequiresCouponCode">The value indicating whether discount requires coupon code</param>
            <param name="CouponCode">The coupon code</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <returns>Discount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SQLDiscountProvider.AddDiscountToProductVariant(System.Int32,System.Int32)">
            <summary>
            Adds a discount to a product variant
            </summary>
            <param name="ProductVariantID">Product variant identifier</param>
            <param name="DiscountID">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SQLDiscountProvider.RemoveDiscountFromProductVariant(System.Int32,System.Int32)">
            <summary>
            Removes a discount from a product variant
            </summary>
            <param name="ProductVariantID">Product variant identifier</param>
            <param name="DiscountID">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SQLDiscountProvider.GetDiscountsByProductVariantID(System.Int32,System.Boolean)">
            <summary>
            Gets a discount collection of a product variant
            </summary>
            <param name="ProductVariantID">Product variant identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Discount collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SQLDiscountProvider.AddDiscountToCategory(System.Int32,System.Int32)">
            <summary>
            Adds a discount to a category
            </summary>
            <param name="CategoryID">Category identifier</param>
            <param name="DiscountID">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SQLDiscountProvider.RemoveDiscountFromCategory(System.Int32,System.Int32)">
            <summary>
            Removes a discount from a category
            </summary>
            <param name="CategoryID">Category identifier</param>
            <param name="DiscountID">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SQLDiscountProvider.GetDiscountsByCategoryID(System.Int32,System.Boolean)">
            <summary>
            Gets a discount collection of a category
            </summary>
            <param name="CategoryID">Category identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Discount collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SQLDiscountProvider.GetAllDiscountRequirements">
            <summary>
            Gets all discount requirements
            </summary>
            <returns>Discount requirement collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SQLDiscountProvider.GetAllDiscountTypes">
            <summary>
            Gets all discount types
            </summary>
            <returns>Discount type collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.SQLPaymentMethodProvider">
            <summary>
            Payment method provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SQLPaymentMethodProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SQLPaymentMethodProvider.DeletePaymentMethod(System.Int32)">
            <summary>
            Deletes a payment method
            </summary>
            <param name="PaymentMethodID">Payment method identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SQLPaymentMethodProvider.GetPaymentMethodByID(System.Int32)">
            <summary>
            Gets a payment method
            </summary>
            <param name="PaymentMethodID">Payment method identifier</param>
            <returns>Payment method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SQLPaymentMethodProvider.GetPaymentMethodBySystemKeyword(System.String)">
            <summary>
            Gets a payment method
            </summary>
            <param name="SystemKeyword">Payment method system keyword</param>
            <returns>Payment method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SQLPaymentMethodProvider.GetAllPaymentMethods(System.Boolean)">
            <summary>
            Gets all payment methods
            </summary>
            <returns>Payment method collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SQLPaymentMethodProvider.InsertPaymentMethod(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Inserts a payment method
            </summary>
            <param name="Name">The name</param>
            <param name="VisibleName">The visible name</param>
            <param name="Description">The description</param>
            <param name="ConfigureTemplatePath">The configure template path</param>
            <param name="UserTemplatePath">The user template path</param>
            <param name="ClassName">The class name</param>
            <param name="SystemKeyword">The system keyword</param>
            <param name="IsActive">A value indicating whether the payment method is active</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Payment method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SQLPaymentMethodProvider.UpdatePaymentMethod(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Updates the payment method
            </summary>
            <param name="PaymentMethodID">The payment method identifer</param>
            <param name="Name">The name</param>
            <param name="VisibleName">The visible name</param>
            <param name="Description">The description</param>
            <param name="ConfigureTemplatePath">The configure template path</param>
            <param name="UserTemplatePath">The user template path</param>
            <param name="ClassName">The class name</param>
            <param name="SystemKeyword">The system keyword</param>
            <param name="IsActive">A value indicating whether the payment method is active</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Payment method</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Measures.SQLMeasureProvider">
            <summary>
            Measure provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.SQLMeasureProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.SQLMeasureProvider.GetMeasureDimensionByID(System.Int32)">
            <summary>
            Gets a measure dimension by identifier
            </summary>
            <param name="MeasureDimensionID">Measure dimension identifier</param>
            <returns>Measure dimension</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.SQLMeasureProvider.GetAllMeasureDimensions">
            <summary>
            Gets all measure dimensions
            </summary>
            <returns>Measure dimension collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.SQLMeasureProvider.GetMeasureWeightByID(System.Int32)">
            <summary>
            Gets a measure weight by identifier
            </summary>
            <param name="MeasureWeightID">Measure weight identifier</param>
            <returns>Measure weight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.SQLMeasureProvider.GetAllMeasureWeights">
            <summary>
            Gets all measure weights
            </summary>
            <returns>Measure weight collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.SQLSettingProvider">
            <summary>
            Category provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.SQLSettingProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.SQLSettingProvider.GetSettingByID(System.Int32)">
            <summary>
            Gets a setting
            </summary>
            <param name="SettingID">Setting identifer</param>
            <returns>Setting</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.SQLSettingProvider.DeleteSetting(System.Int32)">
            <summary>
            Deletes a setting
            </summary>
            <param name="SettingID">Setting identifer</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.SQLSettingProvider.GetAllSettings">
            <summary>
            Gets all settings
            </summary>
            <returns>Setting collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.SQLSettingProvider.AddSetting(System.String,System.String,System.String)">
            <summary>
            Adds a setting
            </summary>
            <param name="Name">The name</param>
            <param name="Value">The value</param>
            <param name="Description">The description</param>
            <returns>Setting</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.SQLSettingProvider.UpdateSetting(System.Int32,System.String,System.String,System.String)">
            <summary>
            Updates a setting
            </summary>
            <param name="SettingID">Setting identifier</param>
            <param name="Name">The name</param>
            <param name="Value">The value</param>
            <param name="Description">The description</param>
            <returns>Setting</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Security.SQLBlacklistProvider">
            <summary>
            Blacklist provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SQLBlacklistProvider.GetIpAddressFromReader(System.Data.IDataReader)">
            <summary>
            Gets an IP address from a data reader
            </summary>
            <param name="dataReader">IDataReader</param>
            <returns>DBBannedIpAddress</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SQLBlacklistProvider.GetIpNetworkFromReader(System.Data.IDataReader)">
            <summary>
            Gets an IP network from a data reader
            </summary>
            <param name="dataReader">IDataReader</param>
            <returns>DBBannedIpNetwork</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SQLBlacklistProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. 
            This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SQLBlacklistProvider.GetIpAddressByID(System.Int32)">
            <summary>
            Gets an IP address by its ID
            </summary>
            <param name="bannedIpAddressID">IP address unique identifier</param>
            <returns>IP address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SQLBlacklistProvider.GetIpAddressAll">
            <summary>
            Gets all IP addresses
            </summary>
            <returns>IP address collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SQLBlacklistProvider.InsertBannedIpAddress(System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Inserts an IP address
            </summary>
            <param name="address">IP address</param>
            <param name="comment">Reason why the IP was banned</param>
            <param name="createdOn">When the record was inserted</param>
            <param name="updatedOn">When the record was last updated</param>
            <returns>Banned IP address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SQLBlacklistProvider.UpdateBannedIpAddress(System.Int32,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Updates an IP address
            </summary>
            <param name="bannedIpAddressID">IP address unique identifier</param>
            <param name="address">IP address</param>
            <param name="comment">Reason why the IP was banned</param>
            <param name="createdOn">When the record was last updated</param>
            <param name="updatedOn">When the record was last updated</param>
            <returns>Banned IP address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SQLBlacklistProvider.DeleteBannedIpAddress(System.Int32)">
            <summary>
            Deletes an IP address
            </summary>
            <param name="bannedIpAddressID">IP address unique identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SQLBlacklistProvider.GetIpNetworkByID(System.Int32)">
            <summary>
            Gets an IP Network by its ID
            </summary>
            <param name="bannedIpNetworkID">IP network unique identifier</param>
            <returns>IP network</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SQLBlacklistProvider.GetIpNetworkAll">
            <summary>
            Gets all IP networks
            </summary>
            <returns>IP network collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SQLBlacklistProvider.InsertBannedIpNetwork(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Inserts an IP network
            </summary>
            <param name="startAddress">First IP address in the range</param>
            <param name="endAddress">Last IP address in the range</param>
            <param name="comment">Reason why the IP network was banned</param>
            <param name="ipException">Exceptions within the range</param>
            <param name="createdOn">When the record was inserted</param>
            <param name="updatedOn">When the record was last updated</param>
            <returns>IP network</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SQLBlacklistProvider.UpdateBannedIpNetwork(System.Int32,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Updates an IP network
            </summary>
            <param name="bannedIpNetworkID">IP network unique identifier</param>
            <param name="startAddress">First IP address in the range</param>
            <param name="endAddress">Last IP address in the range</param>
            <param name="comment">Reason why the IP network was banned</param>
            <param name="ipException">Exceptions within the range</param>
            <param name="createdOn">When the record was inserted</param>
            <param name="updatedOn">When the record was last updated</param>
            <returns>IP network</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SQLBlacklistProvider.DeleteBannedIpNetwork(System.Int32)">
            <summary>
            Deletes an IP network
            </summary>
            <param name="bannedIpNetworkID">IP network unique identifier</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.SQLTaxProviderProvider">
            <summary>
            Tax provider provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SQLTaxProviderProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SQLTaxProviderProvider.DeleteTaxProvider(System.Int32)">
            <summary>
            Deletes a tax provider
            </summary>
            <param name="TaxProviderID">Tax provider identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SQLTaxProviderProvider.GetTaxProviderByID(System.Int32)">
            <summary>
            Gets a tax provider
            </summary>
            <param name="TaxProviderID">Tax provider identifier</param>
            <returns>Tax provider</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SQLTaxProviderProvider.GetAllTaxProviders">
            <summary>
            Gets all tax providers
            </summary>
            <returns>Shipping rate computation method collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SQLTaxProviderProvider.InsertTaxProvider(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Inserts a tax provider
            </summary>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="ConfigureTemplatePath">The configure template path</param>
            <param name="ClassName">The class name</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Tax provider</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SQLTaxProviderProvider.UpdateTaxProvider(System.Int32,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Updates the tax provider
            </summary>
            <param name="TaxProviderID">The tax provider identifier</param>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="ConfigureTemplatePath">The configure template path</param>
            <param name="ClassName">The class name</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Tax provider</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Topics.SQLTopicProvider">
            <summary>
            Topic provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SQLTopicProvider.DeleteTopic(System.Int32)">
            <summary>
            Deletes a topic
            </summary>
            <param name="TopicID">Topic identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SQLTopicProvider.InsertTopic(System.String)">
            <summary>
            Inserts a topic
            </summary>
            <param name="Name">The name</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SQLTopicProvider.UpdateTopic(System.Int32,System.String)">
            <summary>
            Updates the topic
            </summary>
            <param name="TopicID">The topic identifier</param>
            <param name="Name">The name</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SQLTopicProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SQLTopicProvider.GetTopicByID(System.Int32)">
            <summary>
            Gets a topic by template identifier
            </summary>
            <param name="TopicID">Topic identifier</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SQLTopicProvider.GetAllTopics">
            <summary>
            Gets all topics
            </summary>
            <returns>Topic collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SQLTopicProvider.GetLocalizedTopicByID(System.Int32)">
            <summary>
            Gets a localized topic by identifier
            </summary>
            <param name="LocalizedTopicID">Localized topic identifier</param>
            <returns>Localized topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SQLTopicProvider.GetLocalizedTopic(System.Int32,System.Int32)">
            <summary>
            Gets a localized topic by parent TopicID and language identifier
            </summary>
            <param name="TopicID">The topic identifier</param>
            <param name="LanguageID">Language identifier</param>
            <returns>Localized topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SQLTopicProvider.GetLocalizedTopic(System.String,System.Int32)">
            <summary>
            Gets a localized topic by name and language identifier
            </summary>
            <param name="Name">Topic name</param>
            <param name="LanguageID">Language identifier</param>
            <returns>Localized topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SQLTopicProvider.DeleteLocalizedTopic(System.Int32)">
            <summary>
            Deletes a localized topic
            </summary>
            <param name="LocalizedTopicID">Topic identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SQLTopicProvider.GetAllLocalizedTopics(System.String)">
            <summary>
            Gets all localized topics
            </summary>
            <param name="TopicName">Topic name</param>
            <returns>Localized topic collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SQLTopicProvider.InsertLocalizedTopic(System.Int32,System.Int32,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Inserts a localized topic
            </summary>
            <param name="TopicID">The topic identifier</param>
            <param name="LanguageID">The language identifier</param>
            <param name="Title">The title</param>
            <param name="Body">The body</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Localized topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SQLTopicProvider.UpdateLocalizedTopic(System.Int32,System.Int32,System.Int32,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Updates the localized topic
            </summary>
            <param name="TopicLocalizedID">The localized topic identifier</param>
            <param name="TopicID">The topic identifier</param>
            <param name="LanguageID">The language identifier</param>
            <param name="Title">The title</param>
            <param name="Body">The body</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Localized topic</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.SQLTaxRateProvider">
            <summary>
            Tax rate provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SQLTaxRateProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SQLTaxRateProvider.DeleteTaxRate(System.Int32)">
            <summary>
            Deletes a tax rate
            </summary>
            <param name="TaxRateID">Tax rate identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SQLTaxRateProvider.GetTaxRateByID(System.Int32)">
            <summary>
            Gets a tax rate
            </summary>
            <param name="TaxRateID">Tax rate identifier</param>
            <returns>Tax rate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SQLTaxRateProvider.GetAllTaxRates">
            <summary>
            Gets all tax rates
            </summary>
            <returns>Tax rate collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SQLTaxRateProvider.InsertTaxRate(System.Int32,System.Int32,System.Int32,System.String,System.Decimal)">
            <summary>
            Inserts a tax rate
            </summary>
            <param name="TaxCategoryID">The tax category identifier</param>
            <param name="CountryID">The country identifier</param>
            <param name="StateProvinceID">The state/province identifier</param>
            <param name="Zip">The zip</param>
            <param name="Percentage">The percentage</param>
            <returns>Tax rate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SQLTaxRateProvider.UpdateTaxRate(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Decimal)">
            <summary>
            Updates the tax rate
            </summary>
            <param name="TaxRateID">The tax rate identifier</param>
            <param name="TaxCategoryID">The tax category identifier</param>
            <param name="CountryID">The country identifier</param>
            <param name="StateProvinceID">The state/province identifier</param>
            <param name="Zip">The zip</param>
            <param name="Percentage">The percentage</param>
            <returns>Tax rate</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Manufacturers.SQLManufacturerProvider">
            <summary>
            Manufacturer provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SQLManufacturerProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SQLManufacturerProvider.GetAllManufacturers(System.Boolean)">
            <summary>
            Gets all manufacturers
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Manufacturer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SQLManufacturerProvider.GetManufacturerByID(System.Int32)">
            <summary>
            Gets a manufacturer
            </summary>
            <param name="ManufacturerID">Manufacturer identifier</param>
            <returns>Manufacturer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SQLManufacturerProvider.InsertManufacturer(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a manufacturer
            </summary>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="TemplateID">The template identifier</param>
            <param name="MetaKeywords">The meta keywords</param>
            <param name="MetaDescription">The meta description</param>
            <param name="MetaTitle">The meta title</param>
            <param name="SEName">The search-engine name</param>
            <param name="PictureID">The parent picture identifier</param>
            <param name="PageSize">The page size</param>
            <param name="PriceRanges">The price ranges</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Manufacturer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SQLManufacturerProvider.UpdateManufacturer(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the manufacturer
            </summary>
            <param name="ManufacturerID">Manufacturer identifier</param>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="TemplateID">The template identifier</param>
            <param name="MetaKeywords">The meta keywords</param>
            <param name="MetaDescription">The meta description</param>
            <param name="MetaTitle">The meta title</param>
            <param name="SEName">The search-engine name</param>
            <param name="PictureID">The parent picture identifier</param>
            <param name="PageSize">The page size</param>
            <param name="PriceRanges">The price ranges</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Manufacturer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SQLManufacturerProvider.DeleteProductManufacturer(System.Int32)">
            <summary>
            Deletes a product manufacturer mapping
            </summary>
            <param name="ProductManufacturerID">Product manufacturer mapping identifer</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SQLManufacturerProvider.GetProductManufacturersByManufacturerID(System.Int32,System.Boolean)">
            <summary>
            Gets product category manufacturer collection
            </summary>
            <param name="ManufacturerID">Manufacturer identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product category manufacturer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SQLManufacturerProvider.GetProductManufacturersByProductID(System.Int32,System.Boolean)">
            <summary>
            Gets a product manufacturer mapping collection
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product manufacturer mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SQLManufacturerProvider.GetProductManufacturerByID(System.Int32)">
            <summary>
            Gets a product manufacturer mapping 
            </summary>
            <param name="ProductManufacturerID">Product manufacturer mapping identifier</param>
            <returns>Product manufacturer mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SQLManufacturerProvider.InsertProductManufacturer(System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Inserts a product manufacturer mapping
            </summary>
            <param name="ProductID">Product identifier</param>
            <param name="ManufacturerID">Manufacturer identifier</param>
            <param name="IsFeaturedProduct">A value indicating whether the product is featured</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product manufacturer mapping </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SQLManufacturerProvider.UpdateProductManufacturer(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Updates the product manufacturer mapping
            </summary>
            <param name="ProductManufacturerID">Product manufacturer mapping identifier</param>
            <param name="ProductID">Product identifier</param>
            <param name="ManufacturerID">Manufacturer identifier</param>
            <param name="IsFeaturedProduct">A value indicating whether the product is featured</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product manufacturer mapping </returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Polls.SQLPollProvider">
            <summary>
            Poll provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SQLPollProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SQLPollProvider.GetPollByID(System.Int32)">
            <summary>
            Gets a poll
            </summary>
            <param name="PollID">The poll identifier</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SQLPollProvider.GetPollBySystemKeyword(System.String)">
            <summary>
            Gets a poll
            </summary>
            <param name="SystemKeyword">Poll system keyword</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SQLPollProvider.GetPolls(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets poll collection
            </summary>
            <param name="LanguageID">Language identifier. 0 if you want to get all news</param>
            <param name="PollCount">Poll count to load. 0 if you want to get all polls</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Poll collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SQLPollProvider.DeletePoll(System.Int32)">
            <summary>
            Deletes a poll
            </summary>
            <param name="PollID">The poll identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SQLPollProvider.InsertPoll(System.Int32,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Inserts a poll
            </summary>
            <param name="LanguageID">The language identifier</param>
            <param name="Name">The name</param>
            <param name="SystemKeyword">The system keyword</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SQLPollProvider.UpdatePoll(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Updates the poll
            </summary>
            <param name="PollID">The poll identifier</param>
            <param name="LanguageID">The language identifier</param>
            <param name="Name">The name</param>
            <param name="SystemKeyword">The system keyword</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SQLPollProvider.PollVotingRecordExists(System.Int32,System.Int32)">
            <summary>
            Is voting record already exists
            </summary>
            <param name="PollID">Poll identifier</param>
            <param name="CustomerID">Customer identifier</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SQLPollProvider.GetPollAnswerByID(System.Int32)">
            <summary>
            Gets a poll answer
            </summary>
            <param name="PollAnswerID">Poll answer identifier</param>
            <returns>Poll answer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SQLPollProvider.GetPollAnswersByPollID(System.Int32)">
            <summary>
            Gets a poll answers by poll identifier
            </summary>
            <param name="PollID">Poll identifier</param>
            <returns>Poll answer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SQLPollProvider.DeletePollAnswer(System.Int32)">
            <summary>
            Deletes a poll answer
            </summary>
            <param name="PollAnswerID">Poll answer identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SQLPollProvider.InsertPollAnswer(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Inserts a poll answer
            </summary>
            <param name="PollID">The poll identifier</param>
            <param name="Name">The poll answer name</param>
            <param name="Count">The current count</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Poll answer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SQLPollProvider.UpdatePollAnswer(System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Updates the poll answer
            </summary>
            <param name="PollAnswerID">The poll answer identifier</param>
            <param name="PollID">The poll identifier</param>
            <param name="Name">The poll answer name</param>
            <param name="Count">The current count</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Poll answer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SQLPollProvider.CreatePollVotingRecord(System.Int32,System.Int32)">
            <summary>
            Creates a poll voting record
            </summary>
            <param name="PollAnswerID">The poll answer identifier</param>
            <param name="CustomerID">Customer identifer</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByWeightAndCountryProvider">
            <summary>
            ShippingByWeightAndCountry provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByWeightAndCountryProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByWeightAndCountryProvider.GetByID(System.Int32)">
            <summary>
            Gets a ShippingByWeightAndCountry
            </summary>
            <param name="ShippingByWeightAndCountryID">ShippingByWeightAndCountry identifier</param>
            <returns>ShippingByWeightAndCountry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByWeightAndCountryProvider.DeleteShippingByWeightAndCountry(System.Int32)">
            <summary>
            Deletes a ShippingByWeightAndCountry
            </summary>
            <param name="ShippingByWeightAndCountryID">ShippingByWeightAndCountry identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByWeightAndCountryProvider.GetAll">
            <summary>
            Gets all ShippingByWeightAndCountrys
            </summary>
            <returns>ShippingByWeightAndCountry collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByWeightAndCountryProvider.InsertShippingByWeightAndCountry(System.Int32,System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Inserts a ShippingByWeightAndCountry
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="CountryID">The country identifier</param>
            <param name="From">The "from" value</param>
            <param name="To">The "to" value</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="ShippingChargePercentage">The shipping charge percentage</param>
            <param name="ShippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByWeightAndCountry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByWeightAndCountryProvider.UpdateShippingByWeightAndCountry(System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Updates the ShippingByWeightAndCountry
            </summary>
            <param name="ShippingByWeightAndCountryID">The ShippingByWeightAndCountry identifier</param>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="CountryID">The country identifier</param>
            <param name="From">The "from" value</param>
            <param name="To">The "to" value</param>
            <param name="UsePercentage">A value indicating whether to use percentage</param>
            <param name="ShippingChargePercentage">The shipping charge percentage</param>
            <param name="ShippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByWeightAndCountry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingByWeightAndCountryProvider.GetAllByShippingMethodIDAndCountryID(System.Int32,System.Int32)">
            <summary>
            Gets all ShippingByWeightAndCountrys by shipping method identifier
            </summary>
            <param name="ShippingMethodID">The shipping method identifier</param>
            <param name="CountryID">The country identifier</param>
            <returns>ShippingByWeightAndCountry collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.SQLShoppingCartProvider">
            <summary>
            Shopping cart provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLShoppingCartProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLShoppingCartProvider.DeleteShoppingCartItem(System.Int32)">
            <summary>
            Deletes a shopping cart item
            </summary>
            <param name="ShoppingCartItemID">The shopping cart item identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLShoppingCartProvider.GetShoppingCartByCustomerSessionGUID(System.Int32,System.Guid)">
            <summary>
            Gets a shopping cart by customer session GUID
            </summary>
            <param name="ShoppingCartTypeID">Shopping cart type identifier</param>
            <param name="CustomerSessionGUID">The customer session identifier</param>
            <returns>Cart</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLShoppingCartProvider.GetShoppingCartItemByID(System.Int32)">
            <summary>
            Gets a shopping cart item
            </summary>
            <param name="ShoppingCartItemID">The shopping cart item identifier</param>
            <returns>Shopping cart item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLShoppingCartProvider.InsertShoppingCartItem(System.Int32,System.Guid,System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a shopping cart item
            </summary>
            <param name="ShoppingCartTypeID">The shopping cart type identifier</param>
            <param name="CustomerSessionGUID">The customer session identifier</param>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="AttributesXML">The product variant attributes</param>
            <param name="Quantity">The quantity</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Shopping cart item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SQLShoppingCartProvider.UpdateShoppingCartItem(System.Int32,System.Int32,System.Guid,System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the shopping cart item
            </summary>
            <param name="ShoppingCartItemID">The shopping cart item identifier</param>
            <param name="ShoppingCartTypeID">The shopping cart type identifier</param>
            <param name="CustomerSessionGUID">The customer session identifier</param>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="AttributesXML">The product variant attributes</param>
            <param name="Quantity">The quantity</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Shopping cart item</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Maintenance.SQLMaintenanceProvider">
            <summary>
            Maintenance provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Maintenance.SQLMaintenanceProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Maintenance.SQLMaintenanceProvider.Reindex">
            <summary>
            Reindex
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingRateComputationMethodProvider">
            <summary>
            Shipping rate computation method provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingRateComputationMethodProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingRateComputationMethodProvider.DeleteShippingRateComputationMethod(System.Int32)">
            <summary>
            Deletes a shipping rate computation method
            </summary>
            <param name="ShippingRateComputationMethodID">Shipping rate computation method identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingRateComputationMethodProvider.GetShippingRateComputationMethodByID(System.Int32)">
            <summary>
            Gets a shipping rate computation method
            </summary>
            <param name="ShippingRateComputationMethodID">Shipping rate computation method identifier</param>
            <returns>Shipping rate computation method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingRateComputationMethodProvider.GetAllShippingRateComputationMethods">
            <summary>
            Gets all shipping rate computation methods
            </summary>
            <returns>Shipping rate computation method collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingRateComputationMethodProvider.InsertShippingRateComputationMethod(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Inserts a shipping rate computation method
            </summary>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="ConfigureTemplatePath">The configure template path</param>
            <param name="ClassName">The class name</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Shipping rate computation method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SQLShippingRateComputationMethodProvider.UpdateShippingRateComputationMethod(System.Int32,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Updates the shipping rate computation method
            </summary>
            <param name="ShippingRateComputationMethodID">The shipping rate computation method identifier</param>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <param name="ConfigureTemplatePath">The configure template path</param>
            <param name="ClassName">The class name</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Shipping rate computation method</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SQLProductAttributeProvider">
            <summary>
            Product attribute provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SQLProductAttributeProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SQLProductAttributeProvider.DeleteProductAttribute(System.Int32)">
            <summary>
            Deletes a product attribute
            </summary>
            <param name="ProductAttributeID">Product attribute identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SQLProductAttributeProvider.GetAllProductAttributes">
            <summary>
            Gets all product attributes
            </summary>
            <returns>Product attribute collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SQLProductAttributeProvider.GetProductAttributeByID(System.Int32)">
            <summary>
            Gets a product attribute 
            </summary>
            <param name="ProductAttributeID">Product attribute identifier</param>
            <returns>Product attribute </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SQLProductAttributeProvider.InsertProductAttribute(System.String,System.String)">
            <summary>
            Inserts a product attribute
            </summary>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <returns>Product attribute </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SQLProductAttributeProvider.UpdateProductAttribute(System.Int32,System.String,System.String)">
            <summary>
            Updates the product attribute
            </summary>
            <param name="ProductAttributeID">Product attribute identifier</param>
            <param name="Name">The name</param>
            <param name="Description">The description</param>
            <returns>Product attribute </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SQLProductAttributeProvider.DeleteProductVariantAttribute(System.Int32)">
            <summary>
            Deletes a product variant attribute mapping
            </summary>
            <param name="ProductVariantAttributeID">Product variant attribute mapping identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SQLProductAttributeProvider.GetProductVariantAttributesByProductVariantID(System.Int32)">
            <summary>
            Gets product variant attribute mappings by product identifier
            </summary>
            <param name="ProductVariantID">The product variant identifier</param>
            <returns>Product variant attribute mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SQLProductAttributeProvider.GetProductVariantAttributeByID(System.Int32)">
            <summary>
            Gets a product variant attribute mapping
            </summary>
            <param name="ProductVariantAttributeID">Product variant attribute mapping identifier</param>
            <returns>Product variant attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SQLProductAttributeProvider.InsertProductVariantAttribute(System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Inserts a product variant attribute mapping
            </summary>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="ProductAttributeID">The product attribute identifier</param>
            <param name="TextPrompt">The text prompt</param>
            <param name="IsRequired">The value indicating whether the entity is required</param>
            <param name="AttributeControlTypeID">The attribute control type identifier</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product variant attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SQLProductAttributeProvider.UpdateProductVariantAttribute(System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Updates the product variant attribute mapping
            </summary>
            <param name="ProductVariantAttributeID">The product variant attribute mapping identifier</param>
            <param name="ProductVariantID">The product variant identifier</param>
            <param name="ProductAttributeID">The product attribute identifier</param>
            <param name="TextPrompt">The text prompt</param>
            <param name="IsRequired">The value indicating whether the entity is required</param>
            <param name="AttributeControlTypeID">The attribute control type identifier</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product variant attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SQLProductAttributeProvider.DeleteProductVariantAttributeValue(System.Int32)">
            <summary>
            Deletes a product variant attribute value
            </summary>
            <param name="ProductVariantAttributeValueID">Product variant attribute value identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SQLProductAttributeProvider.GetProductVariantAttributeValues(System.Int32)">
            <summary>
            Gets product variant attribute values by product identifier
            </summary>
            <param name="ProductVariantAttributeID">The product variant attribute mapping identifier</param>
            <returns>Product variant attribute mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SQLProductAttributeProvider.GetProductVariantAttributeValueByID(System.Int32)">
            <summary>
            Gets a product variant attribute value
            </summary>
            <param name="ProductVariantAttributeValueID">Product variant attribute value identifier</param>
            <returns>Product variant attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SQLProductAttributeProvider.InsertProductVariantAttributeValue(System.Int32,System.String,System.Decimal,System.Decimal,System.Boolean,System.Int32)">
            <summary>
            Inserts a product variant attribute value
            </summary>
            <param name="ProductVariantAttributeID">The product variant attribute mapping identifier</param>
            <param name="Name">The product variant attribute name</param>
            <param name="PriceAdjustment">The price adjustment</param>
            <param name="WeightAdjustment">The weight adjustment</param>
            <param name="IsPreSelected">The value indicating whether the value is pre-selected</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product variant attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SQLProductAttributeProvider.UpdateProductVariantAttributeValue(System.Int32,System.Int32,System.String,System.Decimal,System.Decimal,System.Boolean,System.Int32)">
            <summary>
            Updates the product variant attribute value
            </summary>
            <param name="ProductVariantAttributeValueID">The product variant attribute value identifier</param>
            <param name="ProductVariantAttributeID">The product variant attribute mapping identifier</param>
            <param name="Name">The product variant attribute name</param>
            <param name="PriceAdjustment">The price adjustment</param>
            <param name="WeightAdjustment">The weight adjustment</param>
            <param name="IsPreSelected">The value indicating whether the value is pre-selected</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Product variant attribute value</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.SQLCreditCardTypeProvider">
            <summary>
            Credit card type provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SQLCreditCardTypeProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SQLCreditCardTypeProvider.GetCreditCardTypeByID(System.Int32)">
            <summary>
            Gets a credit card type
            </summary>
            <param name="CreditCardTypeID">Credit card type identifier</param>
            <returns>Credit card type</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SQLCreditCardTypeProvider.GetAllCreditCardTypes">
            <summary>
            Gets all credit card types
            </summary>
            <returns>Credit card type collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SQLCreditCardTypeProvider.InsertCreditCardType(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Inserts a credit card type
            </summary>
            <param name="Name">The name</param>
            <param name="SystemKeyword">The system keyword</param>
            <param name="DisplayOrder">The display order</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <returns>A credit card type</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SQLCreditCardTypeProvider.UpdateCreditCardType(System.Int32,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Updates the credit card type
            </summary>
            <param name="CreditCardTypeID">Credit card type identifier</param>
            <param name="Name">The name</param>
            <param name="SystemKeyword">The system keyword</param>
            <param name="DisplayOrder">The display order</param>
            <param name="Deleted">A value indicating whether the entity has been deleted</param>
            <returns>A credit card type</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Messages.SQLMessageTemplateProvider">
            <summary>
            Message template provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SQLMessageTemplateProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SQLMessageTemplateProvider.GetMessageTemplateByID(System.Int32)">
            <summary>
            Gets a message template by template identifier
            </summary>
            <param name="MessageTemplateID">Message template identifier</param>
            <returns>Message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SQLMessageTemplateProvider.GetAllMessageTemplates">
            <summary>
            Gets all message templates
            </summary>
            <returns>Message template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SQLMessageTemplateProvider.GetLocalizedMessageTemplateByID(System.Int32)">
            <summary>
            Gets a localized message template by identifier
            </summary>
            <param name="LocalizedMessageTemplateID">Localized message template identifier</param>
            <returns>Localized message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SQLMessageTemplateProvider.GetLocalizedMessageTemplate(System.String,System.Int32)">
            <summary>
            Gets a localized message template by name and language identifier
            </summary>
            <param name="Name">Message template name</param>
            <param name="LanguageID">Language identifier</param>
            <returns>Localized message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SQLMessageTemplateProvider.DeleteLocalizedMessageTemplate(System.Int32)">
            <summary>
            Deletes a localized message template
            </summary>
            <param name="LocalizedMessageTemplateID">Message template identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SQLMessageTemplateProvider.GetAllLocalizedMessageTemplates(System.String)">
            <summary>
            Gets all localized message templates
            </summary>
            <param name="MessageTemplatesName">Message template name</param>
            <returns>Localized message template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SQLMessageTemplateProvider.InsertLocalizedMessageTemplate(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Inserts a localized message template
            </summary>
            <param name="MessageTemplateID">The message template identifier</param>
            <param name="LanguageID">The language identifier</param>
            <param name="Subject">The subject</param>
            <param name="Body">The body</param>
            <returns>Localized message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SQLMessageTemplateProvider.UpdateLocalizedMessageTemplate(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Updates the localized message template
            </summary>
            <param name="MessageTemplateLocalizedID">The localized message template identifier</param>
            <param name="MessageTemplateID">The message template identifier</param>
            <param name="LanguageID">The language identifier</param>
            <param name="Subject">The subject</param>
            <param name="Body">The body</param>
            <returns>Localized message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SQLMessageTemplateProvider.GetQueuedEmailByID(System.Int32)">
            <summary>
            Gets a queued email by identifier
            </summary>
            <param name="QueuedEmailID">Email item identifier</param>
            <returns>Email item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SQLMessageTemplateProvider.DeleteQueuedEmail(System.Int32)">
            <summary>
            Deletes a queued email
            </summary>
            <param name="QueuedEmailID">Email item identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SQLMessageTemplateProvider.GetAllQueuedEmails(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Boolean,System.Int32)">
            <summary>
            Gets all queued emails
            </summary>
            <param name="FromEmail">From Email</param>
            <param name="ToEmail">To Email</param>
            <param name="StartTime">The start time</param>
            <param name="EndTime">The end time</param>
            <param name="QueuedEmailCount">Email item count. 0 if you want to get all items</param>
            <param name="LoadNotSentItemsOnly">A value indicating whether to load only not sent emails</param>
            <param name="MaxSendTries">Maximum send tries</param>
            <returns>Email item collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SQLMessageTemplateProvider.InsertQueuedEmail(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.Int32,System.Nullable{System.DateTime})">
            <summary>
            Inserts a queued email
            </summary>
            <param name="Priority">The priority</param>
            <param name="From">From</param>
            <param name="FromName">From name</param>
            <param name="To">To</param>
            <param name="ToName">To name</param>
            <param name="Cc">Cc</param>
            <param name="Bcc">Bcc</param>
            <param name="Subject">Subject</param>
            <param name="Body">Body</param>
            <param name="CreatedOn">The date and time of item creation</param>
            <param name="SendTries">The send tries</param>
            <param name="SentOn">The sent date and time. Null if email is not sent yet</param>
            <returns>Queued email</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SQLMessageTemplateProvider.UpdateQueuedEmail(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.Int32,System.Nullable{System.DateTime})">
            <summary>
            Updates a queued email
            </summary>
            <param name="QueuedEmailID">Email item identifier</param>
            <param name="Priority">The priority</param>
            <param name="From">From</param>
            <param name="FromName">From name</param>
            <param name="To">To</param>
            <param name="ToName">To name</param>
            <param name="Cc">Cc</param>
            <param name="Bcc">Bcc</param>
            <param name="Subject">Subject</param>
            <param name="Body">Body</param>
            <param name="CreatedOn">The date and time of item creation</param>
            <param name="SendTries">The send tries</param>
            <param name="SentOn">The sent date and time. Null if email is not sent yet</param>
            <returns>Queued email</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.SQLStateProvinceProvider">
            <summary>
            State/province provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLStateProvinceProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLStateProvinceProvider.DeleteStateProvince(System.Int32)">
            <summary>
            Deletes a state/province
            </summary>
            <param name="StateProvinceID">The state/province identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLStateProvinceProvider.GetStateProvinceByID(System.Int32)">
            <summary>
            Gets a state/province
            </summary>
            <param name="StateProvinceID">The state/province identifier</param>
            <returns>State/province</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLStateProvinceProvider.GetStateProvinceByAbbreviation(System.String)">
            <summary>
            Gets a state/province 
            </summary>
            <param name="Abbreviation">The state/province abbreviation</param>
            <returns>State/province</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLStateProvinceProvider.GetStateProvincesByCountryID(System.Int32)">
            <summary>
            Gets a state/province collection by country identifier
            </summary>
            <param name="CountryID">Country identifier</param>
            <returns>State/province collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLStateProvinceProvider.InsertStateProvince(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Inserts a state/province
            </summary>
            <param name="CountryID">The country identifier</param>
            <param name="Name">The name</param>
            <param name="Abbreviation">The abbreviation</param>
            <param name="DisplayOrder">The display order</param>
            <returns>State/province</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLStateProvinceProvider.UpdateStateProvince(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Updates a state/province
            </summary>
            <param name="StateProvinceID">The state/province identifier</param>
            <param name="CountryID">The country identifier</param>
            <param name="Name">The name</param>
            <param name="Abbreviation">The abbreviation</param>
            <param name="DisplayOrder">The display order</param>
            <returns>State/province</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.SQLCountryProvider">
            <summary>
            Country provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLCountryProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLCountryProvider.DeleteCountry(System.Int32)">
            <summary>
            Deletes a country
            </summary>
            <param name="CountryID">Country identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLCountryProvider.GetAllCountries(System.Boolean)">
            <summary>
            Gets all countries
            </summary>
            <returns>Country collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLCountryProvider.GetAllCountriesForRegistration(System.Boolean)">
            <summary>
            Gets all countries that allow registration
            </summary>
            <returns>Country collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLCountryProvider.GetAllCountriesForBilling(System.Boolean)">
            <summary>
            Gets all countries that allow billing
            </summary>
            <returns>Country collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLCountryProvider.GetAllCountriesForShipping(System.Boolean)">
            <summary>
            Gets all countries that allow shipping
            </summary>
            <returns>Country collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLCountryProvider.GetCountryByID(System.Int32)">
            <summary>
            Gets a country 
            </summary>
            <param name="CountryID">Country identifier</param>
            <returns>Country</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLCountryProvider.GetCountryByTwoLetterISOCode(System.String)">
            <summary>
            Gets a country by two letter ISO code
            </summary>
            <param name="TwoLetterISOCode">Country two letter ISO code</param>
            <returns>Country</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLCountryProvider.GetCountryByThreeLetterISOCode(System.String)">
            <summary>
            Gets a country by three letter ISO code
            </summary>
            <param name="ThreeLetterISOCode">Country three letter ISO code</param>
            <returns>Country</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLCountryProvider.InsertCountry(System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Inserts a country
            </summary>
            <param name="Name">The name</param>
            <param name="AllowsRegistration">A value indicating whether registration is allowed to this country</param>
            <param name="AllowsBilling">A value indicating whether billing is allowed to this country</param>
            <param name="AllowsShipping">A value indicating whether shipping is allowed to this country</param>
            <param name="TwoLetterISOCode">The two letter ISO code</param>
            <param name="ThreeLetterISOCode">The three letter ISO code</param>
            <param name="NumericISOCode">The numeric ISO code</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Country</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SQLCountryProvider.UpdateCountry(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Updates the country
            </summary>
            <param name="CountryID">The country identifier</param>
            <param name="Name">The name</param>
            <param name="AllowsRegistration">A value indicating whether registration is allowed to this country</param>
            <param name="AllowsBilling">A value indicating whether billing is allowed to this country</param>
            <param name="AllowsShipping">A value indicating whether shipping is allowed to this country</param>
            <param name="TwoLetterISOCode">The two letter ISO code</param>
            <param name="ThreeLetterISOCode">The three letter ISO code</param>
            <param name="NumericISOCode">The numeric ISO code</param>
            <param name="Published">A value indicating whether the entity is published</param>
            <param name="DisplayOrder">The display order</param>
            <returns>Country</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider">
            <summary>
            Customer provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.DeleteAddress(System.Int32)">
            <summary>
            Deletes an address by address identifier 
            </summary>
            <param name="AddressID">Address identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.GetAddressByID(System.Int32)">
            <summary>
            Gets an address by address identifier
            </summary>
            <param name="AddressID">Address identifier</param>
            <returns>Address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.GetAddressesByCustomerID(System.Int32,System.Boolean)">
            <summary>
            Gets a collection of addresses by customer identifier
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="GetBillingAddresses">Gets or sets a value indicating whether the addresses are billing or shipping</param>
            <returns>A collection of addresses</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.InsertAddress(System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts an address
            </summary>
            <param name="CustomerID">The customer identifier</param>
            <param name="IsBillingAddress">A value indicating whether the address is billing or shipping</param>
            <param name="FirstName">The first name</param>
            <param name="LastName">The last name</param>
            <param name="PhoneNumber">The phone number</param>
            <param name="Email">The email</param>
            <param name="FaxNumber">The fax number</param>
            <param name="Company">The company</param>
            <param name="Address1">The address 1</param>
            <param name="Address2">The address 2</param>
            <param name="City">The city</param>
            <param name="StateProvinceID">The state/province identifier</param>
            <param name="ZipPostalCode">The zip/postal code</param>
            <param name="CountryID">The country identifier</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>An address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.UpdateAddress(System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the address
            </summary>
            <param name="AddressID">The address identifier</param>
            <param name="CustomerID">The customer identifier</param>
            <param name="IsBillingAddress">A value indicating whether the address is billing or shipping</param>
            <param name="FirstName">The first name</param>
            <param name="LastName">The last name</param>
            <param name="PhoneNumber">The phone number</param>
            <param name="Email">The email</param>
            <param name="FaxNumber">The fax number</param>
            <param name="Company">The company</param>
            <param name="Address1">The address 1</param>
            <param name="Address2">The address 2</param>
            <param name="City">The city</param>
            <param name="StateProvinceID">The state/province identifier</param>
            <param name="ZipPostalCode">The zip/postal code</param>
            <param name="CountryID">The country identifier</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>An address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.GetAllCustomers(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all customers
            </summary>
            <param name="RegistrationFrom">Customer registration from; null to load all customers</param>
            <param name="RegistrationTo">Customer registration to; null to load all customers</param>
            <param name="Email">Customer Email</param>
            <param name="Username">Customer username</param>
            <param name="DontLoadGuestCustomers">A value indicating whether to don't load guest customers</param>
            <param name="PageSize">Page size</param>
            <param name="PageIndex">Page index</param>
            <param name="TotalRecords">Total records</param>
            <returns>Customer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.GetAllCustomersForNewsLetters">
            <summary>
            Gets all customers for newsletters
            </summary>
            <returns>Customer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.GetAffiliatedCustomers(System.Int32)">
            <summary>
            Gets all customers by affiliate identifier
            </summary>
            <param name="AffiliateID">Affiliate identifier</param>
            <returns>Customer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.GetCustomersByCustomerRoleID(System.Int32,System.Boolean)">
            <summary>
            Gets all customers by customer role id
            </summary>
            <param name="CustomerRoleID">Customer role identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Customer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.GetCustomerByEmail(System.String)">
            <summary>
            Gets a customer by email
            </summary>
            <param name="Email">Customer Email</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.GetCustomerByUsername(System.String)">
            <summary>
            Gets a customer by email
            </summary>
            <param name="Username">Customer username</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.GetCustomerByID(System.Int32)">
            <summary>
            Gets a customer
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.GetCustomerByGUID(System.Guid)">
            <summary>
            Gets a customer by GUID
            </summary>
            <param name="CustomerGUID">Customer GUID</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.AddCustomer(System.Guid,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.DateTime,System.String,System.Int32)">
            <summary>
            Adds a customer
            </summary>
            <param name="CustomerGUID">The customer identifier</param>
            <param name="Email">The email</param>
            <param name="Username">The username</param>
            <param name="passwordHash">The password hash</param>
            <param name="saltKey">The salt key</param>
            <param name="AffiliateID">The affiliate identifier</param>
            <param name="BillingAddressID">The billing address identifier</param>
            <param name="ShippingAddressID">The shipping address identifier</param>
            <param name="LastPaymentMethodID">The last payment method identifier</param>
            <param name="LastAppliedCouponCode">The last applied coupon code</param>
            <param name="LanguageID">The language identifier</param>
            <param name="CurrencyID">The currency identifier</param>
            <param name="TaxDisplayTypeID">The tax display type identifier</param>
            <param name="IsTaxExempt">A value indicating whether the customer is tax exempt</param>
            <param name="IsAdmin">A value indicating whether the customer is administrator</param>
            <param name="IsGuest">A value indicating whether the customer is guest</param>
            <param name="IsForumModerator">A value indicating whether the customer is forum moderator</param>
            <param name="TotalForumPosts">A forum post count</param>
            <param name="Signature">Signature</param>
            <param name="AdminComment">Admin comment</param>
            <param name="Active">A value indicating whether the customer is active</param>
            <param name="Deleted">A value indicating whether the customer has been deleted</param>
            <param name="RegistrationDate">The date and time of customer registration</param>
            <param name="TimeZoneID">The time zone identifier</param>
            <param name="AvatarID">The avatar identifier</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.UpdateCustomer(System.Int32,System.Guid,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.DateTime,System.String,System.Int32)">
            <summary>
            Updates the customer
            </summary>
            <param name="CustomerID">The customer identifier</param>
            <param name="CustomerGUID">The customer identifier</param>
            <param name="Email">The email</param>
            <param name="Username">The username</param>
            <param name="PasswordHash">The password hash</param>
            <param name="SaltKey">The salk key</param>
            <param name="AffiliateID">The affiliate identifier</param>
            <param name="BillingAddressID">The billing address identifier</param>
            <param name="ShippingAddressID">The shipping address identifier</param>
            <param name="LastPaymentMethodID">The last payment method identifier</param>
            <param name="LastAppliedCouponCode">The last applied coupon code</param>
            <param name="LanguageID">The language identifier</param>
            <param name="CurrencyID">The currency identifier</param>
            <param name="TaxDisplayTypeID">The tax display type identifier</param>
            <param name="IsTaxExempt">A value indicating whether the customer is tax exempt</param>
            <param name="IsAdmin">A value indicating whether the customer is administrator</param>
            <param name="IsGuest">A value indicating whether the customer is guest</param>
            <param name="IsForumModerator">A value indicating whether the customer is forum moderator</param>
            <param name="TotalForumPosts">A forum post count</param>
            <param name="Signature">Signature</param>
            <param name="AdminComment">Admin comment</param>
            <param name="Active">A value indicating whether the customer is active</param>
            <param name="Deleted">A value indicating whether the customer has been deleted</param>
            <param name="RegistrationDate">The date and time of customer registration</param>
            <param name="TimeZoneID">The time zone identifier</param>
            <param name="AvatarID">The avatar identifier</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.DeleteCustomerAttribute(System.Int32)">
            <summary>
            Deletes a customer attribute
            </summary>
            <param name="CustomerAttributeID">Customer attribute identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.GetCustomerAttributeByID(System.Int32)">
            <summary>
            Gets a customer attribute
            </summary>
            <param name="CustomerAttributeID">Customer attribute identifier</param>
            <returns>A customer attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.GetCustomerAttributesByCustomerID(System.Int32)">
            <summary>
            Gets a collection of customer attributes by customer identifier
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <returns>Customer attributes</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.InsertCustomerAttribute(System.Int32,System.String,System.String)">
            <summary>
            Inserts a customer attribute
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="Key">An attribute key</param>
            <param name="Value">An attribute value</param>
            <returns>A customer attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.UpdateCustomerAttribute(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Updates the customer attribute
            </summary>
            <param name="CustomerAttributeID">Customer attribute identifier</param>
            <param name="CustomerID">Customer identifier</param>
            <param name="Key">An attribute key</param>
            <param name="Value">An attribute value</param>
            <returns>A customer attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.GetCustomerRolesByCustomerID(System.Int32,System.Boolean)">
            <summary>
            Gets customer roles by customer identifier
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Customer role collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.GetAllCustomerRoles(System.Boolean)">
            <summary>
            Gets all customer roles
            </summary>
            <returns>Customer role collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.GetCustomerRoleByID(System.Int32)">
            <summary>
            Gets a customer role
            </summary>
            <param name="CustomerRoleID">Customer role identifier</param>
            <returns>Customer role</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.InsertCustomerRole(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Inserts a customer role
            </summary>
            <param name="Name">The customer role name</param>
            <param name="FreeShipping">A value indicating whether the customer role is marked as free shiping</param>
            <param name="TaxExempt">A value indicating whether the customer role is marked as tax exempt</param>
            <param name="Active">A value indicating whether the customer role is active</param>
            <param name="Deleted">A value indicating whether the customer role has been deleted</param>
            <returns>Customer role</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.UpdateCustomerRole(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Updates the customer role
            </summary>
            <param name="CustomerRoleID">The customer role identifier</param>
            <param name="Name">The customer role name</param>
            <param name="FreeShipping">A value indicating whether the customer role is marked as free shiping</param>
            <param name="TaxExempt">A value indicating whether the customer role is marked as tax exempt</param>
            <param name="Active">A value indicating whether the customer role is active</param>
            <param name="Deleted">A value indicating whether the customer role has been deleted</param>
            <returns>Customer role</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.AddCustomerToRole(System.Int32,System.Int32)">
            <summary>
            Adds a customer to role
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="CustomerRoleID">Customer role identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.RemoveCustomerFromRole(System.Int32,System.Int32)">
            <summary>
            Removes a customer from role
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <param name="CustomerRoleID">Customer role identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.AddDiscountToCustomerRole(System.Int32,System.Int32)">
            <summary>
            Adds a discount to a customer role
            </summary>
            <param name="CustomerRoleID">Customer role identifier</param>
            <param name="DiscountID">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.RemoveDiscountFromCustomerRole(System.Int32,System.Int32)">
            <summary>
            Removes a discount from a customer role
            </summary>
            <param name="CustomerRoleID">Customer role identifier</param>
            <param name="DiscountID">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.GetCustomerRolesByDiscountID(System.Int32,System.Boolean)">
            <summary>
            Gets a customer roles assigned to discount
            </summary>
            <param name="DiscountID">Discount identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Customer roles</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.GetCustomerSessionByGUID(System.Guid)">
            <summary>
            Gets a customer session
            </summary>
            <param name="CustomerSessionGUID">Customer session GUID</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.GetCustomerSessionByCustomerID(System.Int32)">
            <summary>
            Gets a customer session by customer identifier
            </summary>
            <param name="CustomerID">Customer identifier</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.DeleteCustomerSession(System.Guid)">
            <summary>
            Deletes a customer session
            </summary>
            <param name="CustomerSessionGUID">Customer session GUID</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.GetAllCustomerSessions">
            <summary>
            Gets all customer sessions
            </summary>
            <returns>Customer session collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.InsertCustomerSession(System.Guid,System.Int32,System.DateTime,System.Boolean)">
            <summary>
            Inserts a customer session
            </summary>
            <param name="CustomerSessionGUID">Customer session GUID</param>
            <param name="CustomerID">Customer identifier</param>
            <param name="LastAccessed">The last accessed date and time</param>
            <param name="IsExpired">A value indicating whether the customer session is expired</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.UpdateCustomerSession(System.Guid,System.Int32,System.DateTime,System.Boolean)">
            <summary>
            Updates the customer session
            </summary>
            <param name="CustomerSessionGUID">Customer session GUID</param>
            <param name="CustomerID">Customer identifier</param>
            <param name="LastAccessed">The last accessed date and time</param>
            <param name="IsExpired">A value indicating whether the customer session is expired</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SQLCustomerProvider.GetRegisteredCustomersReport(System.DateTime)">
            <summary>
            Gets a report of customers registered from "dateTime" until today
            </summary>
            <param name="dateFrom">Customer registration date</param>
            <returns>Int</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Templates.SQLTemplateProvider">
            <summary>
            Template provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SQLTemplateProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SQLTemplateProvider.DeleteCategoryTemplate(System.Int32)">
            <summary>
            Deletes a category template
            </summary>
            <param name="CategoryTemplateID">Category template identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SQLTemplateProvider.GetAllCategoryTemplates">
            <summary>
            Gets all category templates
            </summary>
            <returns>Category template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SQLTemplateProvider.GetCategoryTemplateByID(System.Int32)">
            <summary>
            Gets a category template
            </summary>
            <param name="CategoryTemplateID">Category template identifier</param>
            <returns>A category template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SQLTemplateProvider.InsertCategoryTemplate(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a category template
            </summary>
            <param name="Name">The name</param>
            <param name="TemplatePath">The template path</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>A category template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SQLTemplateProvider.UpdateCategoryTemplate(System.Int32,System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the category template
            </summary>
            <param name="CategoryTemplateID">Category template identifier</param>
            <param name="Name">The name</param>
            <param name="TemplatePath">The template path</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>A category template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SQLTemplateProvider.DeleteManufacturerTemplate(System.Int32)">
            <summary>
            Deletes a manufacturer template
            </summary>
            <param name="ManufacturerTemplateID">Manufacturer template identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SQLTemplateProvider.GetAllManufacturerTemplates">
            <summary>
            Gets all manufacturer templates
            </summary>
            <returns>Manufacturer template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SQLTemplateProvider.GetManufacturerTemplateByID(System.Int32)">
            <summary>
            Gets a manufacturer template
            </summary>
            <param name="ManufacturerTemplateID">Manufacturer template identifier</param>
            <returns>Manufacturer template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SQLTemplateProvider.InsertManufacturerTemplate(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a manufacturer template
            </summary>
            <param name="Name">The manufacturer template identifier</param>
            <param name="TemplatePath">The template path</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Manufacturer template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SQLTemplateProvider.UpdateManufacturerTemplate(System.Int32,System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the manufacturer template
            </summary>
            <param name="ManufacturerTemplateID">Manufacturer template identifer</param>
            <param name="Name">The manufacturer template identifier</param>
            <param name="TemplatePath">The template path</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Manufacturer template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SQLTemplateProvider.DeleteProductTemplate(System.Int32)">
            <summary>
            Deletes a product template
            </summary>
            <param name="ProductTemplateID">Product template identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SQLTemplateProvider.GetAllProductTemplates">
            <summary>
            Gets all product templates
            </summary>
            <returns>Product template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SQLTemplateProvider.GetProductTemplateByID(System.Int32)">
            <summary>
            Gets a product template
            </summary>
            <param name="ProductTemplateID">Product template identifier</param>
            <returns>Product template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SQLTemplateProvider.InsertProductTemplate(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a product template
            </summary>
            <param name="Name">The name</param>
            <param name="TemplatePath">The template path</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Product template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SQLTemplateProvider.UpdateProductTemplate(System.Int32,System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the product template
            </summary>
            <param name="ProductTemplateID">The product template identifier</param>
            <param name="Name">The name</param>
            <param name="TemplatePath">The template path</param>
            <param name="DisplayOrder">The display order</param>
            <param name="CreatedOn">The date and time of instance creation</param>
            <param name="UpdatedOn">The date and time of instance update</param>
            <returns>Product template</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Localization.SQLLocaleStringResourceProvider">
            <summary>
            Locale string resource provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.SQLLocaleStringResourceProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.SQLLocaleStringResourceProvider.DeleteLocaleStringResource(System.Int32)">
            <summary>
            Deletes a locale string resource
            </summary>
            <param name="LocaleStringResourceID">Locale string resource identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.SQLLocaleStringResourceProvider.GetLocaleStringResourceByID(System.Int32)">
            <summary>
            Gets a locale string resource
            </summary>
            <param name="LocaleStringResourceID">Locale string resource identifier</param>
            <returns>Locale string resource</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.SQLLocaleStringResourceProvider.GetAllResourcesByLanguageID(System.Int32)">
            <summary>
            Gets all locale string resources by language identifier
            </summary>
            <param name="LanguageID">Language identifier</param>
            <returns>Locale string resource collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.SQLLocaleStringResourceProvider.InsertLocaleStringResource(System.Int32,System.String,System.String)">
            <summary>
            Inserts a locale string resource
            </summary>
            <param name="LanguageID">The language identifier</param>
            <param name="ResourceName">The resource name</param>
            <param name="ResourceValue">The resource value</param>
            <returns>Locale string resource</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.SQLLocaleStringResourceProvider.UpdateLocaleStringResource(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Updates the locale string resource
            </summary>
            <param name="LocaleStringResourceID">The locale string resource identifier</param>
            <param name="LanguageID">The language identifier</param>
            <param name="ResourceName">The resource name</param>
            <param name="ResourceValue">The resource value</param>
            <returns>Locale string resource</returns>
        </member>
    </members>
</doc>
